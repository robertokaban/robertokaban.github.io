var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/html/tutorial/pengenalan/",title:"Pengenalan HTML",description:"HTML (Hypertext Markup Language) merupakan bahasa markup yang digunakan untuk menentukan konten dan struktur halaman web.",content:`Apa itu HTML? # HTML adalah HyperText Markup Language. HTML adalah bahasa markup standard untuk membuat halaman Web. HTML mendeskripsikan struktur halaman Web. HTML terdiri dari serangkaian elemen. Elemen HTML memberi tahu browser cara menampilkan konten. Elemen HTML memberi label potongan konten seperti &ldquo;ini adalah judul&rdquo;, &ldquo;ini adalah paragraf&rdquo;, &ldquo;ini adalah tautan&rdquo;, dll. Penulisan Tag HTML # Elemen dalam dokumen HTML ditunjukkan dengan menggunakan tag. Penulisan tag HTML seperti di bawah ini:
&lt;tag&gt;text&lt;/tag&gt; Beberapa tag memiliki teks tambahan di dalamnya yang memberikan informasi tambahan tentang tag; disebut dengan atribut.
&lt;tag atribut1=&quot;nilai1&quot; atribut2=&quot;nilai2&quot;&gt; text &lt;/tag&gt; Nama tag boleh ditulis dengan huruf kecil, huruf kapital, ataupun kombinasi antara huruf kecil dan huruf kapital.
HTML Editor # Teks editor untuk membuat file HTML diantaranya:
Contoh HTML # &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Page Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;My First Heading&lt;/h1&gt; &lt;p&gt;My first paragraph.&lt;/p&gt; &lt;/body&gt; &lt;/html Penjelasan contoh:
Deklarasi &lt;!DOCTYPE html&gt; mendefinisikan bahwa dokumen ini adalah dokumen HTML5 Elemen &lt;html&gt; adalah elemen root dari halaman HTML Elemen &lt;head&gt; berisi informasi meta tentang halaman HTML Elemen &lt;title&gt; menentukan judul untuk halaman HTML (yang ditampilkan di bilah judul browser atau di tab halaman) Elemen &lt;body&gt; mendefinisikan isi dokumen, dan merupakan wadah untuk semua konten yang terlihat, seperti judul, paragraf, gambar, hyperlink, tabel, daftar, dll. Elemen &lt;h1&gt; mendefinisikan heading besar Elemen &lt;p&gt; mendefinisikan paragraf. Elemen HTML? # Elemen HTML didefinisikan oleh tag awal, beberapa konten, dan tag akhir:
&lt;tagname&gt;Konten ada di sini...&lt;/tagname&gt; Elemen HTML adalah segalanya mulai dari tag awal hingga tag akhir:
&lt;h1&gt;Judul Pertama Saya&lt;/h1&gt; &lt;p&gt;Paragraf pertama saya.&lt;/p&gt; Tag Awal Konten Elemen Tag terakhir 01 &lt;h1&gt; Heading Pertama Saya &lt;/h1&gt; 02 &lt;p&gt; Paragraf Pertama Saya &lt;/p&gt; 03 &lt;br&gt; None None Catatan: Beberapa elemen HTML tidak memiliki konten (seperti elemen &lt;br&gt;). Elemen-elemen ini disebut elemen kosong. Elemen kosong tidak memiliki tag akhir!
Web Browser # Tujuan browser web (Chrome, Edge, Firefox, Safari) adalah untuk membaca dokumen HTML dan menampilkannya dengan benar.
Browser tidak menampilkan tag HTML, tetapi menggunakannya untuk menentukan cara menampilkan dokumen
Sejarah HTML # Sejak awal World Wide Web, ada banyak versi HTML:
Tahun Versi 01 1989 Tim Berners-Lee invented www 02 1991 Tim Berners-Lee invented HTML 03 1993 Dave Raggett drafted HTML+ 04 1995 HTML Working Group defined HTML 2.0 05 1997 W3C Recommendation: HTML 3.2 06 1999 W3C Recommendation: HTML 4.01 07 2000 W3C Recommendation: XHTML 1.0 08 2008 WHATWG HTML5 First Public Draft 09 2012 WHATWG HTML5 Living Standard 10 2014 W3C Recommendation: HTML5 11 2016 W3C Candidate Recommendation: HTML 5.1 12 2017 W3C Recommendation: HTML5.1 2nd Edition 13 2017 W3C Recommendation: HTML5.2 Tutorial ini mengikuti standar HTML5 terbaru.
`}),e.add({id:1,href:"/html/tutorial/editor/",title:"Editor HTML",description:"Anda hanya perlu editor teks sederhana untuk mempelajari HTML.Belajar HTML Menggunakan Notepad atau TextEdit",content:`Editor HTML # Anda hanya perlu editor teks sederhana untuk mempelajari HTML.
Belajar HTML Menggunakan Notepad atau TextEdit
Halaman web dapat dibuat dan dimodifikasi dengan menggunakan editor HTML profesional.
Namun, untuk mempelajari HTML kami merekomendasikan editor teks sederhana seperti Notepad (PC) atau TextEdit (Mac).
Kami percaya bahwa menggunakan editor teks sederhana adalah cara yang baik untuk mempelajari HTML.
Membuat file HTML # Ikuti langkah-langkah di bawah ini untuk membuat halaman web pertama Anda dengan Notepad atau TextEdit.
langkah 1: Buka Notepad (PC) Windows 8 atau lebih baru:
Buka Layar Mulai (simbol jendela di kiri bawah layar Anda). Ketik Notepad.
Windows 7 atau sebelumnya:
Buka Mulai &gt; Program &gt; Aksesori &gt; Notepad Langkah 1: Buka TextEdit (Mac)
Buka Finder &gt; Aplikasi &gt; TextEdit
Ubah juga beberapa preferensi agar aplikasi dapat menyimpan file dengan benar. Di Preferensi&gt; Format&gt; pilih &ldquo;Teks Biasa&rdquo;
Kemudian di bawah &ldquo;Buka dan Simpan&rdquo;, centang kotak yang bertuliskan &ldquo;Tampilkan file HTML sebagai kode HTML alih-alih teks yang diformat&rdquo;.
Kemudian buka dokumen baru untuk menempatkan kode.
Langkah 2: Tulis Beberapa HTML Tulis atau salin kode HTML berikut ke Notepad:
Contoh ke HTMLEditors.html
Langkah 3: Simpan Halaman HTML Simpan file di komputer Anda. Pilih File &gt; Simpan sebagai di menu Notepad.
Beri nama file &ldquo;index.html&rdquo; dan atur pengkodean ke UTF-8 (yang merupakan pengkodean pilihan untuk file HTML).
Tip: Anda dapat menggunakan .htm atau .html sebagai ekstensi file. Tidak ada perbedaan, itu terserah Anda.
Langkah 4: Lihat Halaman HTML di Browser Anda Buka file HTML yang disimpan di browser favorit Anda
seperti dibawah ini :
klik dua kali pada file tersebut, atau klik kanan - dan pilih &ldquo;Buka dengan&rdquo;.
Hasilnya akan terlihat seperti ini:
`}),e.add({id:2,href:"/html/tutorial/dokumen-html/",title:"Dokumen HTML",description:"Dokumen **HTML** harus dimulai dengan deklarasi tipe dokumen `<!DOCTYPE html>`",content:`Dokumen HTML # Dokumen HTML harus dimulai dengan deklarasi tipe dokumen &lt;!DOCTYPE html&gt;
Dokumen HTML harus mempunyai tag html. Dimulai dengan tag pembuka &lt;html&gt; dan diakhiri dengan tag penutup &lt;/html&gt;
Dokumen HTML harus mempunyai tag head. Dimulai dengan tag pembuka &lt;head&gt; dan diakhiri dengan tag penutup &lt;/head&gt;
Dokumen HTML harus mempunyai tag body. Dimulai dengan tag pembuka &lt;body dan di akhiri dengan tag penutup &lt;/body&gt;
Element HTML harus terletak di dalam tag body
Contoh Dokumen HTML:
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Hello World&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!--Masukan Element HTML di dalam tag body --&gt; &lt;h1&gt;Hello World&lt;/h1&gt; &lt;p&gt;Halo Dunia&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Hasil # `}),e.add({id:3,href:"/html/tutorial/elements/",title:"Elemen HTML",description:"bisa dikatakan segalanya mulai dari tag awal hingga tag akhir.",content:`Elemen HTML # Apa itu Elemen dalam HTML ? # Elemen HTML bisa dikatakan segalanya mulai dari tag awal hingga tag akhir. Elemen HTML didefinisikan oleh tag awal. Jika elemen berisi konten lain, itu diakhiri dengan tag penutup, di mana nama elemen didahului oleh garis miring seperti yang ditunjukkan di bawah ini dengan beberapa tag.
Contoh Elemen HTML # &lt;p&gt;Elemen HTML&lt;/p&gt; &lt;div&gt;Ini adalah Elemen HTML&lt;/div&gt; Keterangan:
Konten Tag Pembuka Tag Penutup Paragraf &lt;p&gt; &lt;/p&gt; Divisi &lt;div&gt; &lt;/div&gt; Jadi di sini ada dua elemen HTML yaitu, elemen &lt;p&gt;...&lt;/p&gt; dan elemen &lt;div&gt;...&lt;/div&gt;. Ada beberapa elemen yang tidak memerlukan tag penutup seperti &lt;img&gt;, &lt;br&gt;, &lt;hr&gt;, &lt;input&gt;, dll.
`}),e.add({id:4,href:"/mysql/tutorial/pengenalan/",title:"Pengenalan MySQL",description:"Pengenalan MySQL.",content:`Apa itu MySQL # MySQL adalah sebuah sistem manajemen basis data (database management system/DBMS) relasional yang open source atau gratis dan sangat populer. MySQL dikembangkan oleh perusahaan swasta asal Swedia, MySQL AB, yang kemudian diakuisisi oleh perusahaan raksasa teknologi Oracle pada tahun 2008.
MySQL didesain untuk memudahkan pengguna dalam mengakses, mengelola, dan memanipulasi data dalam sebuah basis data secara efisien dan aman. MySQL menggunakan bahasa SQL (Structured Query Language) untuk mengelola dan mengakses data dalam basis data. Bahasa SQL digunakan untuk membuat, memodifikasi, dan menghapus data dalam basis data MySQL.
MySQL biasanya digunakan untuk membangun aplikasi web dan merupakan komponen penting dalam banyak sistem manajemen konten (content management system/CMS) seperti WordPress dan Drupal. MySQL juga mendukung beberapa fitur seperti transaksi ACID (atomicity, consistency, isolation, dan durability) yang memungkinkan pengguna untuk melakukan transaksi yang kompleks dalam basis data.
MySQL memiliki keunggulan dalam hal keamanan, performa, skalabilitas, dan ketersediaan, sehingga membuatnya menjadi pilihan yang tepat untuk pengembangan aplikasi web dan enterprise. Selain itu, MySQL juga kompatibel dengan berbagai sistem operasi seperti Windows, macOS, Linux, dan BSD, sehingga membuatnya mudah digunakan oleh banyak pengembang aplikasi.
Sejarah MySQL # MySQL didirikan pada tahun 1995 oleh tiga pengembang Swedia, yaitu Michael Widenius, David Axmark, dan Allan Larsson. Mereka awalnya mengembangkan MySQL sebagai proyek open source yang diberi nama &ldquo;Mysql&rdquo; (dengan huruf &ldquo;Y&rdquo; kecil), sebuah database management system untuk keperluan internal perusahaan tempat mereka bekerja.
Pada tahun 1996, MySQL dirilis sebagai perangkat lunak open source untuk umum dengan nama &ldquo;MySQL&rdquo; (dengan huruf &ldquo;Y&rdquo; besar). MySQL menjadi populer di kalangan pengembang web, terutama setelah dibundel dengan bahasa pemrograman skrip server-side PHP pada tahun 2000. Pada tahun 2001, MySQL AB didirikan sebagai perusahaan swasta untuk mengembangkan dan memasarkan produk MySQL secara komersial.
MySQL terus mengalami perkembangan dan inovasi, termasuk fitur dan teknologi baru seperti transaksi, indexing, clustering, dan replicasi. MySQL juga mendukung bahasa pemrograman seperti Java, Perl, Python, Ruby, dan C++, serta memiliki konektivitas dengan berbagai jenis platform dan aplikasi.
Pada tahun 2008, Oracle mengakuisisi MySQL AB dengan nilai transaksi sekitar 1 miliar dolar AS. Setelah diakuisisi, MySQL tetap menjadi perangkat lunak open source, namun sejumlah pengembang dan komunitas teknologi menyatakan kekhawatiran atas masa depan MySQL dalam tangan Oracle.
Pengembangan MySQL terus berlanjut dan sejumlah fork atau cabang pengembangan MySQL seperti MariaDB dan Percona Server juga tersedia sebagai alternatif bagi pengguna yang membutuhkan fitur dan kemampuan lebih dari MySQL. Hingga saat ini, MySQL masih digunakan oleh jutaan pengguna dan menjadi salah satu sistem manajemen basis data paling populer dan andal di dunia.
Keunggulan MySQL # Berikut adalah beberapa keunggulan MySQL:
Open source: MySQL adalah perangkat lunak open source yang dapat diunduh dan digunakan secara gratis. Ini memungkinkan banyak pengembang dan organisasi untuk menggunakannya tanpa harus membayar biaya lisensi yang mahal.
Kinerja yang baik: MySQL terkenal karena kinerjanya yang cepat dan efisien. Dalam banyak tes benchmark, MySQL seringkali menduduki peringkat atas dalam hal kinerja database.
Skalabilitas: MySQL dapat digunakan untuk mengelola basis data yang sangat besar dan kompleks dengan jumlah transaksi yang tinggi. MySQL juga mendukung replikasi dan clustering, yang memungkinkan pengguna untuk membuat database yang lebih besar dan lebih andal.
Ketersediaan: MySQL tersedia untuk berbagai jenis sistem operasi seperti Windows, Linux, macOS, dan BSD, sehingga membuatnya mudah digunakan oleh banyak pengembang aplikasi. MySQL juga memiliki dukungan yang baik dari komunitas pengembang dan tersedia dalam berbagai bahasa.
Keamanan: MySQL menyediakan fitur keamanan yang kuat seperti enkripsi SSL dan autentikasi pengguna yang aman. MySQL juga memungkinkan pengguna untuk menerapkan aturan akses yang ketat dan kontrol akses pengguna.
Dukungan untuk bahasa SQL: MySQL menggunakan bahasa SQL (Structured Query Language) yang populer dan mudah dipelajari. Bahasa SQL dapat digunakan untuk memanipulasi data dalam database, termasuk membuat, mengedit, dan menghapus data.
Integrasi dengan berbagai aplikasi: MySQL kompatibel dengan banyak bahasa pemrograman dan teknologi, seperti PHP, Java, Perl, Python, dan Ruby, serta mendukung berbagai jenis aplikasi dan platform, seperti WordPress, Drupal, dan Joomla.
Secara keseluruhan, MySQL merupakan sebuah sistem manajemen basis data yang handal, cepat, dan fleksibel dengan dukungan yang baik dari komunitas pengembang. Karena itu, MySQL menjadi pilihan yang populer dan andal untuk pengembangan aplikasi web dan enterprise.
Perbedaan MySQL dengan Database lain # Berikut adalah beberapa perbedaan antara MySQL dengan database lain:
Open source: MySQL adalah salah satu dari beberapa database open source yang tersedia secara gratis dan dapat diunduh oleh siapa saja. Hal ini berbeda dengan beberapa database lain seperti Oracle dan Microsoft SQL Server yang memerlukan lisensi berbayar.
Skalabilitas: MySQL dapat digunakan untuk mengelola basis data yang sangat besar dan kompleks dengan jumlah transaksi yang tinggi. MySQL juga mendukung replikasi dan clustering, yang memungkinkan pengguna untuk membuat database yang lebih besar dan lebih andal.
Ketersediaan: MySQL tersedia untuk berbagai jenis sistem operasi seperti Windows, Linux, macOS, dan BSD, sehingga membuatnya mudah digunakan oleh banyak pengembang aplikasi. MySQL juga memiliki dukungan yang baik dari komunitas pengembang dan tersedia dalam berbagai bahasa.
Keamanan: MySQL menyediakan fitur keamanan yang kuat seperti enkripsi SSL dan autentikasi pengguna yang aman. MySQL juga memungkinkan pengguna untuk menerapkan aturan akses yang ketat dan kontrol akses pengguna.
Bahasa SQL: MySQL menggunakan bahasa SQL (Structured Query Language) yang populer dan mudah dipelajari. Bahasa SQL dapat digunakan untuk memanipulasi data dalam database, termasuk membuat, mengedit, dan menghapus data.
Integrasi dengan aplikasi: MySQL kompatibel dengan banyak bahasa pemrograman dan teknologi, seperti PHP, Java, Perl, Python, dan Ruby, serta mendukung berbagai jenis aplikasi dan platform, seperti WordPress, Drupal, dan Joomla.
Beberapa database lain seperti Oracle dan Microsoft SQL Server memiliki beberapa keunggulan dan fitur yang berbeda dibandingkan dengan MySQL. Oleh karena itu, pemilihan database terbaik tergantung pada kebutuhan dan kebutuhan spesifik pengguna.
`}),e.add({id:5,href:"/vbnet/tutorial/pengenalan/",title:"Pengenalan Vb.Net",description:"Pengenalan Vb.Net.",content:`Apa itu Vb.Net # VB.NET adalah bahasa pemrograman berorientasi objek yang dikembangkan oleh Microsoft. VB.NET adalah bahasa pemrograman turunan dari Visual Basic, dan merupakan bagian dari platform .NET Framework. VB.NET digunakan untuk mengembangkan aplikasi desktop dan web, serta aplikasi berbasis jaringan dan aplikasi mobile.
VB.NET dirilis pada tahun 2002 dan terus dikembangkan oleh Microsoft. VB.NET memiliki sintaks yang mudah dipahami dan dipelajari, serta memiliki banyak fitur canggih yang memungkinkan pengembang untuk membangun aplikasi yang kompleks dan kuat.
Beberapa fitur penting dari VB.NET antara lain:
Berorientasi objek: VB.NET adalah bahasa pemrograman berorientasi objek yang memungkinkan pengembang untuk membangun aplikasi dengan struktur yang jelas dan mudah dipelihara.
Integrasi dengan .NET Framework: VB.NET sepenuhnya terintegrasi dengan platform .NET Framework, dan memberikan akses penuh ke semua fitur dan layanan yang disediakan oleh platform tersebut.
Interoperabilitas: VB.NET mendukung interoperabilitas dengan bahasa pemrograman lain di platform .NET Framework, sehingga memungkinkan pengembang untuk mengintegrasikan kode yang ditulis dalam bahasa pemrograman yang berbeda.
Kemudahan pengembangan: VB.NET memiliki sintaks yang mudah dipahami dan dipelajari, serta memiliki banyak pustaka dan kerangka kerja yang tersedia untuk mempercepat pengembangan aplikasi.
Akses database: VB.NET memiliki dukungan yang kuat untuk akses database, dan memungkinkan pengembang untuk mengakses database dengan mudah menggunakan teknologi seperti ADO.NET dan LINQ.
Keunggulan Vb.Net # Berikut adalah beberapa keunggulan dari VB.NET:
Mudah dipelajari: VB.NET dirancang agar mudah dipelajari dan dipahami oleh pemula. Sintaks bahasa yang sederhana dan jelas, serta kemampuan drag-and-drop pada IDE, membuat pengembangan aplikasi dengan VB.NET menjadi lebih cepat dan mudah.
Berorientasi objek: VB.NET adalah bahasa berorientasi objek, yang memungkinkan pengembang untuk membangun aplikasi dengan struktur yang jelas dan mudah dipelihara. Hal ini juga memungkinkan pengembang untuk memanfaatkan konsep seperti polimorfisme, enkapsulasi, dan pewarisan dalam pengembangan aplikasi.
Integrasi dengan .NET Framework: VB.NET sepenuhnya terintegrasi dengan .NET Framework, yang merupakan platform pengembangan aplikasi terkemuka saat ini. Dengan integrasi yang kuat ini, VB.NET dapat mengakses semua fitur dan layanan yang disediakan oleh .NET Framework.
Dukungan database yang kuat: VB.NET memiliki dukungan yang kuat untuk akses database, dengan menggunakan teknologi seperti ADO.NET dan LINQ. Hal ini memudahkan pengembang untuk mengakses database dengan mudah dan efisien.
Lingkungan pengembangan yang lengkap: VB.NET dilengkapi dengan lingkungan pengembangan terintegrasi (IDE) yang lengkap, yaitu Visual Studio. IDE ini dilengkapi dengan banyak fitur seperti debugging, analisis kode, dan pengembangan aplikasi web. Hal ini memudahkan pengembang untuk mengembangkan aplikasi dengan cepat dan efisien.
Kompatibilitas mundur: VB.NET memiliki kemampuan untuk menjalankan kode aplikasi yang ditulis dalam versi Visual Basic sebelumnya, sehingga memungkinkan pengembang untuk memperbarui kode lama dan menggunakannya pada platform yang lebih baru.
Alterlatif selain Vb.Net # Beberapa alternatif selain VB.NET yang dapat digunakan untuk pengembangan aplikasi desktop berbasis Windows antara lain:
C#: C# adalah bahasa pemrograman yang dikembangkan oleh Microsoft dan didesain untuk digunakan dengan platform .NET. Seperti VB.NET, C# juga berorientasi objek dan menyediakan lingkungan pengembangan yang lengkap, yaitu Visual Studio.
Java: Java adalah bahasa pemrograman yang sangat populer untuk pengembangan aplikasi desktop dan web. Dalam pengembangan aplikasi desktop berbasis Windows, Java dapat digunakan dengan memanfaatkan teknologi seperti JavaFX atau Swing.
Python: Python adalah bahasa pemrograman yang populer dan mudah dipelajari. Python dapat digunakan untuk pengembangan aplikasi desktop berbasis Windows dengan memanfaatkan beberapa library seperti PyQt atau wxPython.
Electron: Electron adalah framework open-source yang memungkinkan pengembang untuk membangun aplikasi desktop dengan menggunakan HTML, CSS, dan JavaScript. Electron memungkinkan pengembang untuk menghasilkan aplikasi desktop yang dapat dijalankan pada berbagai platform, termasuk Windows.
Lazarus: Lazarus adalah lingkungan pengembangan aplikasi yang gratis dan open-source, yang mendukung pengembangan aplikasi desktop berbasis Windows dengan bahasa pemrograman Object Pascal. Lazarus juga menyediakan komponen visual yang mirip dengan yang ada pada Delphi.
`}),e.add({id:6,href:"/html/tutorial/attributes/",title:"Atribut HTML",description:"HTML Attribute adalah suatu atribut untuk melengkapi informasi dari suatu elemen HTML",content:`Apa Itu HtML Attribute ? # HTML Attribute adalah suatu atribut untuk melengkapi informasi dari suatu elemen HTML
Semua elemen HTML dapat memiliki Attribute.
Attribute HtML memberikan informasi tambahan terhadap elemen HTML.
Attribute selalu berada diawal tag, seperti:
&lt;a href=&quot;google.com&quot;&gt;Google&lt;/a&gt; Attribute selalu berbapasangan dengan value/nilai, seperti: href=&quot;google.com&quot;
Value/Nilai dari attribute harus selalu dibungkus menggunakan double quote/petik dua (&quot;).
Contoh Penerapan Attribute Pada HTML # href Attribute # href berfungsi untuk menentukan URL halaman yang ingin dituju.
&lt;html&gt; &lt;a href=&quot;Github.com&quot;&gt;Github Website&lt;/a&gt; &lt;/html&gt; src Attribute # src berfungsi untuk menentukan lokasi gambar file yang ingin ditampilkan.
&lt;html&gt; &lt;img src=&quot;attribute.png&quot; /&gt; &lt;/html&gt; Ada dua cara untuk mendefinisikan URL di attribute src
Absolute URL - Memasukan gambar dari hosting eksternal/tidak dalam local, seperti:
&lt;img src=&quot;https://avatars.githubusercontent.com/u/76999048?s=200&amp;v=4&quot; &gt; Relative URL
&lt;img src=&quot;/src/images/avatar.png&quot; &gt; width &amp; height Attribute # width dan height berfungsi untuk menentukan lebar dan tinggi gambar dalam satuan piksel (px).
&lt;img src=&quot;/src/images/avatar.png&quot; width=&quot;32&quot; height=&quot;32&quot; /&gt; alt Attribute # alt berfungsi untuk menggantikan gambar dengan tulisan, jika gambar tidak bisa ditampilkan dengan alasan tertentu.
&lt;img src=&quot;/src/images/avatar.png&quot; alt=&quot;avatar&quot; /&gt; style Attribute # style berfungsi untuk menambahkan gaya/style pada elemen seperti color, font, size, dan lainnya.
&lt;h1 style=&quot;color: green&quot;&gt;Hello World&lt;/h1&gt; lang Attribute # lang berfungsi untuk mendeklarasikan bahasa yang digunakan dalam website, untuk membantu mesin pencari / browser.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;body&gt; Hello World &lt;/body&gt; &lt;/html&gt; title Attribute # title berfungsi sebagai penambah informasi dalam suatu elemen, yang jika dihover akan memunculkan tooltip
&lt;span title=&quot;Komunitas untuk mengelola dan menulis kode&quot;&gt;Bellshade&lt;/span&gt; class Attribute # class berfungsi untuk menunjuk nama class dalam style sheet, dapat digunakan untuk mengakses dan memanipulasi elemen di Javascript.
&lt;div class=&quot;kota&quot;&gt; &lt;p&gt;Jakarta terletak di pulau Jawa, Indonesia.&lt;/p&gt; &lt;/div&gt; id Attribute # id berfungsi untuk menentukan id unik untuk elemen HTML, dapat digunakan untuk menunjuk deklarasi style tertentu dalam style sheet dan juga digunakan untuk mengakses dan memanipulasi elemen dengan id tertentu di Javascript.
&lt;html&gt; &lt;h1 id=&quot;judulSaya&quot;&gt;Judul Saya&lt;/h1&gt; &lt;/html&gt; method Attribute # method berfungsi untuk menentukan cara mengirim data formulir (data formulir dikirim ke halaman yang ditentukan dalam atribut action).
Form-data dapat dikirim sebagai variabel URL (dengan method=&quot;get&quot;) atau sebagai transaksi posting HTTP (dengan method=&ldquo;post&rdquo;).
Catatan tentang GET:
Menambahkan data formulir ke dalam URL dalam pasangan nama/nilai Panjang URL dibatasi (sekitar 3000 karakter) Jangan pernah menggunakan GET untuk mengirim data sensitif! (akan terlihat di URL) Berguna untuk pengiriman formulir di mana pengguna ingin menandai hasilnya GET lebih baik untuk data yang tidak aman, seperti string kueri di Google &lt;form action=&quot;/action_page.php&quot; method=&quot;get&quot;&gt; Nama Depan: &lt;input type=&quot;text&quot; name=&quot;namaDepan&quot; /&gt;&lt;br /&gt; Nama Belakang: &lt;input type=&quot;text&quot; name=&quot;namaBelakang&quot; /&gt;&lt;br /&gt; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt; &lt;/form&gt; Catatan tentang POST:
Menambahkan formulir-data di dalam isi permintaan HTTP (data tidak ditampilkan dalam URL) Tidak memiliki batasan ukuran Pengiriman formulir dengan POST tidak dapat di-bookmark &lt;form action=&quot;/action_page.php&quot; method=&quot;post&quot;&gt; Nama: &lt;input type=&quot;text&quot; name=&quot;nama&quot; /&gt;&lt;br /&gt; Password: &lt;input type=&quot;text&quot; name=&quot;password&quot; /&gt;&lt;br /&gt; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt; &lt;/form&gt; `}),e.add({id:7,href:"/html/tutorial/heading/",title:"Heading HTML",description:"HTML Headings adalah judul/sub-judul yang ingin ditampilkan dalam halaman website HTML",content:`HTML Headings # Apa Itu HTML Headings ? # HTML Headings adalah judul/sub-judul yang ingin ditampilkan dalam halaman website HTML
HTML Headings didefinisikan dengan &lt;h1&gt; hingga &lt;h6&gt;, contohnya:
Dalam Bentuk Tulisan
Heading 1 # Heading 2 # Heading 3 # Heading 4 # Heading 5 # Heading 6 # Dalam Bentuk Code
&lt;h1&gt;Heading 1&lt;/h1&gt; &lt;h2&gt;Heading 2&lt;/h2&gt; &lt;h3&gt;Heading 3&lt;/h3&gt; &lt;h4&gt;Heading 4&lt;/h4&gt; &lt;h5&gt;Heading 5&lt;/h5&gt; &lt;h6&gt;Heading 6&lt;/h6&gt; Urutan Penulisan Heading # Apakah boleh menulis judul yang tidak urut?
Maksudnya.. seperti menggunakan &lt;h6&gt; untuk judul awal, lalu berikutnya &lt;h4&gt; untuk sub judul.
Ini boleh-boleh saja, tapi kurang bagus untuk SEO.
Penulisan judul yang bagus adalah judul yang mengikuti levelnya.
Judul &lt;h1&gt; pada level pertama, &lt;h2&gt;pada level ke-2, dan seterusnya.
`}),e.add({id:8,href:"/html/tutorial/paragraph/",title:"paragraph HTML",description:"Paragraphs adalah suatu kalimat pada barisan baru yang biasanya berupa blok teks.",content:`HTML Paragraphs # Apa Itu HTML Paragraphs # HTML Paragraphs adalah suatu kalimat pada barisan baru yang biasanya berupa blok teks.
Tag HTML &lt;p&gt; yang mendefinisikan sebuah paragraf.
Sebuah paragraf akan selalu dimulai pada baris baru, dan browser secara otomatis menambahkan margin sebelum dan sesudah paragraf.
Contoh Penerapan &lt;p&gt; # &lt;p&gt;Ini Paragraf Pertama.&lt;/p&gt; &lt;p&gt;Ini Paragraf Kedua.&lt;/p&gt; Membuat HTML Paragraphs # Paragraf adalah kumpulan dari beberapa kalimat. Pada web, Paragraf biasanya digunakan untuk menampilkan teks atau artikel.
Paragraf pada HTML dibuat dengan tag &lt;p&gt;. Selain tag ini, ada juga tag pendukung lain seperti &lt;div&gt;, &lt;hr&gt;, &lt;br&gt;, dan &lt;pre&gt;.
Contoh Penerapan &lt;p&gt; dengan Code HTML # Fungsi utama tag &lt;p&gt; adalah untuk membuat paragraph.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Ini adalah sebuah paragraf yang berisi sebuah kalimat. Saya sedang belajar HTML. Saat ini Sedang, Belajar membuat paragraf di html.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;br&gt; dengan Code HTML # Fungsi utama tag &lt;br&gt; adalah untuk membuat baris baru.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML #3&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Aku selalu riang gembira berangkat sekolah &lt;br /&gt; bersama nasi yang dibuatkan oleh ibuku &lt;br /&gt; iniliah hidup bersusah &lt;br /&gt; ya begitulah&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;hr&gt; untuk membuat garis dengan Code HTML # Fungsi utama tag &lt;hr&gt; digunakan untuk membuat garis lurus secara horizontal (horizontal rule).
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Ini adalah sebuah paragraf yang berisi sebuah kalimat. Saya sedang belajar HTML. Saat ini Sedang, Belajar membuat paragraf di html.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Punya ide pokok sebagai dasar dari paragraf itu sendiri.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;pre&gt; dengan Code HTML # Tag &lt;pre&gt; (preformatting) merupakan tag yang digunakan untuk menampilkan teks atau paragraf dalam format yang sudah kita tentukan di HTML.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hujan Bulan Juni&lt;/h1&gt; &lt;p&gt;oleh Sapardi Djoko Damono&lt;/p&gt; &lt;pre&gt; tak ada yang lebih tabah dari hujan bulan Juni dirahasiakannya rintik rindunya kepada pohon berbunga itu tak ada yang lebih bijak dari hujan bulan Juni dihapusnya jejak-jejak kakinya yang ragu-ragu di jalan itu tak ada yang lebih arif dari hujan bulan Juni dibiarkannya yang tak terucapkan diserap akar pohon bunga itu &lt;/pre&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;div&gt; dengan Code HTML # Tag &lt;div&gt; berfungsi untuk membuat layout web.
&lt;footer&gt; &lt;div&gt;&amp;copy; 2021 Belajar HTML by bellshade&lt;/div&gt; &lt;/footer&gt; `}),e.add({id:9,href:"/html/tutorial/style/",title:"Style HTML",description:"HTML Style adalah atribut yang digunakan untuk memberikan style/gaya pada suatu elemen, seperti color, font, size, dan sebagainya.",content:`HTML Style # Apa Itu HTML Style ? # HTML Style adalah atribut yang digunakan untuk memberikan style/gaya pada suatu elemen, seperti color, font, size, dan sebagainya.
Atribut Style memiliki sintaks seperti berikut:
&lt;tag style=&quot;property:value;&quot;&gt; Contoh Penerapan Style # Background Color # Background color berfungsi untuk mendefinisikan warna latar belakang pada suatu elemen HTML.
&lt;body style=&quot;background-color:white;&quot;&gt; &lt;h1&gt;Hello World&lt;/h1&gt; &lt;/body&gt; Hasilnya :
Text Color # Color berfungsi untuk mendefinisikan warna teks pada suatu elemen HTML.
&lt;h1 style=&quot;color:red;&quot;&gt;Ini heading berwarna merah.&lt;/h1&gt; &lt;p style=&quot;color:yellow;&quot;&gt;Ini paragraf berwarna kuning.&lt;/p&gt; Hasilnya :
Text Size # Text size berfungsi untuk mendefinisikan ukuran teks pada suatu elemen HTML.
&lt;h1 style=&quot;font-size:300%;&quot;&gt;This is a heading.&lt;/h1&gt; &lt;p style=&quot;font-size:160%;&quot;&gt;This is a paragraph.&lt;/p&gt; Hasilnya :
Font Family # Font family berfungsi untuk mendefinisikan font yang akan digunakan pada elemen HTML.
&lt;h1 style=&quot;font-family:arial;&quot;&gt;Ini heading dengan jenis font arial.&lt;/h1&gt; &lt;p style=&quot;font-family:serif;&quot;&gt;Ini paragraf dengan jenis font serif.&lt;/p&gt; Hasilnya :
Text Align # Text align berfungsi untuk menentukan posisi elemen secara horizontal.
&lt;h1 style=&quot;text-align:center;&quot;&gt;Centered Heading&lt;/h1&gt; &lt;p style=&quot;text-align:center;&quot;&gt;Centered paragraph.&lt;/p&gt; Hasilnya :
`}),e.add({id:10,href:"/html/tutorial/text-formatiing/",title:"Text Formatting HTML",description:"HTML Text Formatting adalah elemen yang mendefinisikan teks dengan arti khusus.",content:`HTML Text Formatting # Apa Itu HTML Text Formatting ? # HTML Text Formatting adalah elemen yang mendefinisikan teks dengan arti khusus.
Ada 10 elemen text formatting yang dirancang untuk menampilkan jenis teks khusus.
&lt;b&gt; - Teks Bold &lt;strong&gt; - Teks Penting &lt;i&gt; - Teks miring / Italic &lt;em&gt; - Teks yang ditekankan &lt;mark&gt; - Teks yang diberi tanda (seperti efek stabilo) &lt;small&gt; - Teks Kecil &lt;del&gt; - Teks yang diberi coret &lt;ins&gt; - Teks yang diberi garis bawah &lt;sub&gt; - Teks subskrip &lt;sup&gt; - Teks superskrip Contoh Penerapan Text Formatting Pada HTML # Elemen &lt;b&gt; dan &lt;strong&gt;
&lt;b&gt;Ini adalah Teks Bold&lt;/b&gt; &lt;strong&gt;Ini Merupakan Teks Penting!&lt;/strong&gt; Elemen &lt;i&gt; dan &lt;em&gt;
&lt;i&gt;Teks italic/miring&lt;/i&gt; &lt;em&gt;Ini teks yang ditekankan&lt;/em&gt; Elemen &lt;small&gt;
&lt;small&gt;Ini Merupakan teks yang lebih kecil&lt;/small&gt; Elemen &lt;mark&gt;
&lt;p&gt;Jangan lupa untuk minum air putih &lt;mark&gt;2 liter&lt;/mark&gt; per hari.&lt;/p&gt; Elemen &lt;del&gt;
&lt;p&gt;Aku menyukai warna &lt;del&gt;kuning&lt;/del&gt; biru.&lt;/p&gt; Elemen &lt;ins&gt;
&lt;p&gt;Aku menyukai warna &lt;del&gt;kuning&lt;/del&gt; &lt;ins&gt;biru.&lt;/ins&gt;&lt;/p&gt; Elemen &lt;sub&gt;
&lt;p&gt;Ini adalah teks &lt;sub&gt;subskrip&lt;/sub&gt;.&lt;/p&gt; Elemen &lt;sup&gt;
&lt;p&gt;Ini adalah teks &lt;sup&gt;superskrip&lt;/sup&gt;.&lt;/p&gt; `}),e.add({id:11,href:"/html/tutorial/quotation/",title:"Quotation HTML",description:"HTML Quotation berisi elemen-elemen ditujukan untuk menyajikan kutipan pada halaman HTML.",content:`HTML Quotation # Apa Itu HTML Quotation ? # HTML Quotation berisi elemen-elemen ditujukan untuk menyajikan kutipan pada halaman HTML.
Elemen-elemen tersebut adalah,
&lt;blockquote&gt; - Mendefinisikan teks kutipan yang panjang. &lt;q&gt; - Mendefinisikan teks kutipan yang pendek. &lt;abbr&gt; - Mendefinisikan teks singkatan. &lt;address&gt; - Mendefinisikan informasi kontak. &lt;cite&gt; - Mendefinisikan judul karya. &lt;bdo&gt; - Membalikan arah teks. Contoh Penerapan Elemen Quotation Pada HTML # Elemen &lt;blockquote&gt; # &lt;p&gt;Arti Quotes:&lt;/p&gt; &lt;blockquote&gt; Kutipan adalah pengulangan satu ekspresi sebagai bagian dari yang lain, terutama ketika ekspresi yang dikutip itu terkenal atau secara tersurat dihubungkan dengan kutipan ke sumber yang asli, dan ditandai oleh tanda kutip. &lt;/blockquote&gt; Elemen &lt;q&gt; # &lt;p&gt;Random Quote: &lt;q&gt;Karena hidup adalah pilihan.&lt;/q&gt;&lt;/p&gt; Elemen &lt;abbr&gt; # &lt;p&gt;Channel &lt;abbr title=&quot;Web Programming UNPAS&quot;&gt;WPU&lt;/abbr&gt; Pertama Kali merilis video pada 29 Januari 2015&lt;/p&gt; Elemen &lt;address&gt; # &lt;address&gt; Written by ABC&lt;br&gt; Visit us at:&lt;br&gt; Example.com&lt;br&gt; 12345, Bandung&lt;br&gt; Indonesia &lt;/address&gt; Elemen &lt;cite&gt; # &lt;p&gt;&lt;cite&gt;Avengers: Endgame&lt;/cite&gt; directed by Anthony Russo; Joe Russo. Release in 2019.&lt;/p&gt; Elemen &lt;bdo&gt; # &lt;bdo dir=&quot;rtl&quot;&gt;Elemen ini akan tertulis dari kanan ke kiri&lt;/bdo&gt; `}),e.add({id:12,href:"/html/tutorial/comments/",title:"Komentar",description:"HTML Comments berfungsi untuk membantu mendokumentasikan sumber kode/source code HTML anda.",content:`HTML Comments # Apa Itu HTML Comments ? # HTML Comments berfungsi untuk membantu mendokumentasikan sumber kode/source code HTML anda.
Anda dapat menambahkan Comments ke file HTML, dengan sintaks berikut;
&lt;!-- Ini adalah cara penulisan comment di HTML --&gt; Contoh Penerapan Comment Pada HTML # Comment Biasa # &lt;!-- Ini adalah Comment --&gt; &lt;p&gt;Ini adalah paragraf.&lt;/p&gt; Menyembunyikan Content # &lt;h1&gt;Header 1.&lt;/h1&gt; &lt;!-- &lt;p&gt;Paragraf Pertama&lt;/p&gt; --&gt; &lt;p&gt;Paragraf Kedua&lt;/p&gt; Menyembunyikan Bagian Dalam Konten # &lt;p&gt;Aku menyukai warna &lt;!-- hitam, --&gt; merah dan kuning&lt;/p&gt; `}),e.add({id:13,href:"/html/tutorial/color/",title:"Color",description:"HTML Color adalah warna yang telah didefinisikan dengan nama atau dengan nilai RGB, HEX, HSL, RGBA, atau HSLA.",content:`HTML Color # Apa Itu HTML Color # HTML Color adalah warna yang telah didefinisikan dengan nama atau dengan nilai RGB, HEX, HSL, RGBA, atau HSLA.
Beberapa warna yang dapat di definisikan dengan nama warna:
Tomato, Orange, DodgerBlue, MediumSeaGreen, Violet, Light Gray, dan 136+ Warna Lainnya.
Contoh Penerapan Color Pada HTML # Background Color # Mendefinisikan warna latar pada elemen HTML.
&lt;h1 style=&quot;background-color:LightGray;&quot;&gt;Hello World&lt;/h1&gt; &lt;p style=&quot;background-color:Tomato;&quot;&gt;Lorem ipsum...&lt;/p&gt; Text Color # Mendefinisikan warna teks.
&lt;h1 style=&quot;color:Violet;&quot;&gt;Hello World&lt;/h1&gt; &lt;p style=&quot;color:DodgerBlue;&quot;&gt;Lorem ipsum...&lt;/p&gt; &lt;p style=&quot;color:MediumSeaGreen;&quot;&gt;Ut wisi enim...&lt;/p&gt; Border Color # Mendefinisikan warna dari border elemen.
&lt;h1 style=&quot;border:5px solid Tomato;&quot;&gt;Hello World&lt;/h1&gt; &lt;h1 style=&quot;border:5px solid DodgerBlue;&quot;&gt;Hello World&lt;/h1&gt; &lt;h1 style=&quot;border:5px solid Violet;&quot;&gt;Hello World&lt;/h1&gt; Color Value # Warna dapat ditentukan dengan nilai RGB, RGBA, HSL, HSLA, dan HEX.
Background Solid
&lt;h1 style=&quot;background-color:rgb(255, 99, 71);&quot;&gt;...&lt;/h1&gt; &lt;h1 style=&quot;background-color:#ff6347;&quot;&gt;...&lt;/h1&gt; &lt;h1 style=&quot;background-color:hsl(9, 100%, 64%);&quot;&gt;...&lt;/h1&gt; Background Yang Memiliki Transparansi
&lt;h1 style=&quot;background-color:rgba(255, 99, 71, 0.5);&quot;&gt;...&lt;/h1&gt; &lt;h1 style=&quot;background-color:hsla(9, 100%, 64%, 0.5);&quot;&gt;...&lt;/h1&gt; `}),e.add({id:14,href:"/python/tutorial/pengenalan-python/",title:"Pengenalan Python",description:"Pengenalan bahasa pemrograman python.",content:`Apa itu Python? # Python adalah bahasa pemrograman yang populer. Itu dibuat oleh Guido van Rossum, dan dirilis pada tahun 1991.
Python digunakan untuk:
pengembangan web (sisi server), pengembangan perangkat lunak, matematika, skrip sistem. Python dapat digunakan untuk keperluan apa saja? # Python dapat digunakan di server untuk membuat aplikasi web. Python dapat digunakan bersama perangkat lunak untuk membuat alur kerja. Python dapat terhubung ke sistem database. Itu juga dapat membaca dan memodifikasi file. Python dapat digunakan untuk menangani data besar dan melakukan matematika yang kompleks. Python dapat digunakan untuk pembuatan prototipe cepat, atau untuk pengembangan perangkat lunak siap produksi. Mengapa Python? # Python bekerja pada platform yang berbeda (Windows, Mac, Linux, Raspberry Pi, dll). Python memiliki sintaks sederhana yang mirip dengan bahasa Inggris. Python memiliki sintaks yang memungkinkan pengembang untuk menulis program dengan lebih sedikit baris daripada beberapa bahasa pemrograman lainnya. Python berjalan pada sistem interpreter, artinya kode dapat dieksekusi segera setelah ditulis. Ini berarti bahwa pembuatan prototipe bisa sangat cepat. Python dapat diperlakukan dengan cara prosedural, cara berorientasi objek atau cara fungsional. Versi Python # Versi utama terbaru dari Python adalah Python 3, yang akan kita gunakan dalam tutorial ini. Namun, Python 2, meskipun tidak diperbarui dengan apa pun selain pembaruan keamanan, masih cukup populer. Dalam tutorial ini Python akan ditulis dalam editor teks. Dimungkinkan untuk menulis Python dalam Lingkungan Pengembangan Terintegrasi, seperti Thonny, Pycharm, Netbeans atau Eclipse yang sangat berguna saat mengelola koleksi file Python yang lebih besar. Sintaks Python dibandingkan dengan bahasa pemrograman lain # Python dirancang agar mudah dibaca, dan memiliki beberapa kesamaan dengan bahasa Inggris dengan pengaruh dari matematika. Python menggunakan baris baru untuk menyelesaikan perintah, berbeda dengan bahasa pemrograman lain yang sering menggunakan titik koma atau tanda kurung. Python bergantung pada tanda kurung, menggunakan spasi, untuk mendefinisikan ruang lingkup; seperti ruang lingkup loop, fungsi dan kelas. Bahasa pemrograman lain sering menggunakan kurung kurawal untuk tujuan ini. Contoh &lsquo;Hello World&rsquo; dengan Python # print(&quot;Hello, World!&quot;) `}),e.add({id:15,href:"/html/tutorial/css/",title:"CSS",description:"CSS (Cascading Style Sheets) berfungsi sebagai pengformat tata letak juga tampilan bagi sebuah website.",content:`HTML CSS # Apa Itu HTML CSS? # CSS (Cascading Style Sheets) berfungsi sebagai pengformat tata letak juga tampilan bagi sebuah website.
CSS bisa digunakan dengan 3 cara,
Inline CSS - Menggunakan atribut &lt;style&gt; di dalam elemen HTML. Internal CSS - Menggunakan elemen &lt;style&gt; di bagian &lt;head&gt;. Eksternal CSS - Menggunakan elemen &lt;link&gt; untuk menautkan file HTML dengan file CSS. Contoh Penerapan CSS # Inline CSS
&lt;h1 style=&quot;color:blue;&quot;&gt;Heading Berwarna Biru.&lt;/h1&gt; &lt;p style=&quot;color:red;&quot;&gt;Paragraf Berwarna Merah.&lt;/p&gt; Internal CSS
&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;style&gt; body {background-color: black;} h1 {color: blue;} p {color: red;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Ini adalah Heading.&lt;/h1&gt; &lt;p&gt;Ini adalah Paragraf.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Eksternal CSS
&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Ini adalah Heading.&lt;/h1&gt; &lt;p&gt;Ini adalah Paragraf.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Dalam file CSS:
body { background-color: black; } h1 { color: blue; } p { color: red; } `}),e.add({id:16,href:"/python/tutorial/instalasi-python/",title:"Instalasi Python",description:"Memulai bahasa pemrograman python.",content:`Cek Instalasi Python # Untuk mengetahui apakah kita telah menginstal python (Windows), buka command prompt Windows, atau dari menu Run dengan menekan tombol Winkey + R kemudian ketikkan &lsquo;cmd&rsquo; kemudian tekan enter, selanjutnya ketikkan python --version seperti contoh dibawah:
C:\\Users\\ Your Name&gt;python --version Untuk OS Linux atau Mac, buka command prompt (linux) atau di Mac buka Terminal dan ketik:
python --version Instalasi Python # Jika belum menginstal Python, silakan download secara gratis dari situs resminya python.org
Berikut ini adalah panduan cara instal python di platform Linux, Windows dan Mac OS.
Instalasi Python pada Linux # Buka browser, kunjungi http://www.python.org/downloads/source/ Download versi terbaru Python berbentuk file zip untuk Unix/Linux Ekstrak file zip yang baru saja di download Edit file Modules/Setup jika ingin kostumisasi Python Jalankan ./configure script make make install Langkah ini akan menginstal Python di lokasi standar /usr/local/bin dan library di /usr/local/lib/pythonXX dimana XX adalah versi terbaru Python yang digunakan. Beberapa distro (distribution store) dari sistem operasi linux sudah terinstal Python di dalamnya. Jadi Kita tidak perlu menginstalnya lagi.
Instalasi Python pada Windows # Buka browser, kunjungi http://www.python.org/downloads/windows/ Buka (klik 2x) file installer python yang baru saja di download Ikuti langkah instalasi sampai selesai Instalasi Python pada MacOS # Buka browser, kunjungi http://www.python.org/download/mac/ Download versi terbaru Python untuk Macintosh Buka file yang baru saja di download Ikuti langkah instalasi sampai selesai `}),e.add({id:17,href:"/html/tutorial/hyperlink/",title:"Hyperlink",description:"Html hyperlink adalah sebuah tag html yang berisi link",content:`HTML HYPERLINK # Apa Sih Itu html hyperlink? # Html hyperlink adalah sebuah tag html yang berisi link
Langsung aja ke demo-nya # &lt;!-- href= tempat menaruh link yang akan di tuju --&gt; &lt;!-- target = ketika ditekan maka akan terjadi --&gt; &lt;!-- Macam-macam atribut target --&gt; &lt;!-- __self = merupakan default ketika di klik layar akan berubah menjadi link yang di tuju --&gt; &lt;!-- __blank = ketika di klik akan menambah window baru / layar baru --&gt; &lt;!-- __parent = ketika di klik membuka dokumen di bingkai induk --&gt; &lt;!-- __top = membuka file di seluruh bagian layar/window --&gt; &lt;a href=&quot;https://www.instagram.com/&quot; target=&quot;__blank&quot;&gt;&lt;/a&gt; Dari demo diatas bisa disimpulkan bahwa tag &lt;a&gt; berisi link menuju instagram # Kreasikan sendiri atribut ini ya :) # `}),e.add({id:18,href:"/python/tutorial/menjalankan-python/",title:"Menjalankan Python",description:"Memulai bahasa pemrograman python.",content:`Untuk menjalankan Python ada banyak cara yang bisa dilakukan. Kita dapat menggunakan shell, terminal atau menggunakan IDE (Integrated Development Environment). Di bawah ini adalah langkah-langkah menjalankan Python dengan cara yang paling mudah.
Cara menjalankan file python di Linux # Buka terminal CTRL+ALT+T Ketik python maka akan masuk ke Python shell. Tuliskan script Python, contoh: print(&quot;Selamat datang di Python&quot;). jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() atau
Gunakan teks editor, misalnya gedit. Buat file baru, dan ketikan script python, contoh: print(&quot;Selamat datang di Python&quot;). Save As dengan ekstensi .py (contoh: cetak.py). Jalankan file dengan menggunakan Terminal. Buka terminal CTRL+ALT+T. Masuk ke direktori dimana file Python disimpan (contoh: cd /Users/admin/Desktop/). Jalankan script Python dengan menggunakan python diikuti dengan nama file (contoh: python cetak.py). Script Python akan dieksekusi/dijalankan. Cara menjalankan file python di Windows # Menggunakan Shell
Buka IDLE (python shell di windows), kita bisa mencarinya di tombol START. Tuliskan script Python , contoh: print(&quot;Selamat datang di Python&quot;), jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() Menggunakan Script Editor
Untuk menjalankan script yang disimpan dalam file, buka IDLE (python shell di windows), kita dapat mencarinya di tombol START. Klik menu File - New File Tulis script Python pada window yang muncul, contoh: print(&quot;Belajar Python&quot;) print(&quot;di belajarpython.com&quot;) Simpan script lewat menu File - Save Jalankan program dengan klik menu Run - Run Module Cara menjalankan file python di Mac OS # Buka terminal. Ketik python maka kita akan masuk ke Python shell. Tuliskan script Python, contoh: print(&quot;Selamat datang di Python&quot;), jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() atau
Gunakan teks editor. Buat file baru, dan ketikan script python, contoh: print(&quot;Selamat datang di Python&quot;). Save As dengan ekstensi .py (contoh: cetak.py). Jalankan file dengan menggunakan Terminal.
Buka terminal CTRL+ALT+T Masuk ke direktori dimana file Python disimpan (contoh: cd /Users/admin/Desktop/). Jalankan script Python dengan menggunakan python diikuti dengan nama file (contoh: python cetak.py). Script Python akan dieksekusi/dijalankan. `}),e.add({id:19,href:"/html/tutorial/images/",title:"Images",description:"HTML memiliki sebuah elemen `<img>` yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Images.",content:`HTML Images # Apa itu HTML Images? # HTML memiliki sebuah elemen &lt;img&gt; yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Images.
Nah cara penulisan tag &lt;img&gt; sendiri tidak memerlukan tag penutup, atau lebih jelasnya adalah seperti ini:
&lt;img src=&quot;&quot; alt=&quot;&quot;&gt; Atribut di dalam tag &lt;img&gt; # Terdapat setidaknya dua atribut yang biasa digunakan.
src - Digunakan untuk mengarahkan path dari suatu gambar. alt - Digunakan untuk membuat teks alternatif jika gambar gagal ditayangkan. Bagaimana cara menampilkan gambar? # Untuk menampilkan gambar, kita perlu mengarahkan tag &lt;img&gt; kepada file yang kita inginkan melalui atribut src=&quot;url&quot; atau bisa juga src=&quot;imagepath&quot;
Sebagai contoh saja misalkan ingin menampilkan gambar kucing.png yang berada satu folder dengan file HTML.
&lt;img src=&quot;kucing.png&quot; alt=&quot;kucing&quot;&gt; Jika file gambar terdapat pada direktori tertentu, kita dapat menuliskan terlebih dahulu direktorinya.
&lt;img src=&quot;images/kucing.png&quot; alt=&quot;kucing&quot;&gt; Jika file gambar ada di suatu link di internet.
&lt;img src=&quot;https://www.contoh.com/images/kucing.png&quot; alt=&quot;kucing&quot;&gt; Namun sebagai catatan jika ingin mengutip gambar dari suatu link di internet, pastikan tidak melanggar hak cipta dari kepemilikan gambar tersebut.
Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
`}),e.add({id:20,href:"/python/tutorial/aturan-penulisan/",title:"Aturan Penulisan",description:"Aturan penulisan dalam bahasa pemrograman python.",content:`Syntax bahasa Python hampir sama dengan bahasa pemrograman pada umumnya seperti Java atau PHP.
Syntax Dasar # Dibawah ini adalah contoh fungsi Python yang digunakan untuk mencetak. Di Python untuk mencetak cukup gunakan fungsi print() , dimana sesuatu yang akan dicetak harus diletakkan diantara kurung buka dan kurung tutup, bahkan di Python versi 2.x Anda tidak harus menggunakan tanda kurung kurawal, cukup pisahkan dengan spasi.
Jika ingin mencetak tipe data String langsung, Anda harus memasukanya ke dalam tanda kutip terlebih dahulu.
print(&quot;Hello World&quot;) Saat anda menjalankan script diatas, Anda akan melihat output berupa text &lsquo;Hello World&rsquo;
Python Case Sensitivity # Python bersifat case sensitif, ini artinya huruf besar dan huruf kecil memiliki perbedaan. Sebagai contoh jika Anda menggunakan fungsi print dengan huruf kecil print() akan berhasil. Lain hal jika anda menggunakan huruf kapital Print() atau PRINT() , akan muncul pesan error.
Aturan ini berlaku untuk nama variabel ataupun fungsi-fungsi lainnya.
`}),e.add({id:21,href:"/html/tutorial/picture/",title:"Picture",description:`HTML Picture # Apa itu HTML Picture? # HTML memiliki sebuah elemen &lt;picture&gt; yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Picture.
HTML Picture memiliki fungsi mirip seperti media query pada CSS, tetapi kita tidak memerlukan CSS untuk menggunakannya, hanya dengan HTML saja sudah bisa membuat img menjadi responsive pada website kalian.
Contoh kode # &lt;picture&gt;&lt;/picture&gt; Ada juga child dari &lt;picture&gt; ini yaitu &lt;source&gt; dan &lt;img&gt;`,content:`HTML Picture # Apa itu HTML Picture? # HTML memiliki sebuah elemen &lt;picture&gt; yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Picture.
HTML Picture memiliki fungsi mirip seperti media query pada CSS, tetapi kita tidak memerlukan CSS untuk menggunakannya, hanya dengan HTML saja sudah bisa membuat img menjadi responsive pada website kalian.
Contoh kode # &lt;picture&gt;&lt;/picture&gt; Ada juga child dari &lt;picture&gt; ini yaitu &lt;source&gt; dan &lt;img&gt;
&lt;picture&gt; &lt;source&gt; &lt;img src=&quot;&quot; alt=&quot;&quot;&gt; &lt;/picture&gt; Untuk menampilkan gambar, kita perlu mengarahkan tag &lt;img&gt; kepada file yang kita inginkan melalui atribut src=&quot;url&quot; atau bisa juga src=&quot;imagepath&quot;
Belum belajar tentang tag HTML img? Silahkan pelajari di HTML Image
Terdapat beberapa attribut yang biasa digunakan dalam tag &lt;source&gt;, yaitu:
srcset - Digunakan untuk mengarahkan path dari suatu gambar. sizes - Digunakan untuk mengatur ukuran gambar. media - Digunakan untuk mengatur media query. Contoh kode # &lt;picture&gt; &lt;source srcset=&quot;img1.png&quot;&gt; &lt;source srcset=&quot;img2.png&quot;&gt; &lt;source srcset=&quot;img3.png&quot;&gt; &lt;img src=&quot;img1.png&quot; alt=&quot;gambarku&quot;&gt; &lt;/picture&gt; atau
&lt;picture&gt; &lt;source media=&quot;(min-width: 960px)&quot; srcset=&quot;img1.png&quot;&gt; &lt;source media=&quot;(min-width: 600px)&quot; srcset=&quot;img2.png&quot;&gt; &lt;source srcset=&quot;img3.png&quot;&gt; &lt;img src=&quot;img1.png&quot; alt=&quot;kucing-kawin&quot;&gt; &lt;/picture&gt; Contoh pengimplementasiannya: # Silahkan buka index.html, copy dan paste seluruh isi kodenya. Buka vscode atau IDE favorit kalian. Buatlah file index.html &amp; jalankan index.html pada browser kalian. Maka akan terlihat gambar kucing (lagi serius). Coba kecilkan browser kalian perlahan dari samping. Maka akan terlihat gambar kucing (lagi serius) berubah menjadi (lagi senyum), berubah lagi menjadi (lagi nangis) seiring browser kalian bertambah kecil. Semoga bermanfaat!
Source: MDN Web Docs
`}),e.add({id:22,href:"/python/tutorial/komentar-program/",title:"Komentar Program",description:"Komentar program dalam python.",content:`Apa itu komentar program? # Komentar (comment) adalah kode di dalam script Python yang tidak dieksekusi atau tidak dijalankan komputer. Komentar hanya digunakan untuk menandai atau memberikan keterangan tertulis pada script.
Komentar biasa digunakan untuk membiarkan orang lain memahami apa yang dilakukan script. atau untuk mengingatkan kepada programmer sendiri jika suatu saat kembali mengedit script tersebut.
Untuk menggunakan komentar Kita cukup menulis tanda pagar #, diikuti dengan komentar.
Dibawah ini adalah contoh penggunaan komentar pada Python
Komentar satu baris # #Ini adalah komentar # Tulisan ini tidak akan dieksekusi #komentar dengan tanda pagar hanya bisa digunakan #untuk #satu #baris Komentar beberapa baris # &quot;&quot;&quot; Penulisan Komentar lebih dari satu baris yaitu dengan menggunakan kutip dua 3 kali dan ditutup dengan kutip dua 3 kali juga &quot;&quot;&quot; print(&quot;Hello World&quot;) #ini juga komentar #print(&quot;Welcome&quot;) # komentar bisa berisi spesial karakter !@#$%^&amp;*(),./;'[]\\ #mencetak nama print(&quot;Budi&quot;) #mencetak angka/integer print(123) Saat menjalankan script diatas, Kita akan melihat output berupa Hello World, Budi dan 123, karena tulisan/komentar yang ditulis tidak dieksekusi.
`}),e.add({id:23,href:"/html/tutorial/tables/",title:"Tables",description:"HTML Table adalah elemen untuk menyajikan data berupa tabel.",content:`HTML Tables # Apa Itu HTML Table ? # HTML Table adalah elemen untuk menyajikan data berupa tabel.
Tag &lt;table&gt; mendefinisikan tabel HTML.
Setiap baris tabel didefinisikan dengan tag &lt;tr&gt; Setiap header tabel didefinisikan dengan tag &lt;th&gt;, secara default, teks dalam elemen &lt;th&gt; dicetak tebal dan di tengah. Setiap data/sel tabel didefinisikan dengan tag &lt;td&gt;, secara default, teks dalam elemen &lt;td&gt; teratur dan rata kiri. Contoh:
&lt;table style=&quot;width:100%&quot;&gt; &lt;tr&gt; &lt;th&gt;Nama Barang&lt;/th&gt; &lt;th&gt;Jumlah Stock&lt;/th&gt; &lt;th&gt;Harga satuan&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Buku&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;Rp.10000,-&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Pensil&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;td&gt;Rp.3000,-&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; Colspan dan Rowspan # Colspan dan Rowspan adalah atribut pada HTML Table yang digunakan untuk melebarkan sebuah kolom secara vertikal atau horizontal. Colspan dan Rowspan biasanya diterapkan pada tabel yang kompleks dan multi-dimensi. Atribut colspan dan rowspan dapat digunakan pada tag th dan td.
Contoh penerapan Colspan dan Rowspan dapat dilihat pada gambar berikut.
Berikut penjelasan tentang atribut Colspan dan Rowspan.
colspan digunakan untuk merentangkan kolom secara horizontal atau terhadap kolom selanjutnya rowspan digunakan untuk merentangkan kolom secara vertikal atau terhadap baris selanjutnya Contoh:
&lt;table style=&quot;width:100%&quot; border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th rowspan=&quot;2&quot;&gt;Nama Barang&lt;/th&gt; &lt;th colspan=&quot;2&quot;&gt;Toko A&lt;/th&gt; &lt;th colspan=&quot;2&quot;&gt;Toko B&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Jumlah Stok&lt;/th&gt; &lt;th&gt;Harga Satuan&lt;/th&gt; &lt;th&gt;Jumlah Stok&lt;/th&gt; &lt;th&gt;Harga Satuan&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Buku&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;Rp.10000,-&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;td&gt;Rp.9500,-&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Pensil&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;td&gt;Rp.3000,-&lt;/td&gt; &lt;td&gt;12&lt;/td&gt; &lt;td&gt;Rp.3500,-&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; `}),e.add({id:24,href:"/python/tutorial/tipe-data/",title:"Tipe data",description:"Tipe data.",content:`Apa itu tipe data? # Tipe data adalah suatu media atau memori pada komputer yang digunakan untuk menampung informasi.
Python sendiri mempunyai tipe data yang cukup unik bila kita bandingkan dengan bahasa pemrograman yang lain.
Berikut adalah tipe data dari bahasa pemrograman Python :
Tipe Data Contoh Penjelasan Boolean True atau False Menyatakan benar True yang bernilai 1, atau salah False yang bernilai 0 String &ldquo;Ayo belajar Python&rdquo; Menyatakan karakter/kalimat bisa berupa huruf angka, dll (diapit tanda &quot; atau &lsquo;) Integer 25 atau 1209 Menyatakan bilangan bulat Float 3.14 atau 0.99 Menyatakan bilangan yang mempunyai koma Hexadecimal 9a atau 1d3 Menyatakan bilangan dalam format heksa (bilangan berbasis 16) Complex 1 + 5j Menyatakan pasangan angka real dan imajiner List [&lsquo;xyz&rsquo;, 786, 2.23] Data untaian yang menyimpan berbagai tipe data dan isinya bisa diubah-ubah Tuple (&lsquo;xyz&rsquo;, 768, 2.23) Data untaian yang menyimpan berbagai tipe data tapi isinya tidak bisa diubah Dictionary {&rsquo;nama&rsquo;: &lsquo;adi&rsquo;,&lsquo;id&rsquo;:2} Data untaian yang menyimpan berbagai tipe data berupa pasangan penunjuk dan nilai Untuk mencoba berbagai macam tipe data, silahkan coba script Python dibawah ini.
#tipe data Boolean print(True) #tipe data String print(&quot;Ayo belajar Python&quot;) print('Belajar Python Sangat Mudah') #tipe data Integer print(20) #tipe data Float print(3.14) #tipe data Hexadecimal print(9a) #tipe data Complex print(5j) #tipe data List print([1,2,3,4,5]) print([&quot;satu&quot;, &quot;dua&quot;, &quot;tiga&quot;]) #tipe data Tuple print((1,2,3,4,5)) print((&quot;satu&quot;, &quot;dua&quot;, &quot;tiga&quot;)) #tipe data Dictionary print({&quot;nama&quot;:&quot;Budi&quot;, 'umur':20}) #tipe data Dictionary dimasukan ke dalam variabel biodata biodata = {&quot;nama&quot;:&quot;Andi&quot;, 'umur':21} #proses inisialisasi variabel biodata print(biodata) #proses pencetakan variabel biodata yang berisi tipe data Dictionary print(type(biodata)) #fungsi untuk mengecek jenis tipe data. akan tampil &lt;class 'dict'&gt; yang berarti dict adalah tipe data dictionary `}),e.add({id:25,href:"/html/tutorial/lists/",title:"Lists",description:"elemen untuk menyajikan data berupa list/daftar.",content:`HTML Lists # Apa Itu HTML List ? # HTML List adalah elemen untuk menyajikan data berupa list/daftar.
Ada tiga macam list dalam HTML dan masing-masing memiliki tujuan dan makna tertentu.
Unordered list - Digunakan untuk membuat daftar item, tanpa urutan tertentu. Ordered list - Digunakan untuk membuat daftar item, dalam urutan tertentu. Description list - Digunakan untuk membuat daftar item dan deskripsinya. Unordered List # Unordered list adalah daftar item yang tidak memiliki urutan khusus. Unordered list dibuat dengan tag &lt;ul&gt;, dan untuk item-nya dibuat menggunakan tag &lt;li&gt;.
Contoh:
&lt;ul&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; Hasilnya:
Secara default, list akan diurutkan dengan simbol bullet (disc).
Bagaimana jika ingin mengurutkan dengan simbol lainnya?
Untuk mengganti disc dengan simbol lain, cukup berikan atribut type pada tag ul seperti berikut.
Type disc untuk simbol bullet (default). Type square untuk simbol persegi. Type none untuk menghilangkan simbol atau tanpa simbol. Type circle untuk simbol lingkaran. Contoh:
&lt;h3&gt;List menggunakan simbol bullet&lt;/h3&gt; &lt;ul type=&quot;disc&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;List menggunakan simbol persegi&lt;/h3&gt; &lt;ul type=&quot;square&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;List tanpa simbol&lt;/h3&gt; &lt;ul type=&quot;none&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;List menggunakan simbol lingkaran&lt;/h3&gt; &lt;ul type=&quot;circle&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; Hasilnya:
Ordered List # Ordered list adalah daftar item yang memiliki urutan tertentu. Ordered list dibuat dengan tag &lt;ol&gt;, dan untuk item-nya dibuat menggunakan tag &lt;li&gt;.
Contoh:
&lt;ol&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; Hasilnya:
Secara default, list akan diurutkan berdasarkan angka 1 sampai seterusnya.
Bagaimana jika ingin mengurutkan list dengan menggunakan a, b, c atau angka romawi?
Untuk mengganti angka dengan huruf ataupun angka romawi, cukup berikan atribut type pada tag ol seperti berikut.
Type a untuk huruf alfabet a, b, c dan seterusnya. Type A untuk huruf alfabet A, B, C dan seterusnya. Type i untuk angka romawi i, ii, iii dan seterusnya. Type I untuk angka romawi I, II, III dan seterusnya. Contoh:
&lt;h3&gt;List menggunakan alfabet huruf kecil&lt;/h3&gt; &lt;ol type=&quot;a&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;List menggunakan alfabet huruf kapital&lt;/h3&gt; &lt;ol type=&quot;A&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;List menggunakan angka romawi&lt;/h3&gt; &lt;ol type=&quot;i&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;List menggunakan angka romawi kapital&lt;/h3&gt; &lt;ol type=&quot;I&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; Hasilnya:
Description Lists # Description list adalah daftar item yang berisi deskripsi dari sesuatu. Description list dibuat dengan tag &lt;dl&gt;, untuk membuat kata yang akan dideskripsikan menggunakan &lt;dt&gt;, dan untuk mendeskiprsikan kata yang sudah dibuat tadi, kita dapat menggunakan tag &lt;dd&gt;.
Contoh:
&lt;dl&gt; &lt;dt&gt;Kucing&lt;/dt&gt; &lt;dd&gt;Kucing adalah hewan berbulu yang menggemaskan&lt;/dd&gt; &lt;dt&gt;Anjing&lt;/dt&gt; &lt;dd&gt;Anjing adalah hewan peliharaan yang setia&lt;/dd&gt; &lt;dt&gt;Sapi&lt;/dt&gt; &lt;dd&gt;Sapi adalah hewan ternak yang dapat diperah&lt;/dd&gt; &lt;/dl&gt; Hasilnya:
`}),e.add({id:26,href:"/python/tutorial/variabel/",title:"Variabel dalam Python",description:"Variabel dalam Python.",content:`Apa itu variabel? # Variabel adalah lokasi memori yang dicadangkan untuk menyimpan nilai-nilai. Ini berarti bahwa ketika Kita membuat sebuah variabel Anda memesan beberapa ruang di memori. Variabel menyimpan data yang dilakukan selama program dieksekusi, yang nantinya isi dari variabel tersebut dapat diubah oleh operasi - operasi tertentu pada program yang menggunakan variabel.
Variabel dapat menyimpan berbagai macam tipe data. Di dalam pemrograman Python, variabel mempunyai sifat yang dinamis, artinya variabel Python tidak perlu didekralasikan tipe data tertentu dan variabel Python dapat diubah saat program dijalankan.
Penulisan Variabel # Penulisan variabel Python sendiri juga memiliki aturan tertentu, yaitu :
Karakter pertama harus berupa huruf atau garis bawah/underscore _ Karakter selanjutnya dapat berupa huruf, garis bawah/underscore _ atau angka Karakter pada nama variabel bersifat sensitif (case-sensitif). Artinya huruf kecil dan huruf besar dibedakan. Sebagai contoh, variabel namaDepan dan namadepan adalah variabel yang berbeda. Untuk mulai membuat variabel di Python caranya sangat mudah, Anda cukup menuliskan variabel lalu mengisinya dengan suatu nilai dengan cara menambahkan tanda sama dengan = diikuti dengan nilai yang ingin dimasukan. Contoh Penulisan Variabel # Dibawah ini adalah contoh penggunaan variabel dalam bahasa pemrograman Python
#proses memasukan data ke dalam variabel nama = &quot;John Doe&quot; #proses mencetak variabel print(nama) #nilai dan tipe data dalam variabel dapat diubah umur = 20 #nilai awal print(umur) #mencetak nilai umur type(umur) #mengecek tipe data umur umur = &quot;dua puluh satu&quot; #nilai setelah diubah print(umur) #mencetak nilai umur type(umur) #mengecek tipe data umur namaDepan = &quot;Budi&quot; namaBelakang = &quot;Susanto&quot; nama = namaDepan + &quot; &quot; + namaBelakang umur = 22 hobi = &quot;Berenang&quot; print(&quot;Biodata\\n&quot;, nama, &quot;\\n&quot;, umur, &quot;\\n&quot;, hobi) #contoh variabel lainya inivariabel = &quot;Halo&quot; ini_juga_variabel = &quot;Hai&quot; _inivariabeljuga = &quot;Hi&quot; inivariabel222 = &quot;Bye&quot; panjang = 10 lebar = 5 luas = panjang * lebar print(luas) `}),e.add({id:27,href:"/html/tutorial/block-inline/",title:"Block Inline",description:"HTML Block & Inline Element",content:`HTML Block &amp; Inline Element # Block-level Element # Elemen HTML secara historis dikategorikan sebagai elemen &ldquo;tingkat blok&rdquo; atau elemen &ldquo;tingkat sebaris&rdquo;. Karena ini adalah karakteristik presentasi, saat ini ditentukan oleh CSS di Flow Layout. Elemen tingkat Blok menempati seluruh ruang horizontal elemen induknya (wadah), dan ruang vertikal sama dengan tinggi isinya, sehingga menciptakan &ldquo;blok&rdquo;.
Elemen level blok selalu dimulai pada baris baru. Elemen level blok selalu menggunakan lebar penuh yang tersedia (membentang ke kiri dan kanan sejauh mungkin). Elemen level blok memiliki margin atas dan bawah, sedangkan elemen inline tidak. Contoh: # &lt;!-- Elemen Div ini adalah block level elemen --&gt; &lt;div&gt;ini adalah block level elemen&lt;/div&gt; Ini adalah Block Level Elemen HTML # &lt;div&gt; | Divisi Dokumen &lt;section&gt; | Bagian dari halaman web &lt;main&gt; | Berisi konten utama yang unik untuk dokumen &lt;nav&gt; | Berisi link navigasi &lt;footer&gt; | bagian atau halaman footer &lt;header&gt; | bagian atau halaman header &lt;form&gt; | Memasukan formulir &lt;table&gt; | Tabel &lt;p&gt; | Paragraf &lt;ul&gt; | Daftar tidak berurutan &lt;pre&gt; | Teks yang telah diformat sebelumnya &lt;li&gt; | Daftar barang &lt;ol&gt; | daftar pesanan &lt;hr&gt; | Garis Horizontal &lt;figure&gt; | Mengelompokkan konten media dengan keterangan &lt;figcaption&gt; | Keterangan figur &lt;address&gt; | Keterangan Kontak &lt;textarea&gt; | Input data lebih dari satu baris &lt;fieldset&gt; | Label Set bidang &lt;hgroup&gt; | Informasi header grup &lt;article&gt; | Isi konten &lt;blockquote&gt; | Long (&ldquo;block&rdquo;) quotation &lt;details&gt; | Menampilkan rincian konten lebih lengkap dll Inline Elemen HTML # Elemen HTML (Hypertext Markup Language) secara historis dikategorikan sebagai elemen &ldquo;tingkat blok&rdquo; atau elemen &ldquo;tingkat sebaris&rdquo;. Karena ini adalah karakteristik presentasi, saat ini ditentukan oleh CSS di Flow Layout.
Elemen sebaris(inline) tidak dimulai pada baris baru. Elemen sebaris(inline) hanya membutuhkan lebar sebanyak yang diperlukan. Contoh: # &lt;!-- Elemen span ini adalah elemen sebaris(inline) --&gt; &lt;span&gt;ini adalah elemen inline&lt;/span&gt; Ini adalah Inline Elemen HTML # &lt;a&gt; &lt;abbr&gt; &lt;audio&gt; &lt;br&gt; &lt;button&gt; &lt;canvas&gt; &lt;code&gt; &lt;data&gt; &lt;datalist&gt; &lt;em&gt; &lt;embed&gt; &lt;i&gt; &lt;iframe&gt; &lt;img&gt; &lt;input&gt; &lt;label&gt; &lt;map&gt; &lt;mark&gt; &lt;object&gt; &lt;script&gt; &lt;textarea&gt; &lt;video&gt; dll `}),e.add({id:28,href:"/python/tutorial/operator/",title:"Operator di dalam Python",description:"Operator dalam Python.",content:`Apa itu Operator? # Operator adalah konstruksi yang dapat memanipulasi nilai dari operan.
Sebagai contoh operasi 4 + 5 = 9. Disini 4 dan 5 adalah operan dan + adalah operator.
Operator Aritmatika # Operator Contoh Penjelasan Penjumlahan + 1 + 3 = 4 Menjumlahkan nilai dari masing-masing operan atau bilangan Pengurangan - 4 - 1 = 3 Mengurangi nilai operan di sebelah kiri menggunakan operan di sebelah kanan Perkalian * 2 * 4 = 8 Mengalikan operan/bilangan Pembagian / 10 / 5 = 2 Untuk membagi operan di sebelah kiri menggunakan operan di sebelah kanan Sisa Bagi % 11 % 2 = 1 Mendapatkan sisa pembagian dari operan di sebelah kiri operator ketika dibagi oleh operan di sebelah kanan Pangkat ** 8 ** 2 = 64 Memangkatkan operan disebelah kiri operator dengan operan di sebelah kanan operator Pembagian Bulat // 10 // 3 = 3 Sama seperti pembagian. Hanya saja angka dibelakang koma dihilangkan Dibawah ini adalah contoh penggunaan Operator Aritmatika dalam bahasa pemrograman Python
#OPERATOR ARITMATIKA #Penjumlahan print(13 + 2) apel = 7 jeruk = 9 buah = apel + jeruk # print(buah) #Pengurangan hutang = 10000 bayar = 5000 sisaHutang = hutang - bayar print(&quot;Sisa hutang Anda adalah &quot;, sisaHutang) #Perkalian panjang = 15 lebar = 8 luas = panjang * lebar print(luas) #Pembagian kue = 16 anak = 4 kuePerAnak = kue / anak print(&quot;Setiap anak akan mendapatkan bagian kue sebanyak &quot;, kuePerAnak) #Sisa Bagi / Modulus bilangan1 = 14 bilangan2 = 5 hasil = bilangan1 % bilangan2 print(&quot;Sisa bagi dari bilangan &quot;, bilangan1, &quot; dan &quot;, bilangan2, &quot; adalah &quot;, hasil) #Pangkat bilangan3 = 8 bilangan4 = 2 hasilPangkat = bilangan3 ** bilangan4 print(hasilPangkat) #Pembagian Bulat print(10//3) #10 dibagi 3 adalah 3.3333. Karena dibulatkan maka akan menghasilkan nilai 3 Operator Perbandingan # Operator perbandingan (comparison operators) digunakan untuk membandingkan suatu nilai dari masing-masing operan.
Operator Contoh Penjelasan Sama dengan == 1 == 1 bernilai True Jika masing-masing operan memiliki nilai yang sama, maka kondisi bernilai benar atau True. Tidak sama dengan != 2 != 2 bernilai False Akan menghasilkan nilai kebalikan dari kondisi sebenarnya. Tidak sama dengan &lt;&gt; 2 &lt;&gt; 2 bernilai False Akan menghasilkan nilai kebalikan dari kondisi sebenarnya. Lebih besar dari &gt; 5 &gt; 3 bernilai True Jika nilai operan kiri lebih besar dari nilai operan kanan, maka kondisi menjadi benar. Lebih kecil dari &lt; 5 &lt; 3 bernilai True Jika nilai operan kiri lebih kecil dari nilai operan kanan, maka kondisi menjadi benar. Lebih besar atau sama dengan &gt;= 5 &gt;= 3 bernilai True Jika nilai operan kiri lebih besar dari nilai operan kanan, atau sama, maka kondisi menjadi benar. Lebih kecil atau sama dengan &lt;= 5&lt;= 3 bernilai True Jika nilai operan kiri lebih kecil dari nilai operan kanan, atau sama, maka kondisi menjadi benar. Operator Penugasan # Operator penugasan digunakan untuk memberikan atau memodifikasi nilai ke dalam sebuah variabel.
Operator Contoh Penjelasan Sama dengan = a = 1 Memberikan nilai di kanan ke dalam variabel yang berada di sebelah kiri. Tambah sama dengan += a += 2 Memberikan nilai variabel dengan nilai variabel itu sendiri ditambah dengan nilai di sebelah kanan. Kurang sama dengan -= a -= 2 Memberikan nilai variabel dengan nilai variabel itu sendiri dikurangi dengan nilai di sebelah kanan. Kali sama dengan *= a *= 2 Memberikan nilai variabel dengan nilai variabel itu sendiri dikali dengan nilai di sebelah kanan. Bagi sama dengan /= a /= 4 Memberikan nilai variabel dengan nilai variabel itu sendiri dibagi dengan nilai di sebelah kanan. Sisa bagi sama dengan %= a %= 3 Memberikan nilai variabel dengan nilai variabel itu sendiri dibagi dengan nilai di sebelah kanan. Yang diambil nantinya adalah sisa baginya. Pangkat sama dengan **= a **= 3 Memberikan nilai variabel dengan nilai variabel itu sendiri dipangkatkan dengan nilai di sebelah kanan. Pembagian bulat sama dengan //= a //= 3 Membagi bulat operan sebelah kiri operator dengan operan sebelah kanan operator kemudian hasilnya diisikan ke operan sebelah kiri. Prioritas Eksekusi Operator di Python # Dari semua operator diatas, masing-masing mempunyai urutan prioritas yang nantinya prioritas pertama akan dilakukan paling pertama, begitu seterusnya sampai dengan prioritas terakhir.
Operator Keterangan ** Aritmatika ~, +, - Bitwise *, /, %, // Aritmatika +, -	Aritmatika \\&gt;&gt;, \\&lt;&lt; Bitwise &amp; Bitwise ^, |	Bitwise &lt;=, &lt;, &gt;, &gt;=	Perbandingan &lt;&gt; , ==, !=	Perbandingan =, %=, /=, //=, -=, +=, *=, **= Penugasan is, is not Identitas in, not in Membership (Keanggotaan) not, or, and Logika `}),e.add({id:29,href:"/html/tutorial/classes/",title:"Clases",description:"HTML classes adalah sebuah panggilan untuk melakukan pengelompokan atau class. misalnya saya ingin membuat class header dan class untuk paragraphs.",content:`HTML CLASSES # Apa itu HTML classes ? # HTML classes adalah sebuah panggilan untuk melakukan pengelompokan atau class. misalnya saya ingin membuat class header dan class untuk paragraphs.
Langsung saja ke demonya agar lebih paham # Untuk melakukan class/pengelompokan terdapat sebuah tag yang bernama &lt;div&gt; yang dimana sebuah element harus diletakkan di dalam &lt;div&gt;, biasanya &lt;div&gt; akan diberi sebuah property yaitu class=&quot;&quot; atau id=&quot;&quot;
Contoh # Penggunaan tag &lt;div&gt;dan property class
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Pengelompokan/class&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- Harus di bungkus dalam tag &lt;div&gt; --&gt; &lt;!-- Yang diberi nama class yaitu header --&gt; &lt;div class=&quot;box&quot;&gt; &lt;h1&gt;Hello world&lt;/h1&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Contoh lagi # &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Contoh ke 2&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;main&quot;&gt; &lt;p&gt;Halo nama saya kuro&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Styling dengan css # Keuntungan menggunakan class ini kita bisa melakukan style di class itu. Jika kita ingin memberi style pada sebuah class maka kita perlu melakukan .+nama class. Jika menggunakan id maka lakukan #+nama id
Contoh styling menggunakan nama class # /* sebuah titik di depan nama class */ .box { width: 100px; height: 100px; background-color: red; } Artinya saya akan memberi style pada sebuah class yang bernama box dengan property width,height,dan background-color
Dengan element di dalamnya # .box h1 { color: blue; } Artinya saya akan memberi style pada sebuah class yang didalamnya terdapat tag &lt;h1&gt; dengan property color.
Contoh styling menggunakan id # #main { width: 100px; height: 100px; background-color: red; } Artinya saya akan memberi style pada sebuah id yang bernama main dengan property width,height,dan background-color
Dengan element di dalamnya # #main p { color: purple; } Artinya saya akan memberi style pada sebuah id yang bernama main yang di dalamnya terdapat tag &lt;p&gt; dengan property color
Note # untuk penamaan class dan id itu bebas atau sesuai keinginan. Jika memakai id hanya dapat boleh satu dalam suatu halaman, tidak boleh sama dengan element lain. Jika memakai class diperbolehkan sama dengan element lain.
`}),e.add({id:30,href:"/python/tutorial/kondisi/",title:"Kondisi di dalam Python",description:"Kondisi dalam Python.",content:`Kondisi If # Pengambilan keputusan (kondisi if) digunakan untuk mengantisipasi kondisi yang terjadi saat jalanya program dan menentukan tindakan apa yang akan diambil sesuai dengan kondisi.
Pada python ada beberapa statement/kondisi diantaranya adalah if, else dan elif Kondisi if digunakan untuk mengeksekusi kode jika kondisi bernilai benar True.
Jika kondisi bernilai salah False maka statement/kondisi if tidak akan di-eksekusi.
Dibawah ini adalah contoh penggunaan kondisi if pada Python
#Kondisi if adalah kondisi yang akan dieksekusi oleh program jika bernilai benar atau TRUE nilai = 9 #jika kondisi benar/TRUE maka program akan mengeksekusi perintah dibawahnya if(nilai &gt; 7): print(&quot;Sembilan Lebih Besar Dari Angka Tujuh&quot;) # Kondisi Benar, Dieksekusi #jika kondisi salah/FALSE maka program tidak akan mengeksekusi perintah dibawahnya if(nilai &gt; 10): print(&quot;Sembilan Lebih Besar Dari Angka Sepuluh&quot;) # Kondisi Salah, Maka tidak tereksekusi Dari contoh diatas, jika program dijalankan maka akan mencetak string &ldquo;Sembilan Lebih Besar Dari Angka Tujuh&rdquo; sebanyak 1 kali yaitu pada if pertama. Di if kedua statement bernilai salah, jadi perintah print(&ldquo;Sembilan Lebih Besar Dari Angka Sepuluh&rdquo;) tidak akan dieksekusi.
Kondisi If Else # Pengambilan keputusan (kondisi if else) tidak hanya digunakan untuk menentukan tindakan apa yang akan diambil sesuai dengan kondisi, tetapi juga digunakan untuk menentukan tindakan apa yang akan diambil/dijalankan jika kondisi tidak sesuai.
Pada python ada beberapa statement/kondisi diantaranya adalah if, else dan elif Kondisi if digunakan untuk mengeksekusi kode jika kondisi bernilai benar.
Kondisi if else adalah kondisi dimana jika pernyataan benar True maka kode dalam if akan dieksekusi, tetapi jika bernilai salah False maka akan mengeksekusi kode di dalam else.
Dibawah ini adalah contoh penggunaan kondisi if else pada Python
#Kondisi if else adalah jika kondisi bernilai TRUE maka akan dieksekusi pada if, tetapi jika bernilai FALSE maka akan dieksekusi kode pada else nilai = 3 #Jika pernyataan pada if bernilai TRUE maka if akan dieksekusi, tetapi jika FALSE kode pada else yang akan dieksekusi. if(nilai &gt; 7): print(&quot;Selamat Anda Lulus&quot;) else: print(&quot;Maaf Anda Tidak Lulus&quot;) Pada contoh diatas, jika program dijalankan maka akan mencetak string &ldquo;Maaf Anda Tidak Lulus&rdquo; karena pernyataan pada if bernilai False
Kondisi Elif # Pengambilan keputusan (kondisi if elif) merupakan lanjutan/percabangan logika dari “kondisi if”. Dengan elif kita bisa membuat kode program yang akan menyeleksi beberapa kemungkinan yang bisa terjadi. Hampir sama dengan kondisi “else”, bedanya kondisi “elif” bisa banyak dan tidak hanya satu.
Dibawah ini adalah contoh penggunaan kondisi elif pada Python
#Contoh penggunaan kondisi elif hari_ini = &quot;Minggu&quot; if(hari_ini == &quot;Senin&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Selasa&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Rabu&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Kamis&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Jumat&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Sabtu&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Minggu&quot;): print(&quot;Saya akan libur&quot;) Pada contoh diatas, jika program dijalankan maka akan mencetak string &ldquo;Saya akan libur&rdquo;.
`}),e.add({id:31,href:"/html/tutorial/html-id/",title:"HTML ID",description:"ID adalah attribute pada HTML yang digunakan untuk memberikan tanda pada element HTML yang sifatnya unique.",content:`HTML ID # ID adalah attribute pada HTML yang digunakan untuk memberikan tanda pada element HTML yang sifatnya unique. Unique? Artinya kalian tidak boleh memiliki element dengan ID yang sama di dalam HTML. Cara mengakses ID di dalam CSS adalah dengan tanda pagar (#), misalnya seperti di bawah ini:
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;HTML ID&lt;/title&gt; &lt;style&gt; #coba-id { color: lightblue; background-color: teal; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 id=&quot;coba-id&quot;&gt;memberi style pada id&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; Perbedaan ID dengan class # Element HTML boleh memiliki class yang sama, sementara ID tidak. ID memiliki specifity yang lebih besar dibanding dengan class, apa maksudnya ini? Lihat contoh dibawah agar lebih jelas. &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Contoh Specifity Pada ID&lt;/title&gt; &lt;style&gt; #ini-id { color: lightgreen; background-color: blue; } .ini-class { background-color: red; color: orange; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 id=&quot;ini-id&quot; class=&quot;ini-class&quot;&gt;ID Memiliki Specifity lebih besar dibandingkan class&lt;/h1&gt; &lt;!-- h1 di atas akan memiliki warna lightgreen dengan background blue, sesuai dengan style yang diberikan pada ID. --&gt; &lt;!-- Hal ini disebabkan karena ID memiliki speficity lebih besar dibandingkan dengan class. --&gt; &lt;/body&gt; &lt;/html&gt; Catatan:
Penulisan ID bersifat case sensitif, berarti id=&quot;test-id&quot; dengan id=&quot;TEST-ID&quot; itu berbeda. Penulisan ID harus memiliki setidaknya 1 karakter. Penulisan ID tidak boleh diawali dengan angka. Penulisan ID tidak boleh mengandung spasi, tab, dan sejenisnya. Referensi:
W3School MDN `}),e.add({id:32,href:"/python/tutorial/perulangan/",title:"Perulangan di dalam Python",description:"Perulangan dalam Python.",content:`Apa itu loop? # Secara umum, pernyataan pada bahasa pemrograman akan dieksekusi secara berurutan. Pernyataan pertama dalam sebuah fungsi dijalankan pertama, diikuti oleh yang kedua, dan seterusnya. Tetapi akan ada situasi dimana Anda harus menulis banyak kode, dimana kode tersebut sangat banyak. Jika dilakukan secara manual maka Anda hanya akan membuang-buang tenaga dengan menulis beratus-ratus bahkan beribu-ribu kode. Untuk itu Anda perlu menggunakan pengulangan di dalam bahasa pemrograman Python.
Jenis loop dalam Python # Di dalam bahasa pemrograman Python pengulangan dibagi menjadi 3 bagian, yaitu :
While Loop For Loop Nested Loop While Loop # Pengulangan While Loop di dalam bahasa pemrograman Python dieksesusi statement berkali-kali selama kondisi bernilai benar atau True.
Dibawah ini adalah contoh penggunaan pengulangan While Loop.
#Contoh penggunaan While Loop #Catatan: Penentuan ruang lingkup di Python bisa menggunakan tab alih-alih menggunakan tanda kurung count = 0 while (count &lt; 9): print (&quot;The count is: &quot;, count) count = count + 1 print (&quot;Good bye!&quot;) For Loop # Pengulangan for pada Python memiliki kemampuan untuk mengulangi item dari urutan apapun, seperti list atau string.
Dibawah ini adalah contoh penggunaan pengulangan For Loop.
#Contoh pengulangan for sederhana angka = [1,2,3,4,5] for x in angka: print(x) #Contoh pengulangan for buah = [&quot;nanas&quot;, &quot;apel&quot;, &quot;jeruk&quot;] for makanan in buah: print (&quot;Saya suka makan&quot;, makanan) Nested Loop # Bahasa pemrograman Python memungkinkan penggunaan satu lingkaran di dalam loop lain. Bagian berikut menunjukkan beberapa contoh untuk menggambarkan konsep tersebut.
Dibawah ini adalah contoh penggunaan Nested Loop.
#Contoh penggunaan Nested Loop #Catatan: Penggunaan modulo pada kondisional mengasumsikan nilai selain nol sebagai True(benar) dan nol sebagai False(salah) i = 2 while(i &lt; 100): j = 2 while(j &lt;= (i/j)): if not(i%j): break j = j + 1 if (j &gt; i/j) : print(i, &quot; is prime&quot;) i = i + 1 print(&quot;Good bye!&quot;) `}),e.add({id:33,href:"/html/tutorial/iframe/",title:"Iframe",description:"Iframe adalah singkatan dari Inline Frame, sebuah komponen dari file HTML yang memungkinkan Anda menyematkan video, dokumen, dan file lainnya ke dalam sebuah halaman website.",content:`HTML Iframe # Iframe adalah singkatan dari Inline Frame, sebuah komponen dari file HTML yang memungkinkan Anda menyematkan video, dokumen, dan file lainnya ke dalam sebuah halaman website.
Proses untuk menyematkan file dengan teknik ini disebut sebagai embed iframe. Pada sebuah file HTML, penggunaan iframe ditandai dengan adanya tag &lt;iframe&gt;.
Ketika menggunakan iframe HTML, file yang disematkan bisa berasal dari halaman lain website Anda. Namun, bisa juga dari website lain. Contoh yang paling umum dari penggunaan iframe adalah penyematan video YouTube.
Contoh # &lt;iframe src=&quot;url&quot; title=&quot;isi dari deksripsi iframe&quot;&gt;&lt;/iframe&gt; Contoh menghilangkan border pada iframe jika terdapat border
&lt;iframe src=&quot;url&quot; style=&quot;border:none;&quot; title=&quot;contoh&quot;&gt;&lt;/iframe&gt; `}),e.add({id:34,href:"/python/tutorial/number/",title:"Number di dalam Python",description:"Number di dalam Python.",content:`Number adalah tipe data Python yang menyimpan nilai numerik. Number adalah tipe data yang tidak berubah. Ini berarti, mengubah nilai dari sejumlah tipe data akan menghasilkan objek yang baru dialokasikan.
Objek Number dibuat saat Kita memberikan nilai pada-nya. Sebagai contoh : angkaPertama = 1 angkaKedua = 33
Python mendukung beberapa tipe data Number diantaranya :
Int Float Complex Berikut ini adalah beberapa contoh dari Tipe data Number pada Python :
Int Float Complex 20 0.1 3.14j 300 1.20 35.j -13 -41.2 3.12e-12j 020 32.23+e123 .873j -0103 -92. -.123+0J -0x212 -32.52e10 3e+123J 0x56 60.2-E13 4.31e-4j Konversi Tipe Data Number Python # Pada Python kita bisa mengkonversi tipe data dengan menggunakan fungsi. Dibawah ini adalah beberapa fungsi untuk mengkonversi tipe data number Python.
int(x) untuk meng-konversi x menjadi plain integer. long(x) untuk meng-konversi x menjadi long integer. float(x) untuk meng-konversi x menjadi floating point number. complex(x)untuk meng-konversi x menjadi complex number dengna real part x dan imaginary part zero. complex(x, y) untuk meng-konversi x dan y menjadi complex number dengan real part x dan imaginary part y. x dan numeric expressions y. Fungsi Matematika Python # Pada bahasa pemrograman Python terdapat fungsi untuk melakukan perhitungan matematis, berikut adalah daftarnya :
Nama Penggunaan Penjelasan Absolute abs(x) Nilai absolut dari x:(positive) jarak antara x and 0. Ceiling ceil(x) Ceiling dari x: integer terkecil yang kurang dari x. Cmp cmp(x, y)	-1 if x &lt; y, 0 if x == y, or 1 if x &gt; y. Tidak berlaku lagi dengan Python 3. Sebaliknya gunakan return (x&gt;y)-(x Eksponen exp(x) Nilai eksponen dari x: ex Fabs fabs(x) Nilai absolut dari x. Floor floor(x) Nilai dasar dari x: internet terbesar tidak lebih besar dari x. Log log(x) Logaritma dari x, untuk x &gt; 0. Log 10 log10(x) Basis 10 logaritma dari x, untuk x &gt; 0. Max max(x1, x2,&hellip;) Argumen terbesar: Nilai terdekat dengan tak terhingga positif Min min(x1, x2,&hellip;) Argumen terkecil: nilai yang paling mendekati tak berhingga negatif. Modf modf(x) Bagian pecahan dan bilangan bulat dari x dalam tupel dua item. Kedua bagian memiliki tanda yang sama dengan x. Bagian integer dikembalikan sebagai float. Pow pow(x, y) Nilai x ** y. Round round(x [,n]) X dibulatkan menjadi n digit dari titik desimal. Putaran Python jauh dari nol sebagai tie-breaker: round (0.5) adalah 1.0 dan round (-0.5) adalah -1.0. Akar Kuadrat sqrt(x) Akar kuadrat x untuk x&gt; 0. Fungsi Nomor Acak Python # Nomor acak digunakan untuk aplikasi permainan, simulasi, pengujian, keamanan, dan privasi. Python mencakup fungsi berikut yang umum digunakan. Berikut adalah daftarnya :
Nama Penggunaan Penjelasan Choice choice(seq) Item acak dari list, tuple, atau string. RandRange randrange ([start,] stop [,step]) Elemen yang dipilih secara acak dari jangkauan (start, stop, step). Random random() A random float r, sehingga 0 kurang dari atau sama dengan r dan r kurang dari 1 Seed seed([x]) Menetapkan nilai awal integer yang digunakan dalam menghasilkan bilangan acak. Panggil fungsi ini sebelum memanggil fungsi modul acak lainnya. Tidak ada pengembalian Shuffle shuffle(lst) Mengacak daftar dari daftar di tempat. Tidak ada pengembalian Floor floor(x) The floor of x: the largest integer not greater than x. Uniform uniform(x, y) Sebuah float acak r, sedemikian rupa sehingga x kurang dari atau sama dengan r dan r kurang dari y. Fungsi Trigonometri Python # Python mencakup fungsi berikut yang melakukan perhitungan trigonometri. Berikut adalah daftarnya :
Nama Penggunaan Penjelasan Acos acos(x) Kembalikan kosinus x, di radian. Asin asin(x) Kembalikan busur sinus x, dalam radian. Atan atan(x) Kembalikan busur singgung x, di radian. Atan 2 atan2(y, x) Kembali atan (y / x), di radian. Kosinus cos(x) Kembalikan kosinus x radian. Hypot hypot(x, y) Kembalikan norma Euclidean, sqrt (x * x + y * y). Sin sin(x) Kembalikan sinus dari x radian. Tan tan(x) Kembalikan tangen x radian. Derajat degrees(x) Mengonversi sudut x dari radian ke derajat. Radian radians(x) Mengonversi sudut x dari derajat ke radian. Konstanta Matematika Python # Berikut adalah daftar konstanta matematika dalam python:
Nama Penggunaan Penjelasan Pi pi Konstanta Pi matematika e e Konstanta e matematika `}),e.add({id:35,href:"/html/tutorial/script/",title:"Script",description:"Dalam HTML, tag `<script>` digunakan untuk menyisipkan script, biasanya menggunakan Javascript.",content:`HTML Script # Dalam HTML, tag &lt;script&gt; digunakan untuk menyisipkan script, biasanya menggunakan Javascript. Kenapa kita membutuhkan script? Hal ini diperlukan untuk membuat website kita menjadi semakin interaktif. Kalian bisa menuliskan script langsung di dalam HTML atau bisa juga dipisah menjadi file yang berbeda lalu tambahkan attribute src=&quot;&quot; untuk menyambungkan script tersebut.
Memanipulasi website dengan Javascript disebut dengan DOM Manipulation. Kalian bisa belajar tentang DOM Manipulation di repository bellshade Javascript.
Contoh Penggunaan &lt;script&gt; # &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Script&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 id=&quot;h1&quot;&gt;Belum diklik!&lt;/h1&gt; &lt;button id=&quot;button&quot;&gt;Klik Saya!&lt;/button&gt; &lt;script&gt; document.getElementById(&quot;button&quot;).addEventListener(&quot;click&quot;, function () { document.getElementById(&quot;h1&quot;).innerText = &quot;Sudah diklik!&quot;; }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; Attribute yang ada pada &lt;script&gt; # Attribute value Deskripsi async async Digunakan untuk membuat script didownload saat HTML sedang diparse, lalu setelah selesai didownload, script langsung dieksekusi/dijalankan tanpa perlu menunggu pada titik yang memiliki tag &lt;script&gt;. (Attribute ini hanya bisa digunakan pada script eksternal) crossorigin anonymous, use-credential Membuat mode request menjadi HTTP CORS Request. defer defer Digunakan untuk membuat script didownload pada saat HTML sedang diparse. Setelah selesai didownload, script tidak langsung dieksekusi. Script baru dieksekusi dan dijalankan ketika HTML telah selesai diparse. (Attribute ini hanya bisa digunakan pada script eksternal) integrity hash file Digunakan untuk mengizinkan browser memeriksa script yang diambil untuk memastikan bahwa jangan jalankan apabila sumber dimanipulasi. nomodule true, false Digunakan untuk menentukan bahwa script tidak boleh dijalankan di browser yang mendukung modul ES2015. reffererpolicy no-referrer, no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url Digunakan untuk menentukan informasi mana yang akan dikirim saat mengambil script. src URL Digunakan untuk menentukan url dari file script yang akan digunakan. type scripttype Digunakan untuk menentukan jenis media dari script. Referensi:
W3School `}),e.add({id:36,href:"/python/tutorial/string/",title:"String di dalam Python",description:"String di dalam Python.",content:`String adalah jenis yang paling populer di bahasa pemrograman. Kita bisa membuatnya hanya dengan melampirkan karakter dalam tanda kutip. Python memperlakukan tanda kutip tunggal sama dengan tanda kutip ganda. Membuat string semudah memberi nilai pada sebuah variabel.
Dibawah ini adalah contoh sederhana dari sebuah string pada bahasa pemrograman Python.
print(&ldquo;Hello World&rdquo;) Mengakses Nilai dalam String Python tidak menggunakan tipe karakter titik koma ; Ini diperlakukan sebagai string dengan panjang satu, sehingga juga dianggap sebagai substring.
Untuk mengakses substring, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan substring Anda. Sebagai contoh :
name = &lsquo;John Doe&rsquo; message = &ldquo;John Doe belajar bahasa python di Belajarpython&rdquo; print (&ldquo;name[0]: &ldquo;, name[0]) print (&ldquo;message[1:4]: &ldquo;, message[1:4]) Bila kode diatas dieksekusi, maka akan menghasilkan hasil sebagai berikut :
name[0]: J message[1:4]: ohn
Mengupdate String Anda dapat “memperbarui” string yang ada dengan (kembali) menugaskan variabel ke string lain. Nilai baru dapat dikaitkan dengan nilai sebelumnya atau ke string yang sama sekali berbeda sama sekali. Sebagai contoh
message = &lsquo;Hello World&rsquo; print (&ldquo;Updated String :- &ldquo;, message[:6] + &lsquo;Python&rsquo;) Bila kode diatas dieksekusi, maka akan menghasilkan hasil sebagai berikut :
Updated String :- Hello Python
Escape Characters / Karakter Escape Python Dibawah ini adalah tabel dari daftar karakter escape atau karakter non-printable yang dapat diwakili/ditulis dengan awalan notasi backslash.
Notasi Backslash	Karakter Hexadecimal	Penjelasan \\a	0x07	Bell atau alert \\b	0x08	Backspace \\cx	Control-x \\C-x	Control-x \\e	0x1b	Escape \\f	0x0c	Formfeed \\M-\\C-x	Meta-Control-x \\n	0x0a	Newline \\nnn	Octal notation, dimana n berada di range 0.7 \\r	0x0d	Carriage return \\s	0x20	Space \\t	0x09	Tab \\v	0x0b	Vertical tab \\x	Character x \\xnn	Notasi Hexadecimal, dimana n berada di range 0.9, a.f, atau A.F Operator Spesial String Python Asumsikan variabel string adalah ‘Belajar’ dan variabel b adalah ‘Python’, lalu dibawah ini adalah operator yang bisa dipakai pada kedua string di variabel tersebut. a = &ldquo;Belajar&rdquo; b = &ldquo;Python&rdquo;
Berikut adalah daftar operator spesial string pada Python :
Operator	Contoh Penjelasan
a + b	akan menghasilkan BelajarPython Concatenation - Menambahkan nilai pada kedua sisi operator a*2	akan menghasilkan BelajarBelajar Pengulangan - Membuat string baru, menggabungkan beberapa salinan dari string yang sama []	a[1]	akan menghasilkan e Slice - Memberikan karakter dari indeks yang diberikan [ : ]	a[1:4]	akan menghasilkan ela Range Slice - Memberikan karakter dari kisaran yang diberikan in	B in a	akan menghasilkan 1 Keanggotaan - Mengembalikan nilai true jika ada karakter dalam string yang diberikan not in	Z not in a	akan menghasilkan 1 Keanggotaan - Mengembalikan nilai true jika karakter tidak ada dalam string yang diberikan r/R	print r’\\n’ prints \\n dan print R’\\n’prints \\n Raw String -	Menekan arti aktual karakter Escape. Sintaks untuk string mentah sama persis dengan string biasa kecuali operator string mentah, huruf “r”, yang mendahului tanda petik. “R” bisa berupa huruf kecil (r) atau huruf besar (R) dan harus ditempatkan tepat sebelum tanda kutip pertama. %	Format - Melakukan format String Operator Format String Python Salah satu fitur Python yang paling keren adalah format string operator %. Operator ini unik untuk string dan membuat paket memiliki fungsi dari keluarga printf C () C. berikut adalah contoh sederhananya : print (&ldquo;My name is %s and weight is %d kg!&rdquo; % (&lsquo;Zara&rsquo;, 21)) Berikut adalah daftar lengkap simbol yang bisa digunakan bersamaan dengan % :
Operator	Penjelasan %c	character %s	Konversi string melalui str () sebelum memformat %i	Dianggap sebagai bilangan bulat desimal %d	Dianggap sebagai bilangan bulat desimal %u	Unsigned decimal integer %o	Bilangan bulat oktal %x	Bilangan bulat heksadesimal (huruf kecil) %X	Bilangan bulat heksadesimal (huruf besar) %e	Notasi eksponensial (dengan huruf kecil ‘e’) %E	Notasi eksponensial (dengan huruf besar ‘E’) %f	Bilangan real floating point %g	Yang lebih pendek dari% f dan% e %G	Lebih pendek dari% f dan% E Triple Quote Python Python triple quotes digunakan dengan membiarkan string untuk ditulis dalam beberapa baris, termasuk kata kerja NEWLINEs, TABs, dan karakter khusus lainnya. Sintaks untuk triple quotes terdiri dari tiga tanda kutip tunggal atau ganda ditulis berturut-turut : Berikut adalah contohnya :
kutipantiga = &ldquo;&ldquo;&ldquo;this is a long string that is made up of several lines and non-printable characters such as TAB ( \\t ) and they will show up that way when displayed. NEWLINEs within the string, whether explicitly given like this within the brackets [ \\n ], or just a NEWLINE within the variable assignment will also show up. &quot;&rdquo;&rdquo; print (kutipantiga) String Unicode Python Pada Python 3, semua string diwakili dalam Unicode. Sedangkan pada Python 2 disimpan secara internal sebagai 8-bit ASCII, maka diperlukanlampiran ‘u’ untuk membuatnya menjadi Unicode. Tetapi hal ini tidak lagi diperlukan sekarang. :
Metode String Built-in
Python menyertakan metode built-in berikut untuk memanipulasi string
Metode	Penjelasan capitalize()	Meng-kapitalkan huruf pertama string center(width, fillchar)	Mengembalikan string yang dilapisi dengan fillchar dengan string asli yang dipusatkan pada total width kolom. count(str, beg = 0,end = len(string))	Menghitung berapa kali str yang terjadi dalam string atau dalam substring string jika memulai indeks beg dan end index end diberikan. decode(encoding = &lsquo;UTF-8&rsquo;,errors = &lsquo;strict&rsquo;)	Dekode string menggunakan codec yang terdaftar untuk pengkodean. Encoding default ke pengkodean string default. encode(encoding = &lsquo;UTF-8&rsquo;,errors = &lsquo;strict&rsquo;)	Mengembalikan versi string yang dikodekan string; Pada kesalahan, default adalah menaikkan ValueError kecuali jika kesalahan diberikan dengan ‘ignore’ atau ‘replace’. endswith(suffix, beg = 0, end = len(string))	Menentukan apakah string atau substring string (jika memulai indeks memohon dan mengakhiri akhir indeks diberikan) berakhir dengan akhiran; Mengembalikan nilai true jika benar dan salah. expandtabs(tabsize = 8)	Memperluas tab dalam string ke banyak ruang; Default ke 8 spasi per tab jika tabsize tidak tersedia. find(str, beg = 0 end = len(string))	Tentukan jika str terjadi dalam string atau dalam substring string jika memulai indeks beg dan end index end diberikan return index jika ditemukan dan -1 sebaliknya. index(str, beg = 0, end = len(string))	Sama seperti find (), namun menimbulkan pengecualian jika str tidak ditemukan. isalnum()	Mengembalikan true jika string memiliki minimal 1 karakter dan semua karakternya alfanumerik dan false sebaliknya. isalpha()	Mengembalikan true jika string memiliki minimal 1 karakter dan semua karakter adalah abjad dan false sebaliknya. isdigit()	Mengembalikan true jika string hanya berisi digit dan false sebaliknya. islower()	Mengembalikan true jika string memiliki setidaknya 1 karakter casing dan semua karakter casing dalam huruf kecil dan false sebaliknya. isnumeric()	Mengembalikan true jika string unicode hanya berisi karakter numerik dan false sebaliknya. isspace()	Mengembalikan true jika string hanya berisi karakter spasi dan false sebaliknya. istitle()	Mengembalikan true jika string benar “titlecased” dan false sebaliknya. isupper()	Mengembalikan true jika string memiliki setidaknya satu karakter casing dan semua karakter casing ada dalam huruf besar dan false sebaliknya. join(seq)	Merges (concatenates) representasi string elemen dalam urutan seq menjadi string, dengan string pemisah. len(string)	Mengembalikan panjang string ljust(width[, fillchar])	Mengembalikan string berlapis ruang dengan string asli dibiarkan dibenarkan ke kolom lebar total. lower()	Mengonversi semua huruf besar dalam bentuk string menjadi huruf kecil. lstrip()	Menghapus semua spasi utama dalam string. maketrans()	Mengembalikan tabel terjemahan untuk digunakan dalam fungsi terjemahan. max(str)	Mengembalikan karakter alfabetik dari string str. min(str)	Mengembalikan min karakter abjad dari string str. replace(old, new [, max])	Menggantikan semua kemunculan lama dalam string dengan kejadian baru atau paling maksimal jika max diberikan. rfind(str, beg = 0,end = len(string))	Sama seperti find (), tapi cari mundur dalam string. rindex( str, beg = 0, end = len(string))	Sama seperti index (), tapi cari mundur dalam string. rjust(width,[, fillchar])	Mengembalikan string berlapis ruang dengan senar asli benar-dibenarkan untuk total kolom lebar. rstrip()	Menghapus semua spasi spasi string. split(str=&rdquo;&rdquo;, num=string.count(str))	Membagi string sesuai dengan pemisah str (ruang jika tidak disediakan) dan mengembalikan daftar substring; Terpecah menjadi paling banyak substring jika diberikan. splitlines( num=string.count(&rsquo;\\n&rsquo;))	Membagi string sama sekali (atau num) NEWLINEs dan mengembalikan daftar setiap baris dengan NEWLINEs dihapus. startswith(str, beg=0,end=len(string)	Determines if string or a substring of string (if starting index beg and ending index end are given) starts with substring str; returns true if so and false otherwise. strip([chars])	Lakukan kedua lstrip () dan rstrip () pada string swapcase()	Kasus invers untuk semua huruf dalam string. title()	Mengembalikan versi string “titlecased”, yaitu, semua kata diawali dengan huruf besar dan sisanya huruf kecil. translate(table, deletechars=&rdquo;&rdquo;)	Menerjemahkan string sesuai dengan tabel terjemahan str (256 karakter), menghapus string del. upper()	Mengonversi huruf kecil dalam bentuk string ke huruf besar. zfill (width)	Mengembalikan string asli yang tertinggal dengan angka nol ke total karakter lebar; Dimaksudkan untuk angka, zfill () mempertahankan tanda apapun yang diberikan (kurang satu nol). isdecimal()	Mengembalikan nilai true jika string unicode hanya berisi karakter desimal dan false sebaliknya.
`}),e.add({id:37,href:"/html/tutorial/file-path/",title:"File Path",description:"File path menjelaskan tentang lokasi file, gambar, dll. lebih dikenal dengan struktur folder website",content:`File Path Pada HTML # File path menjelaskan tentang lokasi file, gambar, dll. lebih dikenal dengan struktur folder website
Contoh # File HTML dan File Lainnya Bersamaan # &lt;img src=&quot;gambar_pemandangan.jpg&quot;&gt; Maka file gambar tersebut terletak sama dengan file html
📂HTML-CSS/ ├── 📄index.html └── 🚞gambar_pemandangan.jpg File HTML Terpisah dan File Lainnya Dalam Folder Lain # &lt;img src=&quot;picture/gambar_saya.jpg&quot;&gt; Maka file tersebut terdapat pada folder picture
📂HTML-CSS/ ├── 📄index.html └── 📂Pictures/ └── 🚞gambar_pemandangan.jpg File HTML Terpisah dan File Lainnya dengan URL # &lt;img src=&quot;https://gambarsaya.url/gambar.jpg&quot;&gt; Contoh Selain dengan Gambar # Memanggil file CSS dan file html terpisah
&lt;link rel=&quot;stylesheet&quot; href=&quot;folder_lain/file.css&quot; /&gt; Memanggil file JavaScript dan file HTML terpisah
&lt;script src=&quot;folder_lain/file.js&quot;&gt;&lt;/script&gt; `}),e.add({id:38,href:"/python/tutorial/list/",title:"Lists di dalam Python",description:"Lists di dalam Python.",content:`Dalam bahasa pemrograman Python, struktur data yang paling dasar adalah urutan atau lists. Setiap elemen-elemen berurutan akan diberi nomor posisi atau indeksnya. Indeks pertama dalam list adalah nol, indeks kedua adalah satu dan seterusnya.
Python memiliki enam jenis urutan built-in, namun yang paling umum adalah list dan tuple. Ada beberapa hal yang dapat Kita lakukan dengan semua jenis list. Operasi ini meliputi pengindeksan, pengiris, penambahan, perbanyak, dan pengecekan keanggotaan. Selain itu, Python memiliki fungsi built-in untuk menemukan panjang list dan untuk menemukan elemen terbesar dan terkecilnya.
Membuat List Python # List adalah tipe data yang paling serbaguna yang tersedia dalam bahasa Python, yang dapat ditulis sebagai daftar nilai yang dipisahkan koma (item) antara tanda kurung siku. Hal penting tentang daftar adalah item dalam list tidak boleh sama jenisnya.
Membuat list sangat sederhana, tinggal memasukkan berbagai nilai yang dipisahkan koma di antara tanda kurung siku. Dibawah ini adalah contoh sederhana pembuatan list dalam bahasa Python.
#Contoh sederhana pembuatan list pada bahasa pemrograman python list1 = ['kimia', 'fisika', 1993, 2017] list2 = [1, 2, 3, 4, 5 ] list3 = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;] Akses Nilai Dalam List Python # Untuk mengakses nilai dalam list python, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan nilai yang tersedia pada indeks tersebut.
Berikut adalah contoh cara mengakses nilai di dalam list python :
#Cara mengakses nilai di dalam list Python list1 = ['fisika', 'kimia', 1993, 2017] list2 = [1, 2, 3, 4, 5, 6, 7 ] print (&quot;list1[0]: &quot;, list1[0]) print (&quot;list2[1:5]: &quot;, list2[1:5]) Setelah Kita menjalankan kode diatas, hasilnya akan seperti dibawah ini :
list1[0]: fisika list2[1:5]: [2, 3, 4, 5]
Update Nilai Dalam List Python # Kita dapat memperbarui satu atau beberapa nilai di dalam list dengan memberikan potongan di sisi kiri operator penugasan, dan Kita juga dapat menambahkan nilai ke dalam list dengan metode append (). Sebagai contoh :
list = ['fisika', 'kimia', 1993, 2017] print (&quot;Nilai ada pada index 2 : &quot;, list[2]) list[2] = 2001 print (&quot;Nilai baru ada pada index 2 : &quot;, list[2]) Hapus Nilai Dalam List Python # Untuk menghapus nilai di dalam list python, Kita dapat menggunakan salah satu pernyataan del jika kita tahu persis elemen yang akan dihapus. Kita dapat menggunakan metode remove() jika tidak tahu persis item mana yang akan dihapus. Sebagai contoh :
#Contoh cara menghapus nilai pada list python list = ['fisika', 'kimia', 1993, 2017] print (list) del list[2] print (&quot;Setelah dihapus nilai pada index 2 : &quot;, list) Operasi Dasar Pada List Python # List Python merespons operator + dan * seperti string; Itu artinya penggabungan dan pengulangan di sini juga berlaku, kecuali hasilnya adalah list baru, bukan sebuah String.
Sebenarnya, list merespons semua operasi urutan umum yang kami gunakan pada String di bab sebelumnya. Dibawah ini adalah tabel daftar operasi dasar pada list python.
Python Expression Hasil len([1, 2, 3, 4]) 4 Length[1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] Concatenation[&lsquo;Halo!&rsquo;] * 4 [&lsquo;Halo!&rsquo;, &lsquo;Halo!&rsquo;, &lsquo;Halo!&rsquo;, &lsquo;Halo!&rsquo;] Repetition2 in [1, 2, 3] True Membership for x in [1,2,3] : print (x,end = &rsquo; &lsquo;) 1 2 3 Indexing, Slicing dan Matrix Pada List Python # Karena list adalah urutan, pengindeksan dan pengiris bekerja dengan cara yang sama untuk list seperti yang mereka lakukan untuk String.
Dengan asumsi input berikut :
L = ['C++'', 'Java', 'Python']
Python Expression Hasil L[2] &lsquo;Python&rsquo;	Offset mulai dari nol L[-2] &lsquo;Java&rsquo;	Negatif: hitung dari kanan [1:] [&lsquo;Java&rsquo;, &lsquo;Python&rsquo;]	Slicing mengambil bagian Method dan Fungsi Build-in Pada List Python # Python menyertakan fungsi built-in sebagai berikut :
Python Function Penjelasan cmp(list1, list2) #	Tidak lagi tersedia dengan Python 3 len(list) Memberikan total panjang list. max(list) Mengembalikan item dari list dengan nilai maks. min(list) Mengembalikan item dari list dengan nilai min. list(seq) Mengubah tuple menjadi list. Python menyertakan methods built-in sebagai berikut # Python Methods Penjelasan list.append(obj) Menambahkan objek obj ke list list.count(obj) Jumlah pengembalian berapa kali obj terjadi dalam list list.extend(seq) Tambahkan isi seq ke list list.index(obj) Mengembalikan indeks terendah dalam list yang muncul obj list.insert(index, obj) Sisipkan objek obj ke dalam list di indeks offset list.pop(obj = list[-1]) Menghapus dan mengembalikan objek atau obj terakhir dari list list.remove(obj) Removes object obj from list list.reverse() Membalik list objek di tempat list.sort([func]) Urutkan objek list, gunakan compare func jika diberikan `}),e.add({id:39,href:"/html/tutorial/head/",title:"Head",description:"merupakan salah satu element utama dalam HTML. Element `<head>` digunakan sebagai wadah untuk metadata pada HTML.",content:`HTML Head # &lt;head&gt; merupakan salah satu element utama dalam HTML. Element &lt;head&gt; digunakan sebagai wadah untuk metadata pada HTML. Apa itu metadata? Pada HTML, metadata adalah data yang berisi tentang informasi dokumen HTML, dan metadata tidak akan ditampilkan ketika kode dijalankan. Metadata biasanya digunakan untuk menentukan judul dokumen, style, script, dan informasi meta lainnya. Element yang biasa dimasukkan pada tag &lt;head&gt; adalah &lt;title&gt;, &lt;style&gt;, &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;, dan &lt;base&gt;.
&lt;title&gt; # &lt;title&gt; digunakan untuk memberikan judul pada halaman website. &lt;title&gt; hanya boleh berisi teks dan akan ditampilkan pada bar tab dalam browser. Element ini wajib ada pada dokumen HTML. Element ini juga sangat penting untuk Search Engine Optimization (SEO) karena akan ditampilkan pada mesin pencari.
&lt;style&gt; # &lt;style&gt; digunakan untuk mempercantik halaman website kita. Materi ini sudah pernah dibahas di sini, silahkan cek materi tersebut agar lebih jelas.
&lt;link&gt; # &lt;link&gt; digunakan untuk menghubungkan HTML dengan sumber daya eksternal yang dibutuhkan. Element ini paling sering digunakan untuk menghubungkan HTML dengan CSS eksternal, namun bisa juga digunakan untuk menambahkan favicon pada halaman website. Favicon adalah gambar kecil yang ditampilkan di sebelah judul pada tab browser. Untuk menambahkannya, kalian bisa menggunakan tag &lt;link&gt; seperti ini:
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;id&quot;&gt; &lt;head&gt; &lt;title&gt;Bellshade&lt;/title&gt; &lt;link rel=&quot;shortcut icon&quot; href=&quot;bellshade.png&quot; type=&quot;image/x-icon&quot; /&gt; &lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt; &lt;meta&gt; # &lt;meta&gt; digunakan untuk menentukan karakter set, deskripsi halaman, pembuat halaman, dan lainnya. Selebihnya, lihat materi ini untuk penjelasan lebih detail tentang &lt;meta&gt;
&lt;script&gt; # &lt;script&gt; digunakan untuk menyisipkan script, biasanya menggunakan JavaScript. Coba lihat materi ini karena sudah pernah dibahas sebelumnya.
&lt;base&gt; # &lt;base&gt; digunakan untuk menentukkan URL dasar sebuah dokumen, artinya kita akan membuat sebuah alamat URL sebagai sandaran untuk semua relative URL. Kalian hanya boleh menggunakan satu element &lt;base&gt;. Di dalam element &lt;base&gt; kalian bisa menggunakan href, target, atapun keduanya. Jika kita menambahkan atribut target pada element ini, maka default semua hyperlink akan memiliki atribut yang diberikan pada element &lt;base&gt;.
`}),e.add({id:40,href:"/python/tutorial/tuple/",title:"Tuple di dalam Python",description:"Tuple di dalam Python.",content:`Sebuah tupel adalah urutan objek Python yang tidak berubah. Tupel adalah urutan, seperti daftar. Perbedaan utama antara tupel dan daftarnya adalah bahwa tupel tidak dapat diubah tidak seperti List Python. Tupel menggunakan tanda kurung, sedangkan List Python menggunakan tanda kurung siku.
Membuat tuple semudah memasukkan nilai-nilai yang dipisahkan koma. Secara opsional, Anda dapat memasukkan nilai-nilai yang dipisahkan koma ini di antara tanda kurung juga. Sebagai contoh :
#Contoh sederhana pembuatan tuple pada bahasa pemrograman python
tup1 = (&lsquo;fisika&rsquo;, &lsquo;kimia&rsquo;, 1993, 2017) tup2 = (1, 2, 3, 4, 5 ) tup3 = &ldquo;a&rdquo;, &ldquo;b&rdquo;, &ldquo;c&rdquo;, &ldquo;d&rdquo; Tupel kosong ditulis sebagai dua tanda kurung yang tidak berisi apa-apa, contohnya : tup1 = (); Untuk menulis tupel yang berisi satu nilai, Anda harus memasukkan koma, meskipun hanya ada satu nilai, contohnya : tup1 = (50,) Seperti indeks String, indeks tuple mulai dari 0, dan mereka dapat diiris, digabungkan, dan seterusnya
Akses Nilai Dalam Tuple Python Untuk mengakses nilai dalam tupel, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan nilai yang tersedia pada indeks tersebut. Sebagai contoh :
#Cara mengakses nilai tuple
tup1 = (&lsquo;fisika&rsquo;, &lsquo;kimia&rsquo;, 1993, 2017) tup2 = (1, 2, 3, 4, 5, 6, 7 )
print (&ldquo;tup1[0]: &ldquo;, tup1[0]) print (&ldquo;tup2[1:5]: &ldquo;, tup2[1:5]) Setelah Anda mengeksekusi kode diatas, hasilnya akan seperti dibawah ini :
tup1[0]: fisika tup2[1:5]: (2, 3, 4, 5)
Update Nilai Dalam Tuple Python Tuple tidak berubah, yang berarti Anda tidak dapat memperbarui atau mengubah nilai elemen tupel. Anda dapat mengambil bagian dari tupel yang ada untuk membuat tupel baru seperti ditunjukkan oleh contoh berikut.
tup1 = (12, 34.56) tup2 = (&lsquo;abc&rsquo;, &lsquo;xyz&rsquo;)
Aksi seperti dibawah ini tidak bisa dilakukan pada tuple python # Karena memang nilai pada tuple python tidak bisa diubah # tup1[0] = 100; # Jadi, buatlah tuple baru sebagai berikut # tup3 = tup1 + tup2 print (tup3) Hapus Nilai Dalam Tuple Python Menghapus elemen tuple individual tidak mungkin dilakukan. Tentu saja, tidak ada yang salah dengan menggabungkan tupel lain dengan unsur-unsur yang tidak diinginkan dibuang.
Untuk secara eksplisit menghapus keseluruhan tuple, cukup gunakan del statement. Sebagai contoh
tup = (&lsquo;fisika&rsquo;, &lsquo;kimia&rsquo;, 1993, 2017) print(tup)
hapus tuple dengan statement del # del tup
lalu buat kembali tuple yang baru dengan elemen yang diinginkan # tup = (&lsquo;Bahasa&rsquo;, &lsquo;Literasi&rsquo;, 2020) print(&ldquo;Setelah menghapus tuple :&rdquo;, tup) Operasi Dasar Pada Tuple Python Tupel merespons operator + dan * sama seperti String; Mereka berarti penggabungan dan pengulangan di sini juga berlaku, kecuali hasilnya adalah tupel baru, bukan string.
Sebenarnya, Tuple merespons semua operasi urutan umum yang kami gunakan pada String di bab sebelumnya. Dibawah ini adalah tabel daftar operasi dasar pada Tuple python
Python Expression	Hasil	Penjelasan len((1, 2, 3))	3	Length (1, 2, 3) + (4, 5, 6)	(1, 2, 3, 4, 5, 6)	Concatenation (‘Halo!’,) * 4	(‘Halo!’, ‘Halo!’, ‘Halo!’, ‘Halo!’)	Repetition 3 in (1, 2, 3)	True	Membership for x in (1,2,3) : print (x, end = ‘ ‘)	1 2 3	Iteration Indexing, Slicing dan Matrix Pada Tuple Python Karena tupel adalah urutan, pengindeksan dan pengiris bekerja dengan cara yang sama untuk tupel seperti pada String, dengan asumsi masukan berikut
Dengan asumsi input berikut : T = (&lsquo;C++&rsquo;, &lsquo;Java&rsquo;, &lsquo;Python&rsquo;)
Python Expression	Hasil	Penjelasan T[2]	&lsquo;Python&rsquo;	Offset mulai dari nol T[-2]	&lsquo;Java&rsquo;	Negatif: hitung dari kanan T[1:]	(&lsquo;Java&rsquo;, &lsquo;Python&rsquo;)	Slicing mengambil bagian Fungsi Build-in Pada Tuple Python Python menyertakan fungsi built-in sebagai berikut
Python Function	Penjelasan cmp(tuple1, tuple2)	# Tidak lagi tersedia dengan Python 3 len(tuple)	Memberikan total panjang tuple. max(tuple)	Mengembalikan item dari tuple dengan nilai maks. min(tuple)	Mengembalikan item dari tuple dengan nilai min. tuple(seq)	Mengubah seq menjadi tuple.
`}),e.add({id:41,href:"/python/tutorial/dictionary/",title:"Dictionary",description:"Dictionary dalam Python.",content:`Dictionary Python berbeda dengan List ataupun Tuple. Karena setiap urutanya berisi key dan value. Setiap key dipisahkan dari value-nya oleh titik dua (:), item dipisahkan oleh koma, dan semuanya tertutup dalam kurung kurawal. Dictionary kosong tanpa barang ditulis hanya dengan dua kurung kurawal, seperti ini: {}.
Nilai kamus bisa berupa tipe apa pun, namun key harus berupa tipe data yang tidak berubah seperti string, angka, atau tupel.
Akses Nilai Dalam Dictionary Python # Untuk mengakses elemen Dictionary, Anda dapat menggunakan tanda kurung siku yang sudah dikenal bersama dengan key untuk mendapatkan nilainya. Berikut adalah contoh sederhananya :
Contoh cara membuat Dictionary pada Python # dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'} print (&quot;dict['Name']: &quot;, dict['Name']) print (&quot;dict['Age']: &quot;, dict['Age']) Update Nilai Dalam Dictionary Python # Anda dapat memperbarui Dictionary dengan menambahkan entri baru atau pasangan nilai kunci, memodifikasi entri yang ada, atau menghapus entri yang ada seperti ditunjukkan pada contoh sederhana yang diberikan di bawah ini.
# Update dictionary python dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'} dict['Age'] = 8; # Mengubah entri yang sudah ada dict['School'] = &quot;DPS School&quot; # Menambah entri baru print (&quot;dict['Age']: &quot;, dict['Age']) print (&quot;dict['School']: &quot;, dict['School']) Hapus Elemen Dictionary Python # Anda dapat menghapus elemen Dictionary individual atau menghapus keseluruhan isi Dictionary. Anda juga dapat menghapus seluruh Dictionary dalam satu operasi.
Untuk menghapus seluruh Dictionary secara eksplisit, cukup gunakan del statement. Berikut adalah contoh sederhana :
#Contoh cara menghapus pada Dictionary Python dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'} del dict['Name'] # hapus entri dengan key 'Name' dict.clear() # hapus semua entri di dict del dict # hapus dictionary yang sudah ada print (&quot;dict['Age']: &quot;, dict['Age']) print (&quot;dict['School']: &quot;, dict['School']) Fungsi Build-in Pada Dictionary Python # Python menyertakan fungsi built-in sebagai berikut :
Fungsi Python Penjelasan cmp(dict1, dict2) Membandingkan unsur keduanya. len(dict) Memberikan panjang total Dictionary. Ini sama dengan jumlah item dalam Dictionary. str(dict) Menghasilkan representasi string yang dapat dicetak dari Dictionary type(variable) Mengembalikan tipe variabel yang lulus. Jika variabel yang dilewatkan adalah Dictionary, maka akan mengembalikan tipe Dictionary. Method Build-in Pada Dictionary Python # Python menyertakan method built-in sebagai berikut :
Method Python Penjelasan dict.clear() Menghapus semua elemen Dictionary dict.copy() Mengembalikan salinan Dictionary dict.fromkeys() Buat Dictionary baru dengan kunci dari seq dan nilai yang disetel ke nilai. dict.get(key, default=None) For key, nilai pengembalian atau default jika tombol tidak ada dalam Dictionary dict.has_key(key) Mengembalikan true jika key dalam Dictionary, false sebaliknya dict.items() Mengembalikan daftar dari pasangan tuple dictionary (key, value) dict.keys() Mengembalikan daftar key dictionary dict.setdefault(key, default=None) Mirip dengan get (), tapi akan mengatur dict [key] = default jika kunci belum ada di dict dict.update(dict2) Menambahkan pasangan kunci kata kunci dict2 ke dict dict.values() Mengembalikan daftar nilai dictionary `}),e.add({id:42,href:"/html/tutorial/link/",title:"Link",description:"mendefinisikan hubungan antara dokumen saat ini dan sumber daya eksternal.",content:`HTML Tag &lt;link&gt; # Contoh # Tautan ke external style sheet:
&lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot; /&gt; &lt;/head&gt; Definisi dan Penggunaan # Tag &lt;link&gt; mendefinisikan hubungan antara dokumen saat ini dan sumber daya eksternal. Tag &lt;link&gt; paling sering digunakan untuk menautkan ke external style sheet atau untuk menambahkan favicon ke situs web Anda. Elemen &lt;link&gt; adalah elemen kosong, hanya berisi atribut. Browser Pendukung # Elemen Google Chrome Internet Explorer/Edge Mozilla Firefox Safari Opera Link Yes Yes Yes Yes Yes Atribut Global HTML # Tag &lt;link&gt; juga masuk dalam kategori tabel Atribut Global HTML
Atribut Event HTML # Tag &lt;link&gt; juga masuk dalam kategori tabel Atribut Event HTML
Pengaturan CSS Bawaan # Sebagian besar browser akan menampilkan elemen &lt;link&gt; dengan nilai bawaan berikut:
link { display: none; } Sumber : https://www.w3schools.com/tags/tag_link.asp
`}),e.add({id:43,href:"/html/tutorial/meta/",title:"Meta",description:"Mendefinisikan metadata tentang dokumen HTML",content:`HTML META # Apa itu HTML meta ? # Tag &lt;meta&gt; di dalam html mendefinisikan metadata tentang dokumen HTML. Metadata adalah informasi tentang data.
Tag &lt;meta&gt; selalu berada di dalam &lt;head&gt; elemen dan biasanya digunakan untuk menspesifikasikan karakter, mendeskripsikan halaman, author dari dokumen dan settingan viewport.
Metadata tidak akan terlihat di halaman website namun akan terlihat didalam source code.
Metadata digunakan oleh browser (cara menampilkan konten atau memuat ulang halaman web), mesin pencari/search engines (keyword), dan layanan web lainnya.
Ada metode untuk membiarkan web desainer untuk mengambil kendali atas viewport (area yang terlihat oleh pengguna dari halaman web), melalui tag &lt;meta&gt;.
Contoh kode # &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;deskripsi&quot; content=&quot;Cara PR&quot;&gt; &lt;meta name=&quot;keywords&quot; content=&quot;Github, PR, Pull request&quot;&gt; &lt;meta name=&quot;author&quot; content=&quot;Putri Aliya&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;/head&gt; Contoh lain # Keywords untuk search engines: &lt;meta name=&quot;keywords&quot; content=&quot;Github, PR, Pull request&quot;&gt;
Deskripsi untuk halaman page: &lt;meta name=&quot;description&quot; content=&quot;Cara PR&quot;&gt;
Author dari web &lt;meta name=&quot;author&quot; content=&quot;Putri Aliya&quot;&gt;
Refresh dokumen setiap 40 detik &lt;meta http-equiv=&quot;refresh&quot; content=&quot;40&quot;&gt;
Setting viewport untuk membuat website terlihat bagus di semua divice &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
Setting viewport # Area pandang (Viewport) adalah area halaman web yang terlihat oleh pengguna. Area ini bervariasi dengan perangkat viewport akan terlihat lebih kecil di layar ponsel daripada di layar komputer.
Elemen &lt;meta&gt; harus disertakan disemua halaman web &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; Ini memberi browser instruksi untuk mengontrol dimensi dan skala halaman web.
width=device-width mengatur lebar halaman untuk mengikuti lebar layar perangkat (yang akan bervariasi tergantung pada perangkat).
initial-scale=1.0 mengatur tingkatan zoom pertama saat halaman web pertama kali dimuat.
Referensi : https://www.w3schools.com/tags/tag_meta.asp
`}),e.add({id:44,href:"/python/tutorial/tanggal-waktu/",title:"Tanggal dan Waktu di dalam Python",description:"Tanggal dan Waktu di dalam Python.",content:`Program Python dapat menangani tanggal dan waktu dengan beberapa cara. Konversi antara format tanggal adalah tugas umum untuk komputer. Modul waktu dan kalender Python melacak tanggal dan waktu.
Apa itu Tick? Interval waktu adalah bilangan floating-point dalam satuan detik. Instansi tertentu dalam waktu dinyatakan dalam hitungan detik sejak pukul 12:00 1 Januari 1970.
Dibawah ini adalah contoh penggunanaya.
import time; # Digunakan untuk meng-import modul time
ticks = time.time() print &ldquo;Berjalan sejak 12:00am, January 1, 1970:&rdquo;, ticks #python 2 print (&ldquo;Berjalan sejak 12:00am, January 1, 1970:&rdquo;, ticks) #untuk python 3 gunakan tanda kurung, print() Apa itu TimeTuple Python? Banyak fungsi waktu Python menangani waktu sebagai tuple dari 9 nomor, seperti yang terdapat pada tabel di bawah ini.
Index	Field	Value 0	4-digit year	2008 1	Bulan	1 sampai 12 2	Hari	1 sampai 31 3	Jam	0 sampai 23 4	Menit	0 sampai 59 5	Detik	0 sampai 61 6	Hari dalam Minggu	0 sampai 6 (0 adalah Senin) 7	Hari dalam Bulan	1 sampai 366 8	Daylight savings	-1, 0, 1, -1 means library determines DST Tuple di atas setara dengan struktur struct_time. Struktur ini memiliki atribut berikut
Index	Atribut	Value 0	tm_year	2008 1	tm_mon	1 sampai 12 2	tm_mday	1 sampai 31 3	tm_hour	0 sampai 23 4	tm_min	0 sampai 59 5	tm_sec	0 sampai 61 6	tm_wday	0 sampai 6 (0 adalah Senin) 7	tm_yday	1 sampai 366 8	tm_isdst	-1, 0, 1, -1 means library determines DST Mendapatkan Waktu Saat Ini Untuk menerjemahkan waktu instan dari satu detik sejak nilai floating-point ke waktu menjadi tupel waktu, lewati nilai floating-point ke fungsi (mis., Localtime) yang mengembalikan waktu tupel dengan semua sembilan item valid.
import time;
localtime = time.localtime(time.time()) print &ldquo;Waktu lokal saat ini :&rdquo;, localtime #python 2 Mendapatkan Waktu yang berformat Anda dapat memformat kapan saja sesuai kebutuhan Anda, namun metode sederhana untuk mendapatkan waktu dalam format yang mudah dibaca adalah asctime ()
import time;
localtime = time.asctime( time.localtime(time.time()) ) print &ldquo;Waktu lokal saat ini :&rdquo;, localtime #python 2 Mendapatkan kalender dalam sebulan Modul kalender memberikan berbagai macam metode untuk dimainkan dengan kalender tahunan dan bulanan. Di sini, kami mencetak kalender untuk bulan tertentu (Jan 2008)
import calendar
cal = calendar.month(2008, 1) print &ldquo;Dibawah ini adalah kalender:&rdquo; #python 2 print cal Modul time pada Python Ada modul waktu populer yang tersedia dengan Python yang menyediakan fungsi untuk bekerja dengan waktu dan untuk mengkonversi antara representasi. Dibawah ini adalah tabel dari modul time pada python yang ada.
Fungsi Python	Penjelasan time.altzone	Diimbangi zona waktu DST lokal, dalam detik di sebelah barat UTC, jika seseorang didefinisikan. Ini negatif jika zona waktu DST lokal berada di sebelah timur UTC (seperti di Eropa Barat, termasuk Inggris). Gunakan saja ini jika siang hari tidak nol. time.asctime([tupletime])	Menerima time-tupel dan mengembalikan string 24-karakter yang dapat dibaca seperti ‘Tue Dec 11 18:07:14 2008’. time.clock()	Mengembalikan waktu CPU saat ini sebagai jumlah floating-point detik. Untuk mengukur biaya komputasi dari berbagai pendekatan, nilai time.clock lebih bermanfaat daripada time.time (). time.ctime([secs])	Seperti asctime (localtime (detik)) dan tanpa argumen seperti asctime () time.gmtime([secs])	Menerima instan yang diungkapkan dalam hitungan detik sejak zaman dan mengembalikan waktu tuple t dengan waktu UTC. Catatan: t.tm_isdst selalu 0 time.localtime([secs])	Menerima instan yang dinyatakan dalam hitungan detik sejak zaman dan mengembalikan waktu tuple t dengan waktu setempat (t.tm_isdst adalah 0 atau 1, tergantung pada apakah DST berlaku seketika oleh peraturan lokal). time.mktime(tupletime)	Menerima instan dinyatakan sebagai time-tuple di waktu setempat dan mengembalikan nilai floating-point dengan instan yang dinyatakan dalam hitungan detik sejak zaman. time.sleep(secs)	Menangguhkan panggilan untuk beberapa detik. time.strftime(fmt[,tupletime])	Menerima instan dinyatakan sebagai tupel waktu di waktu lokal dan mengembalikan sebuah string yang mewakili instan seperti yang ditentukan oleh string fmt. time.strptime(str,fmt=’%a %b %d %H:%M:%S %Y’)	Parses str sesuai dengan format string fmt dan mengembalikan format instant-tuple. time.time()	Mengembalikan waktu saat ini secara instan, jumlah detik mengambang beberapa detik sejak zaman itu. time.tzset()	Mengatur ulang aturan konversi waktu yang digunakan oleh rutinitas perpustakaan. Variabel lingkungan TZ menentukan bagaimana hal ini dilakukan. Ada dua atribut penting yang tersedia dengan modul waktu:
Method Python	Penjelasan time.timezone	Atribut time.timezone adalah offset dalam detik zona waktu lokal (tanpa DST) dari UTC (&gt; 0 di Amerika; &lt;= 0 di sebagian besar Eropa, Asia, Afrika). time.tzname	Atribut time.tzname adalah sepasang string yang bergantung pada lokal, yang merupakan nama zona waktu lokal tanpa dan dengan DST. Modul calendar pada Python Modul kalender menyimpan fungsi yang berhubungan dengan kalender, termasuk fungsi untuk mencetak kalender teks untuk bulan atau tahun tertentu.
Secara default, kalender mengambil hari Senin sebagai hari pertama dalam minggu dan minggu sebagai yang terakhir. Untuk mengubah ini, fungsi call calendar.setfirstweekday ().
Berikut adalah daftar fungsi yang tersedia dengan modul kalender:
Fungsi Python	Penjelasan calendar.calendar(year,w=2,l=1,c=6)	Mengembalikan string multiline dengan kalender untuk tahun tahun yang diformat menjadi tiga kolom yang dipisahkan oleh ruang c. W adalah lebar karakter setiap tanggal; Setiap baris memiliki panjang 21 * w + 18 + 2 * c. L adalah jumlah baris untuk setiap minggu. calendar.firstweekday( )	Mengembalikan pengaturan saat ini untuk hari kerja yang dimulai setiap minggu. Secara default, saat kalender pertama kali diimpor, ini adalah 0, yang berarti Senin. calendar.isleap(year)	Pengembalian True jika tahun adalah tahun kabisat; Jika tidak, False calendar.leapdays(y1,y2)	Mengembalikan jumlah lompatan hari dalam tahun-tahun dalam rentang (y1, y2). calendar.month(year,month,w=2,l=1)	Mengembalikan string multiline dengan kalender untuk bulan bulan tahun, satu baris per minggu ditambah dua baris header. W adalah lebar karakter setiap tanggal; Setiap baris memiliki panjang 7 * w + 6. L adalah jumlah baris untuk setiap minggu. calendar.monthcalendar(year,month)	Mengembalikan daftar daftar int. Setiap sublist menunjukkan seminggu. Hari di luar bulan bulan tahun diatur ke 0; Hari dalam bulan ditetapkan ke hari ke bulan, 1 dan ke atas. calendar.monthrange(year,month)	Mengembalikan dua bilangan bulat. Yang pertama adalah kode hari kerja untuk hari pertama bulan bulan di tahun; Yang kedua adalah jumlah hari dalam sebulan. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu); Angka bulan adalah 1 sampai 12. calendar.prcal(year,w=2,l=1,c=6)	Seperti kalender cetak.calendar (tahun, w, l, c). calendar.prmonth(year,month,w=2,l=1)	Seperti kalender cetak. Bulan (tahun, bulan, w, l). calendar.setfirstweekday(weekday)	Mengatur hari pertama setiap minggu sampai hari kerja kode hari kerja. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu). calendar.timegm(tupletime)	Kebalikan dari time.gmtime: menerima waktu instan dalam bentuk tupel waktu dan mengembalikan detik yang sama seperti jumlah floating-point dalam hitungan detik sejak zaman. calendar.weekday(year,month,day)	Mengembalikan kode hari kerja untuk tanggal yang ditentukan. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu); Bulan adalah 1 (Januari) sampai 12 (Desember).
`}),e.add({id:45,href:"/python/tutorial/fungsi/",title:"Fungsi di dalam Python",description:"Fungsi dalam Python.",content:`Fungsi adalah blok kode terorganisir dan dapat digunakan kembali yang digunakan untuk melakukan sebuah tindakan/action. Fungsi memberikan modularitas yang lebih baik untuk aplikasi Anda dan tingkat penggunaan kode yang tinggi.
Mendefinisikan Fungsi Python # Anda dapat menentukan fungsi untuk menyediakan fungsionalitas yang dibutuhkan. Berikut adalah aturan sederhana untuk mendefinisikan fungsi dengan Python.
Fungsi blok dimulai dengan def kata_kunci diikuti oleh nama fungsi dan tanda kurung (()). Setiap parameter masukan atau argumen harus ditempatkan di dalam tanda kurung ini. Anda juga dapat menentukan parameter di dalam tanda kurung ini. Pernyataan pertama dari sebuah fungsi dapat berupa pernyataan opsional - string dokumentasi fungsi atau docstring. Blok kode dalam setiap fungsi dimulai dengan titik dua (:) dan indentasi. Pernyataan kembali [ekspresi] keluar dari sebuah fungsi, secara opsional menyampaikan kembali ekspresi ke pemanggil. Pernyataan pengembalian tanpa argumen sama dengan return None. Contoh fungsi # def printme( str ): &quot;This prints a passed string into this function&quot; print (str) return `}),e.add({id:46,href:"/python/tutorial/modul/",title:"Modul di dalam Python",description:"Modul di dalam Python.",content:`Modul memungkinkan Kita mengatur kode Python secara logis. Mengelompokkan kode terkait ke dalam modul membuat kode lebih mudah dipahami dan digunakan. Modul adalah objek Python dengan atribut yang diberi nama yang bisa Kita bind dan dijadikan referensi.
Secara sederhana modul adalah file yang terdiri dari kode Python. Modul dapat mendefinisikan fungsi, kelas dan variabel. Modul juga bisa menyertakan kode yang bisa dijalankan “runable”.
Berikut adalah contoh modul sederhana pada Python :
def print_func( par ): print &quot;Halo : &quot;, par return Import Statement # Kita dapat menggunakan file sumber Python apapun sebagai modul dengan mengeksekusi pernyataan impor di file sumber Python lainnya. Impornya memiliki sintaks berikut.
Ketika interpreter menemukan sebuah pernyataan import, ia mengimpor modul jika modul tersebut ada di jalur pencarian. Jalur pencarian adalah daftar direktori yang ditafsirkan juru bahasa sebelum mengimpor modul. Misalnya, untuk mengimpor modul hello.py, Kita perlu meletakkan perintah berikut di bagian atas script.
Import module support # import support
Anda bisa memanggil fungsi defined sebagai berikut # support.print_func(&ldquo;Andy&rdquo;)
`}),e.add({id:47,href:"/html/tutorial/responsive/",title:"Responsive",description:"HTML Responsive berfungsi agar *website* kamu bisa terlihat bagus di semua perangkat diantaranya PC/Laptop, tablet, dan handphone.",content:`HTML Responsive # Apa itu HTML Responsive? # HTML Responsive berfungsi agar website kamu bisa terlihat bagus di semua perangkat diantaranya PC/Laptop, tablet, dan handphone.
Viewport # Agar website kamu bisa terlihat bagus di semua perangkat, kamu harus menambahkan viewport terlebih dahulu
Caranya kamu hanya perlu membuat tag bernama &lt;meta&gt; di antara &lt;head&gt; dan &lt;/head&gt; (header)
&lt;meta&gt; Setelah menambahkan tag &lt;meta&gt;, sekarang kamu perlu menambahkan beberapa attribut di dalam tag &lt;meta&gt;. yaitu name, content.
name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; Setelah menambahkan tag &lt;meta&gt; beserta attributnya, seharusnya di dalam tag &lt;head&gt; website kamu sudah memiliki ini:
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; `}),e.add({id:48,href:"/html/tutorial/computer-code/",title:"Computer Code",description:"elemen yang digunakan untuk menentukan input keyboard. Konten di dalamnya ditampilkan dalam font monospace default browser.",content:`HTML Computer Code # HTML &lt;kbd&gt; Untuk Input Keyboard # HTML &lt;kbd&gt; adalah elemen yang digunakan untuk menentukan input keyboard. Konten di dalamnya ditampilkan dalam font monospace default browser.
Contoh :
&lt;p&gt;Simpan dokumen dengan menekan &lt;kbd&gt;Ctrl + S&lt;/kbd&gt;&lt;/p&gt; HTML&lt;samp&gt; Untuk Keluaran Program # HTML &lt;samp&gt; adalah elemen yang digunakan untuk menentukan keluaran sampel dari program komputer. Konten di dalamnya ditampilkan dalam font monospace default browser.
Contoh :
&lt;p&gt;Pesan dari komputer saya :&lt;/p&gt; &lt;p&gt; &lt;samp&gt;File not found.&lt;br /&gt;Tekan F1 untuk melanjutkan&lt;/samp&gt; &lt;/p&gt; HTML &lt;code&gt; Untuk Kode Komputer # HTML &lt;code&gt; elemen digunakan untuk mendefinisikan sepotong kode komputer. Konten di dalamnya ditampilkan dalam font monospace default browser.
Contoh :
&lt;code&gt; x = 5; y = 6; z = x + y; &lt;/code&gt; Perhatikan bahwa elemen &lt;code&gt; tidak memberikan spasi ekstra dan jeda baris. Untuk memperbaikinya, kamu dapat meletakkan elemen &lt;code&gt; di dalam elemen &lt;pre&gt;
Contoh :
&lt;pre&gt; &lt;code&gt; x = 5; y = 6; z = x + y; &lt;/code&gt; &lt;/pre&gt; HTML &lt;var&gt; Untuk Variabel # HTML &lt;var&gt; digunakan untuk mendefinisikan variabel dalam pemrograman atau dalam logika matematika. Konten di dalamnya biasanya ditampilkan dalam huruf miring.
Contoh :
&lt;p&gt;Area dari segitiga adalah: 1/2 x &lt;var&gt;b&lt;/var&gt; x &lt;var&gt;h&lt;/var&gt;, dimana &lt;var&gt;b&lt;/var&gt; adalah dasar dari &lt;var&gt;h&lt;/var&gt; tinggi vertikal dari segitiga.&lt;/p&gt; Sumber : W3School
`}),e.add({id:49,href:"/python/tutorial/input-output/",title:"Input Output di dalam Python",description:"Input Output di dalam Python.",content:`Disini kita akan belajar semua fungsi dasar I/O yang tersedia pada Python 3.
Print # Cara termudah untuk menghasilkan output adalah dengan menggunakan pernyataan cetak di mana Kita bisa melewati nol atau lebih banyak ekspresi yang dipisahkan dengan koma. Fungsi ini mengubah ekspresi yang Kita berikan ke string dan menulis hasilnya ke output standar sebagai berikut :
print (&quot;Python adalah bahasa pemrograman yang hebat&quot;)
Membaca Input Keyboard # Python 2 memiliki dua fungsi built-in untuk membaca data dari input standar, yang secara default berasal dari keyboard. Fungsi ini adalah input() dan raw_input()
Dengan Python 3, fungsi raw_input() tidak digunakan lagi. Selain itu, input() berfungsi membaca data dari keyboard sebagai string, terlepas dari apakah itu tertutup dengan tanda kutip (‘’ atau ‘”) atau tidak.
Fungsi Input Python # Fungsi input([prompt]) sama dengan raw_input, kecuali mengasumsikan bahwa input adalah ekspresi Python yang valid dan mengembalikan hasil yang smemungkinkan kita evaluasi.
&gt;&gt;&gt; x = input(&quot;something:&quot;) something:10 &gt;&gt;&gt; x '10' &gt;&gt;&gt; x = input(&quot;something:&quot;) something:'10' #entered data treated as string with or without '' &gt;&gt;&gt; x &quot;'10'&quot; `}),e.add({id:50,href:"/python/tutorial/exception/",title:"Exception",description:"Exception dalam Python.",content:`Python menyediakan dua fitur yang sangat penting untuk menangani kesalahan tak terduga dalam program Python Anda dan menambahkan kemampuan debugging di dalamnya.
Exception Handling # Assertions Exception adalah sebuah peristiwa, yang terjadi selama pelaksanaan program yang mengganggu aliran normal instruksi program. Secara umum, ketika skrip Python menemukan situasi yang tidak dapat diatasi, hal itu menimbulkan pengecualian. Exception adalah objek Python yang mewakili kesalahan. Ketika skrip Python menimbulkan Exception, maka harus menangani Exception begitu saja sehingga berhenti dan berhenti.
Standard Exceptions # Nama Penjelasan Exception Kelas dasar untuk semua pengecualian / exception StopIteration Ditampilkan ketika metode (iterator) berikutnya dari iterator tidak mengarah ke objek apa pun. SystemExit Ditampilkan oleh fungsi sys.exit (). StandardError Kelas dasar untuk semua pengecualian built-in kecuali StopIteration dan SystemExit. ArithmeticError Kelas dasar untuk semua kesalahan yang terjadi untuk perhitungan numerik. OverflowError Ditampilkan saat perhitungan melebihi batas maksimum untuk tipe numerik. FloatingPointError Ditampilkan saat perhitungan floating point gagal. ZeroDivisonError Ditampilkan saat pembagian atau modulo nol dilakukan untuk semua tipe numerik. AssertionError Ditampilkan jika terjadi kegagalan pernyataan Assert. AttributeError Ditampilkan jika terjadi kegagalan referensi atribut atau penugasan. EOFError Ditampilkan bila tidak ada input dari fungsi raw_input () atau input () dan akhir file tercapai. ImportError Ditampilkan saat sebuah pernyataan impor gagal. KeyboardInterrupt Ditampilkan saat pengguna menyela eksekusi program, biasanya dengan menekan Ctrl + c. LookupError Kelas dasar untuk semua kesalahan pencarian. IndexError Ditampilkan saat sebuah indeks tidak ditemukan secara berurutan. KeyError Ditampilkan saat kunci yang ditentukan tidak ditemukan dalam kamus. NameError Ditampilkan saat pengenal tidak ditemukan di namespace lokal atau global. UnboundLocalError Ditampilkan saat mencoba mengakses variabel lokal dalam suatu fungsi atau metode namun tidak ada nilai yang ditugaskan padanya. EnvironmentError Kelas dasar untuk semua pengecualian yang terjadi di luar lingkungan Python. IOError Ditampilkan saat operasi input / output gagal, seperti pernyataan cetak atau fungsi open () saat mencoba membuka file yang tidak ada. OSError Dibangkitkan untuk kesalahan terkait sistem operasi. SyntaxError Ditampilkan saat ada kesalahan dengan sintaks Python. IndentationError Ditampilkan saat indentasi tidak ditentukan dengan benar. SystemError Ditampilkan saat penafsir menemukan masalah internal, namun bila kesalahan ini ditemui juru bahasa Python tidak keluar. SystemExit Ditampilkan saat juru bahasa Python berhenti dengan menggunakan fungsi sys.exit (). Jika tidak ditangani dalam kode, menyebabkan penafsir untuk keluar. TypeError Ditampilkan saat operasi atau fungsi dicoba yang tidak valid untuk tipe data yang ditentukan. ValueError Ditampilkan ketika fungsi bawaan untuk tipe data memiliki jenis argumen yang valid, namun argumen tersebut memiliki nilai yang tidak valid yang ditentukan. RuntimeError Ditampilkan saat kesalahan yang dihasilkan tidak termasuk dalam kategori apa pun. NotImplementedError Ditampilkan ketika metode abstrak yang perlu diimplementasikan di kelas warisan sebenarnya tidak dilaksanakan. `}),e.add({id:51,href:"/html/tutorial/semantic/",title:"Semantic",description:"Semantic HTML adalah dokumen HTML yang terstruktur berdasarkan elemen semantik. Elemen semantik sendiri diperkenalkan pada HTML 5 yang bertujuan untuk memberikan makna, maksud atau arti kepada halaman web.",content:`Semantic HTML # Apa itu semantic HTML? # Semantic HTML adalah dokumen HTML yang terstruktur berdasarkan elemen semantik. Elemen semantik sendiri diperkenalkan pada HTML 5 yang bertujuan untuk memberikan makna, maksud atau arti kepada halaman web.
HTML memiliki beberapa elemen semantik seperti &lt;header&gt;, &lt;footer&gt;, &lt;article&gt;, dan lain-lain.
Contohnya tag &lt;header&gt;, tag ini digunakan untuk membuat elemen header atau bagian atas dari web. Kita bisa saja menggunakan tag &lt;div&gt; dan tidak menggunakan tag &lt;header&gt;, tetapi hal itu membuat website yang kita buat nantinya menjadi tidak semantik.
Kenapa HTML harus semantik? # Tentunya, HTML yang benar secara semantis akan membantu perangkat seperti screen reader untuk menguraikan isi dari website tersebut. Perangkat seperti screen reader membantu teman-teman kita yang disabilitas untuk bisa mendapatkan informasi dari website yang kita buat nantinya.
Selain itu juga, jika kita menggunakan elemen semantik, dokumen HTML kita akan mudah dibaca, baik itu oleh mesin maupun oleh kita sebagai manusia.
Ini adalah contoh kode HTML yang tidak menggunakan elemen semantik:
&lt;div id=&quot;header&quot;&gt;&lt;/div&gt; &lt;div class=&quot;bagian-awal&quot;&gt; &lt;div class=&quot;artikel&quot;&gt;&lt;/div&gt; &lt;/div&gt; Dan ini adalah kode HTML yang menggunakan elemen semantik:
&lt;header&gt;&lt;/header&gt; &lt;section&gt; &lt;article&gt;&lt;/article&gt; &lt;/section&gt; Jika dibandingkan, kode HTML yang menggunakan elemen semantik lebih mudah untuk dibaca dan lebih ringkas dibandingkan dengan kode yang tidak menggunakan elemen semantik.
SEO # Karena sifat HTMl semantik yang mudah dibaca oleh manusia ataupun mesin, maka tidak dipungkiri bahwa HTML yang semantik lebih disukai oleh search engine karena sifat HTML yang semantic yang bisa menginterpretasikan konten dengan baik. Hal ini tentunya akan berdampak baik pada website kita karena kemungkinan untuk mendapatkan ranking teratas di hasil pancarian seperti Google.
Daftar elemen-elemen semantik # &lt;header&gt; untuk membuat elemen bagian atas dari web &lt;article&gt; untuk membuat elemen artikel &lt;nav&gt; untuk membuat navigasi &lt;main&gt; untuk membuat elemen utama &lt;details&gt; untuk membuat elemen detail atau spoiler &lt;aside&gt; untuk membuat elemen pada bagian samping &lt;summary&gt; untuk membuat ringkasan artikel atau isi spoiler &lt;figcaption&gt; untuk membuat teks caption pada figure &lt;mark&gt; untuk menandai teks &lt;section&gt; untuk membuat bagian artikel &lt;time&gt; untuk membuat elemen yang menyatakan waktu dan masih banyak lagi. HTML Header # Apa itu HTML header ? # Tag &lt;header&gt; dalam html berfungsi untuk menandakan suatu elemen sebagai konten pengantar, judul, atau tautan navigasi.
Tag &lt;header&gt; tidak bisa dipakai bersamaan dengan tag &lt;footer&gt;, &lt;address&gt; atau elemen dengan tag &lt;header&gt; yang lain.
Contoh kode # HTML
&lt;header&gt; &lt;!-- disini header berfungsi sebagai judul --&gt; &lt;h1&gt;Lorem ipsum dolor sit amet&lt;/h1&gt; &lt;header&gt; &lt;p&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit. Natus fugit soluta, necessitatibus reiciendis quibusdam temporibus molestias repellendus corrupti quisquam eaque, corporis, minima earum rem distinctio incidunt nesciunt consequatur illum. Hic. &lt;/p&gt; &lt;/header&gt; &lt;/header&gt; Contoh lain # Daftar Menu Nasi Goreng Mie Goreng Sate Ubi Goreng Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
Developer Mozilla W3Schools `}),e.add({id:52,href:"/html/tutorial/entity/",title:"Entity",description:"dapat direpresentasikan sebagai potongan `string`. Dalam penggunaannya, entity menggunakan `&` atau ampersan untuk awalan sebuah entity, yang tidak jarang kita temukan dalam proses pembuatan sebuah website ataupun ketika sedang mengunjungi sebuah website entah itu simbol karakter seperti copyright (©), lebih besar (>), lebih kecil (<), dan sebagainya.",content:`HTML Entity # Apa itu HTML Entity? # HTML Entity dapat direpresentasikan sebagai potongan string. Dalam penggunaannya, entity menggunakan &amp; atau ampersan untuk awalan sebuah entity, yang tidak jarang kita temukan dalam proses pembuatan sebuah website ataupun ketika sedang mengunjungi sebuah website entah itu simbol karakter seperti copyright (©), lebih besar (&gt;), lebih kecil (&lt;), dan sebagainya.
Dalam penggunaan HTML Entity terdapat 2 macam entity yaitu Entity Name dan juga Entity Number.
Entity Number # Penggunaan dibuat dengan desimal ASCII atau heksadesimal ASCII, contoh penggunaan :
&lt;p&gt;&amp;#169; Bellshade LEARN WITH OUR COMMUNITY&lt;/p&gt; Output : © Bellshade LEARN WITH OUR COMMUNITY
Entity Name # Penggunaan lebih mudah karena menggunakan alfabet sehingga lebih mudah diingat oleh user, contoh penggunaan :
&lt;p&gt;&amp;copy; Bellshade LEARN WITH OUR COMMUNITY&lt;/p&gt; Output : © Bellshade LEARN WITH OUR COMMUNITY
Terlihat perbedaan keduanya, Entity Name lebih mudah diingat karena menggunakan huruf alfabet namun dibalik kemudahan tersebut ternyata Entity Name masih belum mendukung semua browser sehingga penggunaan Entity Number lebih diunggulkan dari segi dukungan browser.
Beberapa karakter entity lain yang dapat digunakan :
Char Number Entity © &amp;#169; &amp;copy; ® &amp;#174; &amp;reg; ™ &amp;#8482; &amp;trade; @ &amp;#64; &amp;commat; ¶ &amp;#182; &amp;para; § &amp;#167; &amp;sect; &amp; &amp;#38; &amp;amp; &gt; &amp;#62; &amp;gt; &lt; &amp;#60; &amp;lt; Selengkapnya mengenai simbol-simbol yang ada di HTML Entity bisa mengunjungi:
Free Formatter `}),e.add({id:53,href:"/python/tutorial/objek-class/",title:"Objek dan class di dalam Python",description:"Objek dan class di dalam Python.",content:`Python telah menjadi bahasa berorientasi objek sejak bahasa Python sendiri dibuat. Untuk membuat dan menggunakan kelas dan objek pada Python benar-benar mudah. Jika Anda tidak memiliki pengalaman sebelumnya dengan pemrograman berorientasi objek (OOP), Anda mempelajarinya terlebih dahulu agar Anda dapat memahami konsep dasarnya.
Istilah Dalam OOP # Istilah Penjelasan Class Prototipe yang ditentukan pengguna untuk objek yang mendefinisikan seperangkat atribut yang menjadi ciri objek kelas apa pun. Atribut adalah data anggota (variabel kelas dan variabel contoh) dan metode, diakses melalui notasi titik. Class variable Sebuah variabel yang dibagi oleh semua contoh kelas. Variabel kelas didefinisikan dalam kelas tapi di luar metode kelas manapun. Variabel kelas tidak digunakan sesering variabel contoh. Data member Variabel kelas atau variabel contoh yang menyimpan data yang terkait dengan kelas dan objeknya. Function overloading Penugasan lebih dari satu perilaku ke fungsi tertentu. Operasi yang dilakukan bervariasi menurut jenis objek atau argumen yang terlibat. Instance variable Variabel yang didefinisikan di dalam sebuah metode dan hanya dimiliki oleh instance kelas saat ini. Inheritance Pengalihan karakteristik kelas ke kelas lain yang berasal darinya. Instance Objek individu dari kelas tertentu. Obyek obj yang termasuk dalam Lingkaran kelas, misalnya, adalah turunan dari Lingkaran kelas. Instantiation Penciptaan sebuah instance dari sebuah kelas. Method Jenis fungsi khusus yang didefinisikan dalam definisi kelas. Object Contoh unik dari struktur data yang didefinisikan oleh kelasnya. Objek terdiri dari kedua anggota data (variabel kelas dan variabel contoh) dan metode. Operator overloading Penugasan lebih dari satu fungsi ke operator tertentu. Membuat Class Python # Statement class digunakan untuk membuat definisi kelas baru. Nama kelas segera mengikuti kelas kata kunci diikuti oleh titik dua sebagai berikut.
class ClassName: &lsquo;Optional class documentation string&rsquo; class_suite
Dibawah ini adalah contoh cara membuat class dan penggunaanya :
class Employee: 'Common base class for all employees' empCount = 0 def __init__(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1 def displayCount(self): print &quot;Total Employee %d&quot; % Employee.empCount def displayEmployee(self): print &quot;Name : &quot;, self.name, &quot;, Salary: &quot;, self.salary Membuat Instance Objects # Untuk membuat instances kelas, Anda memanggil class menggunakan nama class dan meneruskan argumen apa pun yang metode init terima.
## This would create first object of Employee class emp1 = Employee(&quot;Zara&quot;, 2000) This would create second object of Employee class emp2 = Employee(&quot;Manni&quot;, 5000) Mengakses Atribut # Kita mengakses atribut objek menggunakan dot operator dengan objek. Variabel kelas akan diakses dengan menggunakan nama kelas sebagai berikut :
emp1.displayEmployee() emp2.displayEmployee() print (&quot;Total Employee %d&quot; % Employee.empCount) Contoh lengkapnya, silahkan lihat kode dibawah ini.
class Employee: 'Common base class for all employees' empCount = 0 def __init__(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1 def displayCount(self): print (&quot;Total Employee %d&quot; % Employee.empCount) def displayEmployee(self): print (&quot;Name : &quot;, self.name, &quot;, Salary: &quot;, self.salary) #This would create first object of Employee class&quot; emp1 = Employee(&quot;Zara&quot;, 2000) #This would create second object of Employee class&quot; emp2 = Employee(&quot;Manni&quot;, 5000) emp1.displayEmployee() emp2.displayEmployee() print (&quot;Total Employee %d&quot; % Employee.empCount) `}),e.add({id:54,href:"/php/tutorial/pengenalan/",title:"Pengenalan PHP",description:"Pengenalan PHP.",content:`PHP # PHP (Hypertext Preprocessor) adalah bahasa pemrograman server-side yang digunakan untuk mengembangkan aplikasi web dinamis. PHP memungkinkan kita untuk membuat halaman web yang dapat menampilkan konten dinamis yang dihasilkan dari pengolahan data di server. PHP banyak digunakan dalam pengembangan aplikasi web karena mudah dipelajari, mudah dipahami, dan mendukung berbagai macam basis data.
Sebuah skrip PHP dieksekusi pada server web, dan hasilnya dikirimkan ke browser pengguna dalam bentuk halaman web statis. Dalam skrip PHP, kita dapat mengakses berbagai macam sumber daya dan layanan di server, seperti basis data, sistem file, jaringan, dan lain sebagainya. PHP dapat dipadukan dengan HTML dan CSS untuk membuat tampilan halaman web yang menarik.
Beberapa fitur utama dari PHP antara lain:
Open source: PHP tersedia secara gratis dan sumber terbuka, sehingga dapat dimodifikasi dan digunakan oleh siapa saja.
Pemrosesan form: PHP dapat digunakan untuk memproses data yang dikirimkan dari formulir HTML, seperti data pengguna atau data yang dimasukkan pengguna.
Koneksi basis data: PHP memiliki kemampuan untuk terhubung ke berbagai macam basis data, seperti MySQL, PostgreSQL, dan Oracle, sehingga memudahkan pengolahan data di dalam aplikasi web.
Modular: PHP memiliki banyak pustaka dan modul yang dapat digunakan untuk memperluas fungsionalitasnya dan mempercepat pengembangan aplikasi web.
Cross-platform: PHP dapat dijalankan pada berbagai macam sistem operasi, seperti Windows, Linux, dan macOS.
Dalam pengembangan aplikasi web, PHP seringkali dipadukan dengan framework, seperti Laravel, CodeIgniter, atau CakePHP, untuk mempercepat dan memudahkan proses pengembangan. Dengan mempelajari PHP, kita dapat membuat aplikasi web yang dinamis dan interaktif dengan mudah.
Sejarah PHP # PHP (Hypertext Preprocessor) pertama kali diperkenalkan pada tahun 1995 oleh Rasmus Lerdorf. Awalnya, PHP diciptakan sebagai sekumpulan skrip C yang digunakan untuk melacak kunjungan pada situs webnya. Nama asli PHP adalah Personal Home Page Tools (disingkat menjadi PHP Tools), dan versi pertamanya hanya memiliki kemampuan dasar untuk memproses form dan mengakses file.
Setelah dirilis ke publik, PHP menjadi sangat populer karena kemampuannya untuk memproses form dan mengakses basis data. Pada tahun 1997, Andi Gutmans dan Zeev Suraski mengembangkan versi PHP yang baru, yaitu PHP 3. Versi ini memiliki kemampuan baru, seperti dukungan untuk modul ekstensi, objek, dan fungsi pengolahan gambar.
Pada tahun 2000, dirilislah PHP 4 yang memiliki perbaikan performa, penambahan fitur, dan peningkatan keamanan. Versi ini menjadi sangat populer dan digunakan secara luas di seluruh dunia. Pada tahun 2004, PHP 5 dirilis dengan dukungan penuh untuk objek dan penggunaan pemrograman berorientasi objek.
Pada tahun 2015, dirilislah PHP 7, yang memiliki performa lebih cepat dan lebih aman daripada versi sebelumnya. PHP 7 memperkenalkan peningkatan pada mesin virtual, peningkatan pada sintaks, dan peningkatan pada manajemen kesalahan.
Saat ini, PHP merupakan bahasa pemrograman server-side yang sangat populer dan digunakan oleh banyak pengembang aplikasi web di seluruh dunia. PHP digunakan oleh banyak situs web terkenal, seperti Facebook, Yahoo, Wikipedia, dan WordPress. Perkembangan PHP terus berlanjut dengan banyaknya penambahan fitur dan dukungan untuk teknologi terbaru.
Mengapa menggunakan PHP? # Berikut ini beberapa alasan mengapa PHP menjadi pilihan populer untuk pengembangan aplikasi web:
Mudah dipelajari dan digunakan: PHP memiliki sintaks yang mudah dipahami dan dipelajari, sehingga memudahkan pengembang yang baru memulai belajar pemrograman web.
Dukungan luas: PHP memiliki dukungan yang luas dari komunitas pengembang dan banyak pihak ketiga yang menyediakan pustaka dan plugin untuk memperluas fungsionalitas PHP.
Ketersediaan sumber daya: Karena PHP populer, banyak developer dan ahli tersedia untuk membantu dalam mengembangkan aplikasi web dengan PHP.
Integrasi dengan basis data: PHP memiliki kemampuan untuk terintegrasi dengan berbagai macam basis data, seperti MySQL, PostgreSQL, dan Oracle.
Kinerja yang baik: PHP dikembangkan untuk menghasilkan kode yang cepat dan efisien, sehingga dapat memproses permintaan dari pengguna dengan cepat dan responsif.
Berbagai macam framework: Ada banyak framework PHP yang tersedia, seperti Laravel, Symfony, dan CodeIgniter, yang mempercepat pengembangan aplikasi web dan menyediakan banyak fitur canggih.
Berjalan di banyak platform: PHP dapat dijalankan di berbagai platform, seperti Windows, Linux, dan macOS, sehingga memudahkan pengembang untuk membangun aplikasi web pada platform yang berbeda.
Karena alasan-alasan di atas, PHP menjadi salah satu pilihan populer untuk pengembangan aplikasi web, terutama untuk aplikasi web yang kompleks dan besar dengan banyak fitur dan fungsionalitas.
Framework PHP # Berikut ini beberapa framework PHP terkenal yang banyak digunakan oleh pengembang aplikasi web:
Laravel: Laravel adalah salah satu framework PHP yang paling populer saat ini. Framework ini menawarkan banyak fitur canggih dan mudah digunakan, seperti routing, migrasi basis data, dan integrasi dengan pustaka pihak ketiga. Laravel juga memiliki sistem templating yang kuat dan dukungan untuk pengembangan aplikasi berbasis RESTful API.
Symfony: Symfony adalah framework PHP yang kuat dan fleksibel. Framework ini menyediakan berbagai komponen dan pustaka yang dapat digunakan secara independen atau bersama-sama. Symfony juga memiliki sistem templating yang kuat dan dukungan untuk pengembangan aplikasi berbasis RESTful API.
CodeIgniter: CodeIgniter adalah framework PHP yang ringan dan mudah digunakan. Framework ini menawarkan banyak fitur dasar untuk pengembangan aplikasi web, seperti routing, koneksi basis data, dan validasi form. CodeIgniter juga memiliki sistem templating yang sederhana dan mudah dipelajari.
CakePHP: CakePHP adalah framework PHP yang fleksibel dan kuat. Framework ini menawarkan banyak fitur canggih, seperti ORM (Object-Relational Mapping), validasi data, dan caching. CakePHP juga memiliki sistem templating yang kuat dan mudah dipelajari.
Yii: Yii adalah framework PHP yang efisien dan kuat. Framework ini menawarkan banyak fitur canggih, seperti ORM (Object-Relational Mapping), validasi data, dan caching. Yii juga memiliki sistem templating yang kuat dan dukungan untuk pengembangan aplikasi berbasis RESTful API.
Setiap framework memiliki kelebihan dan kekurangan masing-masing, dan pemilihan framework yang tepat akan tergantung pada kebutuhan aplikasi dan preferensi pengembang.
`}),e.add({id:55,href:"/html/tutorial/form/",title:"Form",description:"Form pada html berfungsi untuk mengirimkan data melalui elemen-elemen form di dalamnya seperti, text field, radio button, dropdown, dll",content:`HTML Forms # Form pada html berfungsi untuk mengirimkan data melalui elemen-elemen form di dalamnya seperti, text field, radio button, dropdown, dll
Form Element # Sebelum membuat elemen-elemen pada form, seluruh elemen yang akan digunakan harus berada diantara tag &lt;form&gt; dan &lt;/form&gt; contoh penggunaannya adalah sebagai berikut :
&lt;form&gt; &lt;!-- baris ini bisa dihapus --&gt; elemen form ditulis disini &lt;!-- baris ini bisa dihapus --&gt; &lt;/form&gt; Membuat Elemen Input # Elemen &lt;input&gt; pada HTML forms menjadi elemen yang sering digunakan. adapun tag &lt;input&gt; memiliki beberapa type atribute seperti text, radio, checkbox.
Input Type Text # elemen &lt;input type=&quot;text&quot;&gt; akan berupa textfields yang nantinya kita dapat memberikan input berupa text.
&lt;form&gt; &lt;h5&gt;Nama Depan :&lt;/h5&gt; &lt;input type=&quot;text&quot; /&gt; &lt;h5&gt;Nama Belakang :&lt;/h5&gt; &lt;input type=&quot;text&quot; /&gt; &lt;/form&gt; Output :
Nama Depan : Nama Belakang : Input Type Radio Button # elemen &lt;input type=&quot;radio&quot;&gt; akan berupa pilihan yang berbentuk bulat yang nantinya kita dapat memberikan input dengan memilih salah satu pilihan yang tersedia.
&lt;form&gt; &lt;h5&gt;Jenis Kelamin&lt;/h5&gt; &lt;input type=&quot;radio&quot; value=&quot;laki-laki&quot; /&gt; &lt;label&gt;Laki-Laki&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;radio&quot; value=&quot;perempuan&quot; /&gt; &lt;label&gt;Perempuan&lt;/label&gt;&lt;br /&gt; &lt;/form&gt; Output :
Jenis Kelamin Laki-Laki
Perempuan
Input Type Checkbox # Elemen &lt;input type=&quot;checkbox&quot;&gt; akan berupa pilihan yang berbentuk kotak yang nantinya kita dapat memberikan input dengan memilih lebih dari satu pilihan yang tersedia.
&lt;form&gt; &lt;h5&gt;Hobi&lt;/h5&gt; &lt;input type=&quot;checkbox&quot; value=&quot;membaca&quot; /&gt; &lt;label&gt;Membaca&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;checkbox&quot; value=&quot;menyanyi&quot; /&gt; &lt;label&gt;Menyanyi&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;checkbox&quot; value=&quot;menulis&quot; /&gt; &lt;label&gt;Menulis&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;checkbox&quot; value=&quot;olahraga&quot; /&gt; &lt;label&gt;Olahraga&lt;/label&gt;&lt;br /&gt; &lt;/form&gt; Output :
Hobi Membaca
Menyanyi
Menulis
Olahraga
`}),e.add({id:56,href:"/javascript/tutorial/pengenalan/",title:"Pengenalan Javascript",description:"JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.",content:`Javascript # JavaScript adalah bahasa pemrograman yang digunakan untuk mengembangkan aplikasi web yang interaktif dan dinamis. Bahasa ini dapat dijalankan di sisi klien atau sisi server, namun biasanya digunakan untuk membuat interaksi antarmuka pengguna pada sisi klien.
JavaScript pertama kali diperkenalkan pada tahun 1995 oleh Brendan Eich di Netscape, dan sejak saat itu telah menjadi bahasa pemrograman yang sangat populer dan umum digunakan di seluruh dunia.
JavaScript dapat digunakan untuk membuat efek animasi, validasi form, dan validasi input data pada sisi klien, serta untuk mengambil dan memanipulasi data pada sisi server dengan menggunakan teknologi seperti Node.js. Bahasa ini juga sering digunakan bersama dengan HTML dan CSS untuk membangun tampilan antarmuka pengguna yang interaktif dan dinamis pada aplikasi web.
Sejarah Javascript # JavaScript pertama kali dikembangkan oleh Brendan Eich pada tahun 1995 di Netscape Communications Corporation. Awalnya, bahasa ini disebut Mocha, kemudian berganti nama menjadi LiveScript, dan akhirnya menjadi JavaScript.
JavaScript mulai menjadi populer pada awal tahun 2000-an ketika Ajax (Asynchronous JavaScript and XML) diperkenalkan. Teknologi ini memungkinkan aplikasi web untuk melakukan update konten tanpa perlu me-refresh halaman secara keseluruhan, sehingga menghasilkan pengalaman yang lebih responsif dan interaktif bagi pengguna.
Pada tahun 2009, Ryan Dahl memperkenalkan Node.js, sebuah platform server yang menggunakan JavaScript sebagai bahasa pemrogramannya. Dengan Node.js, pengembang dapat menggunakan JavaScript untuk membangun aplikasi pada sisi server, tidak hanya di sisi klien.
Selama beberapa tahun terakhir, JavaScript terus berkembang dan menjadi bahasa pemrograman yang sangat populer di seluruh dunia. Banyak pustaka dan kerangka kerja JavaScript yang dikembangkan, seperti React, Angular, dan Vue.js, yang memungkinkan pengembang untuk membangun aplikasi web yang kompleks dan dinamis dengan lebih cepat dan mudah.
Kelebihan Javascript # Berikut adalah beberapa kelebihan JavaScript sebagai bahasa pemrograman:
Interaktif dan responsif: JavaScript memungkinkan pengembang untuk membuat aplikasi web yang interaktif dan responsif. Hal ini memungkinkan aplikasi web untuk merespons input pengguna dengan cepat dan memberikan pengalaman pengguna yang lebih baik.
Ketersediaan sumber daya: JavaScript adalah bahasa pemrograman yang sangat populer dan memiliki dukungan luas dari komunitas pengembang. Ada banyak pustaka dan kerangka kerja JavaScript yang tersedia yang mempercepat pengembangan aplikasi web dan menyediakan banyak fitur canggih.
Mempercepat waktu pengembangan: Karena JavaScript dapat dijalankan pada sisi klien, aplikasi web yang dibuat dengan JavaScript dapat mengurangi beban pada server dan mempercepat waktu pengembangan.
Memperbaiki kinerja web: Dengan JavaScript, pengembang dapat mengoptimalkan kinerja aplikasi web dengan menggunakan teknologi seperti Ajax untuk mengambil dan memperbarui konten tanpa memuat ulang halaman.
Cross-platform: JavaScript dapat dijalankan pada berbagai platform, seperti Windows, Linux, dan macOS, serta berbagai browser web seperti Chrome, Firefox, dan Safari.
Kemudahan pembelajaran: JavaScript memiliki sintaks yang mudah dipahami dan dipelajari, sehingga memudahkan pengembang yang baru memulai belajar pemrograman web.
Potensi pengembangan: Dalam beberapa tahun terakhir, JavaScript telah berkembang menjadi salah satu bahasa pemrograman paling populer dan banyak digunakan di seluruh dunia. Hal ini memberikan potensi pengembangan yang besar untuk karir pengembang web di masa depan.
Framework Javascript # Berikut adalah beberapa kerangka kerja JavaScript yang populer:
React: React adalah kerangka kerja JavaScript yang dikembangkan oleh Facebook. React digunakan untuk membangun antarmuka pengguna pada aplikasi web, dan memungkinkan pengembang untuk memisahkan logika bisnis dari tampilan.
Angular: Angular adalah kerangka kerja JavaScript yang dikembangkan oleh Google. Angular memungkinkan pengembang untuk membangun aplikasi web dengan menggunakan TypeScript, sebuah bahasa pemrograman yang memperluas JavaScript dengan fitur seperti tipe statis.
Vue.js: Vue.js adalah kerangka kerja JavaScript yang ringan dan mudah dipelajari. Vue.js digunakan untuk membangun aplikasi web dengan antarmuka pengguna yang dinamis dan interaktif.
Ember.js: Ember.js adalah kerangka kerja JavaScript yang fokus pada pengembangan aplikasi web yang kompleks dan besar. Ember.js mempercepat pengembangan dengan menyediakan banyak fitur out-of-the-box seperti routing, manajemen status, dan pengujian otomatis.
Backbone.js: Backbone.js adalah kerangka kerja JavaScript yang sangat ringan dan fleksibel. Backbone.js membantu pengembang membangun aplikasi web dengan memisahkan logika dari antarmuka pengguna.
Meteor: Meteor adalah kerangka kerja JavaScript yang digunakan untuk membangun aplikasi web real-time dan responsif. Meteor digunakan untuk mengembangkan aplikasi web yang membutuhkan interaksi real-time antara pengguna dan server.
Node.js: Node.js adalah platform JavaScript yang digunakan untuk mengembangkan aplikasi web di sisi server. Dengan Node.js, pengembang dapat menggunakan JavaScript di sisi server dan membuat aplikasi web yang sangat responsif.
`}),e.add({id:57,href:"/python/tutorial/akses-database/",title:"Mengakses database di dalam Python",description:"Akses database di dalam Python.",content:`Python mendukung konektivitas dengan berbagai jenis database, kita dapat memilih database yang tepat untuk aplikasi yang akan dibangun. Standar Interface Python untuk database adalah Python DB-API. Kebanyakan Interface database Python mematuhi standar ini. API (Application Programming Interface) Database Python mendukung berbagai macam server database, antara lain sebagai berikut:
GadFly mSQL MySQL PostgreSQL Microsoft SQL Server 2000 Informix Interbase Oracle Sybase SQLite API DB menyediakan standar minimal yang memungkinkan kita untuk terkoneksi dengan database menggunakan struktur dan sintaks Python. API ini meliputi:
Mengimpor modul API. Mendapatkan koneksi dengan database. Menampilkan hasil dari query SQL dan prosedur tersimpan. Menutup koneksi Python memiliki dukungan built-in untuk SQLite. Namun disini, kita akan membahas tentang konsep konektifitas Python menggunakan MySQL. Disini kita akan menggunakan modul PyMySQL.
Apa itu PyMySQL ? # PyMySQL adalah sebuah antarmuka untuk menghubungkan ke server database MySQL dari Python. PyMySQL mengimplementasikan API Database Python v2.0 dan berisi perpustakaan klien MySQL murni-Python. Tujuan PyMySQL adalah penggantian drop-in untuk MySQLdb. Silakan akses dokumentasi lengkap penggunaan PyMySQL di https://pymysql.readthedocs.io/en/latest/.
Cara Instal PyMySQL # Sebelum melanjutkan, pastikan Anda telah menginstal PyMySQL di komputer Anda. Cukup ketik berikut ini di skrip Python Anda dan jalankan.
import pymysql.cursors
Jika menghasilkan hasil berikut, berarti modul MySQLdb tidak terpasang:
Traceback (most recent call last): File &quot;test.py&quot;, line 3, in Import PyMySQL ImportError: No module named PyMySQL
Untuk menginstal modul PyMySQL silahkan gunakan command/perintah berikut di command prompt:
python -m pip install PyMySQL
Database Connection # Sebelum terhubung ke database MySQL, pastikan beberapa hal dibawah ini :
Anda telah membuat database TESTDB. Anda telah membuat tabel EMPLOYEE di TESTDB. Tabel ini memiliki field FIRST_NAME, LAST_NAME, AGE, SEX, dan INCOME. User ID “testuser” dan password “test123” diatur untuk mengakses TESTDB. Python modul PyMySQL terinstal dengan benar pada komputer Anda. Anda telah melalui tutorial MySQL untuk memahami Dasar-Dasar MySQL Berikut ini adalah contoh koneksi dengan database MySQL “TESTDB”
import pymysql.cursors ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method cursor = db.cursor() ## execute SQL query using execute() method. cursor.execute(&quot;SELECT VERSION()&quot;) ## Fetch a single row using fetchone() method. data = cursor.fetchone() print (&quot;Database version : %s &quot; % data) ## disconnect from server db.close() ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method cursor = db.cursor() ## Drop table if it already exist using execute() method. cursor.execute(&quot;DROP TABLE IF EXISTS EMPLOYEE&quot;) ## Create table as per requirement sql = &quot;&quot;&quot;CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )&quot;&quot;&quot; cursor.execute(sql) ## disconnect from server db.close() Operasi Insert # Contoh berikut, mengeksekusi pernyataan SQL INSERT untuk membuat record di tabel EMPLOYEE
import pymysql.cursors ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method cursor = db.cursor() ## Prepare SQL query to INSERT a record into the database. sql = &quot;&quot;&quot;INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES ('Mac', 'Mohan', 20, 'M', 2000)&quot;&quot;&quot; try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() ## disconnect from server db.close() Contoh di atas bisa dituliskan sebagai berikut untuk membuat query SQL secara dinamis
import pymysql.cursors ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method \`cursor = db.cursor()\` ## Prepare SQL query to INSERT a record into the database. sql = &quot;INSERT INTO EMPLOYEE(FIRST_NAME, \\ LAST_NAME, AGE, SEX, INCOME) \\ VALUES ('%s', '%s', '%d', '%c', '%d' )&quot; % \\ ('Mac', 'Mohan', 20, 'M', 2000) try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() ## disconnect from server db.close() Read Operation # READ Operation pada database apapun berarti mengambil beberapa informasi berguna dari database. Setelah koneksi database terbentuk, kita dapat untuk membuat query ke dalam database. Kita dapat menggunakan metode fetchone() untuk mengambil satu record atau fetchall() metode untuk mengambil beberapa nilai dari tabel database.
Fetchone () - Ini mengambil baris berikut dari kumpulan hasil query. Set hasil adalah objek yang dikembalikan saat objek kursor digunakan untuk query tabel.
Fetchall () - Ini menjemput semua baris dalam kumpulan hasil. Jika beberapa baris telah diekstraksi dari himpunan hasil, maka akan diambil baris yang tersisa dari kumpulan hasil.
Rowcount - Ini adalah atribut read-only dan mengembalikan jumlah baris yang dipengaruhi oleh metode execute ().
Berikut ini contoh untuk menampilkan record dari tabel EMPLOYEE yang memiliki gaji lebih dari 1000
import pymysql.cursors # Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) # prepare a cursor object using cursor() method cursor = db.cursor() # Prepare SQL query to INSERT a record into the database. sql = &quot;SELECT * FROM EMPLOYEE \\ WHERE INCOME &gt; '%d'&quot; % (1000) try: # Execute the SQL command cursor.execute(sql) # Fetch all the rows in a list of lists. results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # Now print fetched result print (&quot;fname = %s,lname = %s,age = %d,sex = %s,income = %d&quot; % \\ (fname, lname, age, sex, income )) except: print (&quot;Error: unable to fetch data&quot;) # menutup koneksi ke server db.close() Setelah perintah diatas dieksekusi, akan muncul hasil seperti dibawah ini : fname = Mac, lname = Mohan, age = 20, sex = M, income = 2000
Update Operation # Operasi UPDATE pada database berarti mengupdate satu atau lebih record, yang sudah tersedia di database. Contoh berikut memperbarui semua record yang memiliki SEX sebagai ‘M’. Di sini, kita meningkatkan UMUR semua laki-laki satu tahun.
import pymysql.cursors # Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) # prepare a cursor object using cursor() method cursor = db.cursor() # Prepare SQL query to UPDATE required records sql = &quot;UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'&quot; % ('M') try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() # disconnect from server db.close() Delete Operation # Operasi DELETE diperlukan bila kita ingin menghapus beberapa record dari database. Berikut ini adalah contoh untuk menghapus semua record dari EMPLOYEE dimana AGE lebih dari 20
import pymysql.cursors # Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) # prepare a cursor object using cursor() method cursor = db.cursor() # Prepare SQL query to DELETE required records sql = &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; '%d'&quot; % (20) try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() # disconnect from server db.close() Selain itu masih ada beberapa operasi sebagai berikut :
Commit Operation db.commit() Rollback Operation db.rollback() Disconnect Operation db.close() `}),e.add({id:58,href:"/html/tutorial/input/",title:"Input",description:"merupakan elemen penting dari form HTML. Atribut `type` dari elemen input dapat berupa berbagai jenis, yang mendefinisikan bidang informasinya masing-masing.",content:`HTML Form Input type # Dalam HTML &lt;input type=&quot;&quot;&gt; merupakan elemen penting dari form HTML. Atribut type dari elemen input dapat berupa berbagai jenis, yang mendefinisikan bidang informasinya masing-masing. Contohnya membuat kotak input teks.
&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; Berikut adalah daftar semua type &lt;input&gt; pada HTML.
Type Description text Mendefinisikan bidang input teks satu baris. password Mendefinisikan bidang input password satu baris. radio Mendefinisikan tombol radio yang memungkinkan untuk pilih satu opsi. checkbox Mendefinisikan kotak centang yang memungkinkan untuk pilih beberapa pilihan/opsi. button Mendefinisikan tombol tekan sederhana, yang dapat diprogram untuk melakukan tugas pada suatu event. file Mendefinisikan bidang input untuk memilih file dari penyimpanan perangkat. image Mendefinisikan tombol kirim grafis/tombol kirim dalam bentuk gambar. submit Mendefinisikan tombol kirim untuk mengirimkan formulir ke server. reset Mendefinisikan tombol reset untuk mengatur ulang semua nilai dalam formulir. HTML5 menambahkan beberapa type baru pada elemen &lt;input&gt;.
Berikut adalah semua daftar type &lt;input&gt; pada HTML5
Type Description color Mendefinisikan bidang input yang digunakan untuk pemilihan warna. date Mendefinisikan bidang input untuk pemilihan tanggal. datetime-local Mendefinisikan bidang input untuk memilih tanggal tanpa zona waktu. email Mendefinisikan bidang input untuk memasukkan alamat email. month Mendefinisikan bidang input untuk pemilihan bulan dan tahun, tanpa zona waktu. number Mendefinisikan bidang input untuk memasukkan nomor. url Mendefinisikan bidang input untuk memasukkan URL. week Mendefinisikan bidang untuk memilih tanggal dari minggu-tahun, tanpa zona waktu. search Mendefinisikan satu bidang teks baris untuk memasukkan string pencarian. tel Mendefinisikan bidang input untuk memasukkan nomor telepon. Penggunaan # &lt;input type=&quot;button&quot;&gt; &lt;input type=&quot;checkbox&quot;&gt; &lt;input type=&quot;color&quot;&gt; &lt;input type=&quot;date&quot;&gt; &lt;input type=&quot;datetime-local&quot;&gt; &lt;input type=&quot;email&quot;&gt; &lt;input type=&quot;file&quot;&gt; &lt;input type=&quot;hidden&quot;&gt; &lt;input type=&quot;image&quot;&gt; &lt;input type=&quot;month&quot;&gt; &lt;input type=&quot;number&quot;&gt; &lt;input type=&quot;password&quot;&gt; &lt;input type=&quot;radio&quot;&gt; &lt;input type=&quot;range&quot;&gt; &lt;input type=&quot;reset&quot;&gt; &lt;input type=&quot;search&quot;&gt; &lt;input type=&quot;submit&quot;&gt; &lt;input type=&quot;tel&quot;&gt; &lt;input type=&quot;text&quot;&gt; &lt;input type=&quot;time&quot;&gt; &lt;input type=&quot;url&quot;&gt; &lt;input type=&quot;week&quot;&gt; `}),e.add({id:59,href:"/python/tutorial/netwotking/",title:"Networking di dalam Python",description:"Networking di dalam Python.",content:`Python menyediakan dua tingkat akses ke layanan jaringan. Pada tingkat rendah, Kita dapat mengakses dukungan soket dasar dalam sistem operasi yang mendasarinya, yang memungkinkan kita untuk mengimplementasikan klien dan server untuk kedua protokol berorientasi koneksi dan tanpa sambungan.
Python juga memiliki library yang menyediakan akses tingkat lebih tinggi ke protokol jaringan tingkat aplikasi tertentu, seperti FTP, HTTP, dan seterusnya.
Apa itu Socket? # Soket adalah titik akhir dari saluran komunikasi dua arah. Soket dapat berkomunikasi dalam suatu proses, antara proses pada mesin yang sama, atau antara proses di berbagai benua.
Soket dapat diimplementasikan melalui sejumlah jenis saluran yang berbeda: soket domain Unix, TCP, UDP, dan sebagainya. Pustaka socket menyediakan kelas khusus untuk menangani transportasi umum serta antarmuka umum untuk menangani sisanya.
Modul Socket Untuk membuat soket, kita harus menggunakan fungsi socket.socket () yang tersedia dalam modul soket, yang memiliki sintaks umum
s = socket.socket (socket_family, socket_type, protocol=0)
Server Socket Method # Method Penjelasan s.bind() This method binds address (hostname, port number pair) to socket. s.listen() This method sets up and start TCP listener. s.accept() This passively accept TCP client connection, waiting until connection arrives (blocking). Client Socket Method # Method Penjelasan s.connect() This method actively initiates TCP server connection. General Method Socket # Method Penjelasan s.recv() This method receives TCP message s.send() This method transmits TCP message s.recvfrom() This method receives UDP message s.sendto() This method transmits UDP message s.close() This method closes socket socket.gethostname() Returns the hostname. #!/usr/bin/python # This is server.py file import socket # Import socket module s = socket.socket() # Create a socket object host = socket.gethostname() # Get local machine name port = 12345 # Reserve a port for your service. s.bind((host, port)) # Bind to the port s.listen(5) # Now wait for client connection. while True: c, addr = s.accept() # Establish connection with client. print 'Got connection from', addr c.send('Thank you for connecting') c.close() # Close the connection Server Sederhana # Untuk menulis server Internet, kami menggunakan fungsi soket yang tersedia di modul soket untuk membuat objek soket. Objek soket kemudian digunakan untuk memanggil fungsi lain untuk menyiapkan server soket.
Sekarang sebut bind(hostname,port) berfungsi untuk menentukan port untuk layanan pada host yang diberikan.
Selanjutnya, panggil metode penerimaan objek yang dikembalikan. Metode ini menunggu sampai klien terhubung ke port yang di tentukan, dan kemudian mengembalikan objek koneksi yang mewakili koneksi ke klien itu.
Client Sederhana # Mari kita menulis program klien yang sangat sederhana yang membuka koneksi ke port yang diberikan 12345 dan host yang diberikan. Ini sangat sederhana untuk membuat klien soket menggunakan fungsi modul soket Python.
Socket.connect (hosname, port) membuka koneksi TCP ke hostname pada port. Setelah Kita memiliki soket terbuka, maka dapat membaca darinya seperti objek IO apa pun. Setelah selesai, jangan lupa untuk menutupnya, karena akan menutup file.
Kode berikut adalah klien yang sangat sederhana yang terhubung ke host dan port yang diberikan, membaca data yang tersedia dari soket, dan kemudian keluar
#!/usr/bin/python # This is client.py file import socket # Import socket module s = socket.socket() # Create a socket object host = socket.gethostname() # Get local machine name port = 12345 # Reserve a port for your service. s.connect((host, port)) print s.recv(1024) s.close # Close the socket when done Sekarang jalankan server.py ini di latar belakang dan kemudian jalankan di atas client.py untuk melihat hasilnya.
Jalankan server.
python server.py
Setelah server berjalan lanjutkan
Jalankan client: python client.py
Hasilnya akan seperti ini : Got connection from ('127.0.0.1', 48437) Thank you for connecting
Modul Internet pada Python # Berikut tabel daftar beberapa modul penting dalam pemrograman Jaringan / Internet Python.
Protocol Common function Port No Python module HTTP Web pages 80 httplib, urllib, xmlrpclib NNTP Usenet news 119 nntplib FTP Transfer file 20 ftplib, urllib SMTP Mengirim email 25 smtplib POP3 Fetching email 110 poplib IMAP4 Fetching email 143 imaplib Telnet Command lines 23 telnetlib Gopher Document transfers 70 gopherlib, urllib `}),e.add({id:60,href:"/html/tutorial/button/",title:"Button",description:"elemen yang digunakan untuk membuat tombol yang bisa diklik",content:`HTML Button # Apa Itu HTML Button # &lt;button&gt; dalam HTML adalah elemen yang digunakan untuk membuat tombol yang bisa diklik. Kita bisa mengisi elemen &lt;button&gt; dengan text atau dengan elemen lainnya seperti &lt;p&gt;, &lt;i&gt;, &lt;b&gt;, &lt;strong&gt;, &lt;img&gt;, dan lain-lain. Namun elemen &lt;button&gt; tidak bisa dengan elemen &lt;input&gt;
Atribut # Berikut adalah atribut-atribut yang ada dalam elemen &lt;button&gt;.
Atribut Nilai Deskripsi autofocus autofocus Membuat tombol secara otomatis mendapatkan fokus saat halaman pertama kali dimuat disabled disabled Membuat tombol tidak bisa diklik form form_id Menentukan form mana yang terkait dengan tombolnya type button, reset, submit Menentukan tipe dari tombol. - type=&quot;button&quot; = Menandakan bahwa tombol tersebut adalah tombol yang dapat diklik - type=&quot;submit&quot; = Menandakan bahwa tombol tersebut berfungsi untuk melakukan submit form - type=&quot;reset&quot; = Menandakan bahwa tombol tersebut berfungsi untuk mereset data pada form formaction URL Menentukan ke mana data dari form akan dikirim ketika form di submit. Atribut ini hanya digunakan jika type=&quot;submit&quot; formenctype application/x-www-form-urlencoded, multipart/form-data, text/plain Menentukan bagaimana data form dikodekan/diencode sebelum dikirim ke server. Atribut ini hanya digunakan jika type=&quot;submit&quot; formmethod get, post Menentukan metode HTTP apa yang digunakan ketika mengirim data form. Atribut ini hanya digunakan jika type=&quot;submit&quot; formnovalidate formnovalidate Menentukan data form tidak boleh divalidasi pada saat pengiriman. Atribut ini hanya digunakan jika type=&quot;submit&quot; formtarget _blank, _self, _parent, _top, framename Menentukan dimana letak untuk menampilkan respon setelah submit form. Atribut ini hanya digunakan jika type=&quot;submit&quot; name nama Menentukan nama untuk tombol value teks Menentukan nilai untuk tombol Contoh # Berikut adalah contoh penggunaan elemen &lt;button&gt;.
&lt;button type=&quot;submit&quot; name=&quot;test&quot; value=&quot;Test Submit&quot;&gt;Submit&lt;/button&gt; Referensi # HTML Tag HTML type Attribute `}),e.add({id:61,href:"/html/tutorial/textarea/",title:"Text Area",description:"Elemen HTML `<textarea>` mewakili kontrol pengeditan teks multi-baris, berguna saat Anda ingin mengizinkan pengguna memasukkan teks bentuk bebas dalam jumlah yang cukup besar, misalnya komentar pada ulasan atau formulir umpan balik.",content:`HTML Textarea # Apa itu tag &lt;textarea&gt;? # Elemen HTML &lt;textarea&gt; mewakili kontrol pengeditan teks multi-baris, berguna saat Anda ingin mengizinkan pengguna memasukkan teks bentuk bebas dalam jumlah yang cukup besar, misalnya komentar pada ulasan atau formulir umpan balik.
Fitur &lt;textarea&gt; antara lain:
Atribut id untuk memungkinkan &lt;textarea&gt; dikaitkan dengan elemen &lt;label&gt; untuk tujuan aksesibilitas. Atribut name untuk mengatur name titik data terkait yang dikirimkan ke server saat formulir dikirimkan. Atribut rows dan cols untuk memungkinkan Anda menentukan ukuran yang tepat untuk &lt;textarea&gt; yang akan diambil. Mengatur ini adalah ide yang bagus untuk konsistensi, karena default browser dapat berbeda. Konten default dimasukkan di antara tag pembuka dan penutup. &lt;textarea&gt; tidak mendukung atribut value. Elemen &lt;textarea&gt; juga menerima beberapa atribut yang umum digunakan untuk tag &lt;input&gt;, seperti autocomplete, autofocus, disabled, placeholder, readonly, dan required.
Contoh kode # HTML # &lt;label for=&quot;story&quot;&gt;Tell us your story:&lt;/label&gt; &lt;textarea id=&quot;story&quot; name=&quot;story&quot; rows=&quot;5&quot; cols=&quot;33&quot;&gt; It was a dark and stormy night... &lt;/textarea&gt; CSS # label, textarea { font-size: 0.8rem; letter-spacing: 1px; } textarea { padding: 10px; max-width: 100%; line-height: 1.5; border-radius: 5px; border: 1px solid #ccc; box-shadow: 1px 1px 1px #999; } Contoh Lain # Contoh Basic # Contoh berikut menunjukkan penggunaan &lt;textarea&gt; yang sangat sederhana, dengan sejumlah rows dan columns dan beberapa konten default.
&lt;textarea name=&quot;textarea&quot; rows=&quot;10&quot; cols=&quot;50&quot;&gt;Write something here&lt;/textarea&gt; Panjang minimal dan maksimal # Contoh berikut menunjukkan penggunaan &lt;textarea&gt; dengan jumlah karakter minimum dan maksimum menggunakan atribut minlength untuk panjang minimum dan maxlength untuk panjang maksimum karakter.
&lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; minlength=&quot;10&quot; maxlength=&quot;20&quot;&gt;Write something here&lt;/textarea&gt; Perhatikan bahwa minlength tidak menghentikan pengguna untuk menghapus karakter sehingga angka yang dimasukkan melewati batas minimum, tetapi itu membuat nilai yang dimasukkan ke dalam &lt;textarea&gt; tidak valid. Perhatikan juga bahwa meskipun Anda memiliki set nilai minlength (3, misalnya), &lt;textarea&gt; kosong masih dianggap valid kecuali Anda juga memiliki set atribut required.
Placeholder # Contoh berikut menunjukkan penggunaan &lt;textarea&gt; yang memiliki placeholder. Perhatikan placeholder itu menghilang ketika Anda mulai mengetik ke dalam &lt;textarea&gt;.
&lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; placeholder=&quot;Comment text.&quot;&gt;&lt;/textarea&gt; Catatan: Placeholder hanya boleh digunakan untuk memperlihatkan contoh tipe data yang harus dimasukkan ke dalam formulir, mereka bukan pengganti elemen &lt;label&gt; yang tepat yang terikat pada input.
Disabled dan readonly # Contoh ini menunjukkan dua &lt;textarea&gt; yang salah satunya menggunakan atribut disabled dan satunya lagi menggunakan atribut readonly. Mainkan keduanya dan Anda akan melihat perbedaan perilaku, elemen yang disabled tidak dapat dipilih dengan cara apa pun (dan valuenya tidak dikirimkan), sedangkan elemen readonly dapat dipilih dan isinya dapat disalin (dan valuenya dikirimkan), Anda hanya tidak dapat mengedit isinya.
Catatan: Di browser selain firefox, seperti chrome, konten textarea yang disabled dapat dipilih dan disalin.
&lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; disabled&gt;I am a disabled textarea&lt;/textarea&gt; &lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; readonly&gt;I am a readonly textarea&lt;/textarea&gt; Referensi # MDN `}),e.add({id:62,href:"/html/tutorial/data/",title:"Data",description:"digunakan untuk menambahkan terjemahan yang dapat dibaca mesin dari konten tertentu.",content:`HTML Data # Apa itu tag &lt;data&gt; ? # Tag &lt;data&gt; digunakan untuk menambahkan terjemahan yang dapat dibaca mesin dari konten tertentu.
Elemen ini memberikan nilai yang dapat dibaca mesin untuk memproses data, dan nilai yang dapat dibaca manusia untuk rendering di browser.
Tips: Jika konten berhubungan dengan waktu maka gunakan tag &lt;time&gt;
Contoh kode # HTML
&lt;ul&gt; &lt;li&gt;&lt;data value=&quot;1&quot;&gt;Ayam Bakar&lt;/data&gt;&lt;/li&gt; &lt;li&gt;&lt;data value=&quot;2&quot;&gt;Nasi Goreng&lt;/data&gt;&lt;/li&gt; &lt;li&gt;&lt;data value=&quot;3&quot;&gt;Sate&lt;/data&gt;&lt;/li&gt; &lt;/ul&gt; Contoh Lain # &lt;input type=&quot;radio&quot; id=&quot;K1&quot;&gt; &lt;label for=&quot;K1&quot;&gt;&lt;data value=&quot;27&quot;&gt;Kelas 1&lt;/data&gt;&lt;/label&gt; &lt;br&gt; &lt;input type=&quot;radio&quot; id=&quot;K2&quot;&gt; &lt;label for=&quot;K2&quot;&gt;&lt;data value=&quot;30&quot;&gt;Kelas 2&lt;/data&gt;&lt;/label&gt; &lt;br&gt; &lt;input type=&quot;radio&quot; id=&quot;K3&quot;&gt; &lt;label for=&quot;K3&quot;&gt;&lt;data value=&quot;30&quot;&gt;Kelas 3&lt;/data&gt;&lt;/label&gt; &lt;br&gt; &lt;input type=&quot;radio&quot; id=&quot;K4&quot;&gt; &lt;label for=&quot;K4&quot;&gt;&lt;data value=&quot;32&quot;&gt;Kelas 4&lt;/data&gt;&lt;/label&gt; Referensi: https://www.w3schools.com/tags/tag_data.asp
`}),e.add({id:63,href:"/html/tutorial/canvas/",title:"Canvas",description:"elemen ini cukup berguna untuk menggambar grafik-grafik atau objek pada halaman website",content:`HTML Canvas # Apa itu HTML Canvas? # Pada HTML5 terdapat elemen &lt;canvas&gt;, elemen ini cukup berguna untuk menggambar grafik-grafik atau objek pada halaman website dengan menggunakan bantuan JavaScript. Kalian wajib menguasai setidaknya hal-hal dasar mengenai JavaScript untuk memanipulasi objek pada elemen ini, sebab elemen ini hanya sebuah Badan bagi grafik yang akan digambar, dan sisanya di manipulasikan dengan JavaScript.
Secara umum elemen ini sering digunakan untuk membangun sebuah Game Web, contoh penulisan sebuah elemen &lt;canvas&gt; sebagai berikut:
&lt;canvas&gt;&lt;/canvas&gt; Apakah ada atribut di dalam tag &lt;canvas&gt;? # Pada tag ini tidak terdapat atribut khusus karena penyelesaiannya menggunakan JavaScript.
Apa saja yang bisa kita gambar? # Tulisan - HTML canvas bisa digunakan untuk menggambar tulisan. Grafik - HTML canvas seringkali digunakan untuk menggambar berbagai jenis grafik. Animasi - HTML canvas bisa digunakan untuk menganimasikan objek yang sudah digambar. Dan masih banyak lainnya yang bisa kita interaksikan dengan tag satu ini.
Bagaimana cara menggambarnya? # &lt;canvas id=&quot;canvas1&quot; width=&quot;500&quot; height=&quot;500&quot;&gt;&lt;/canvas&gt; &lt;script&gt; const canvas = document.getElementById(&quot;canvas1&quot;) const ctx = canvas.getContext(&quot;2d&quot;) console.log(ctx) // untuk melihat function built-in yang tersedia const letakHorizontal = 100 const letakVertikal = 100 const width = 200 const height = 200 ctx.fillRect(letakHorizontal, letakVertikal, width, height) ctx.fillStyle = &quot;black&quot; ctx.fill() &lt;/script&gt; Output:
Keunikannya, objek ini bisa di manipulasikan dengan banyak hal karena &lt;canvas&gt; memiliki function built-in yang cukup banyak. Canvas ini tidak hanya bisa menggambar satu objek saja melainkan tidak terbatas atau sebanyak yang dibutuhkan.
Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
`}),e.add({id:64,href:"/html/tutorial/video/",title:"Video",description:"digunakan untuk menampilkan video di dalam browser maupun website, namun tidak semua browser mendukung seluruh format video",content:`HTML Video # Apa itu HTML Video? # HTML memiliki sebuah elemen tag &lt;video&gt; yang digunakan untuk menampilkan video di dalam browser maupun website, namun tidak semua browser mendukung seluruh format video, jadi kita harus menyajikan banyak format video untuk memastikan browser menjalankan video tersebut, yaitu dengan cara lokasi file video di tempatkan di dalam elemen tag &lt;source&gt; atau di dalam attribute src.
Bagaimana cara penggunaan attribute &lt;video&gt; ? # Cara penggunaan tag &lt;video&gt; lebih jelasnya adalah seperti berikut:
penggunaan sederhana:
&lt;video controls src=&quot;https://archive.org/download/BigBuckBunny_124/Content/big_buck_bunny_720p_surround.mp4&quot; poster=&quot;https://peach.blender.org/wp-content/uploads/title_anouncement.jpg?x11217&quot; width=&quot;620&quot; &gt; Maaf, browser yang anda gunakan tidak support video embedded, jangan khawatir, kamu tetap bisa melihatnya dengan mendownload video tersebut &lt;a href=&quot;https://archive.org/details/BigBuckBunny_124&quot;&gt;disini&lt;/a&gt; &lt;/video&gt; penggunaan dengan lebih dari 1 format video:
jika ingin memastikan video tampil di browser manapun gunakan tag &lt;source&gt; di dalam tag &lt;video&gt; dengan format video yang berbeda-beda. seperti ini:
&lt;video controls&gt; &lt;!-- memasukan lebih dari 1 format video menggunakan tag &lt;source&gt; untuk mengantisipasi browser yang tidak mendukung video format tertentu --&gt; &lt;source src=&quot;video/myVideo.mp4&quot; type=&quot;video/mp4&quot; /&gt; &lt;source src=&quot;video/myVideo.webm&quot; type=&quot;video/webm&quot; /&gt; &lt;!-- fallback jika browser tidak mendukung tag &lt;video&gt; --&gt; &lt;p&gt; Browser yang kamu pakai tidak mendukung HTML5 video. berikut &lt;a href=&quot;video/myVideo.mp4&quot;&gt;link video&lt;/a&gt; untuk melihatnya. &lt;/p&gt; &lt;/video&gt; memasang subtitle/captions ke dalam video:
di tag &lt;video&gt; kita juga dapat menambahkan captions / subtitle dengan memasukkan tag &lt;track&gt; ke dalam tag &lt;video&gt;. seperti ini:
&lt;video id=&quot;video&quot; controls preload=&quot;metadata&quot;&gt; &lt;source src=&quot;video/myVideo.mp4&quot; type=&quot;video/mp4&quot; /&gt; &lt;source src=&quot;video/myVideo.webm&quot; type=&quot;video/webm&quot; /&gt; &lt;track label=&quot;English&quot; kind=&quot;subtitles&quot; srclang=&quot;en&quot; src=&quot;captions/vtt/myVideo-en.vtt&quot; default /&gt; &lt;track label=&quot;Indonesia&quot; kind=&quot;subtitles&quot; srclang=&quot;id&quot; src=&quot;captions/vtt/myVideo-id.vtt&quot; /&gt; &lt;/video&gt; untuk tag &lt;track&gt; lebih jelasnya bisa di akses di sini [HTML Track] dan untuk tag &lt;source&gt; bisa diakses di sini [HTML Source]
Atribut di dalam tag &lt;video&gt; # Terdapat setidaknya dua atribut yang biasa digunakan.
autoplay - attribute bertipe boolean yang digunakan untuk menjalankan video secara otomatis. (di sebagian browser attribute ini tidak akan aktif jika tidak ada attribute muted ) controls - browser akan menampilkan control video berupa volume, seeking, pause/resume. muted - jika terdapat attribute ini, maka video tidak akan mengeluarkan audio. poster - link / URL untuk menampilkan gambar video ketika video sedang di download, jika attribute ini tidak di pasang, tidak ada yang di tampilkan sampai video tersebut terdownload &amp; frame pertama dari video tersebut menjadi poster frame. Namun sebagai catatan jika ingin menampilkan video dari suatu link di internet, pastikan tidak melanggar hak cipta dari kepemilikan video tersebut.
Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
`}),e.add({id:65,href:"/html/tutorial/audio/",title:"Audio",description:"HTML audio adalah sebuah tag HTML yang berfungsi untuk menunjukan suara, terdapat 3 type atau format audio",content:`HTML AUDIO # Apa itu HTML audio # HTML audio adalah sebuah tag HTML yang berfungsi untuk menunjukan suara, terdapat 3 type atau format audio yaitu :
ogg mp3 wav Ada 2 tag yang digunakan untuk mengeluarkan suara yaitu :
&lt;audio&gt; : fungsinya sebagai tag html &lt;source&gt;: fungsinya menentukan file audio dan type/formatnya Ada juga untuk atribut tag audio
autoplay : memulai langsung mute : tidak ada suara ketika di putar controls : menampilkan kontrol di audio Langsung saja ke contohnya # &lt;audio&gt; &lt;source src=&quot;&quot; type=&quot;&quot; /&gt; &lt;/audio&gt; Penjelasan # src: menentukan file audio type: menentukan type/formatnya Penerapan # &lt;audio controls autoplay&gt; &lt;source src=&quot;&quot; type=&quot;audio/(typenya)&quot; /&gt; &lt;/audio&gt; Penggunaan demo # &lt;!-- Penjelasan --&gt; &lt;!-- Atribut control = menampilkan control di audio --&gt; &lt;!-- Atribut autoplay = memulai langsung --&gt; &lt;!-- src = sumber audio (horse.ogg) --&gt; &lt;!-- type = tipe/format dari audio tersebut (audio/ogg) --&gt; &lt;audio controls autoplay&gt; &lt;source src=&quot;horse.ogg&quot; type=&quot;audio/ogg&quot; /&gt; &lt;/audio&gt; Referensi untuk audio dan materi W3SCHOOLS # `}),e.add({id:66,href:"/html/tutorial/langcode/",title:"Language",description:"HTML lang code terdiri atas HTML language code (code bahasa) dan HTML country code (kode negara)",content:`HTML Lang Code # HTML lang code terdiri atas HTML language code (code bahasa) dan HTML country code (kode negara)
Apa itu HTML Language Code ? # HTML language code atau bahasa Indonesianya kode bahasa HTML memiliki kode lang merupakan suatu atribut yang harus selalu digunakan di dalam tag &lt;html&gt; untuk mendeklarasikan bahasa dari suatu halaman website. Penggunaan kode bahasa ini dimaksudkan untuk membantu mesin pencari dan browser. Kode bahasa HTML menggunakan kode ISO negara.
Beberapa contoh kode ISO bahasa -Indonesia (id) -Inggris (en) -German (de) -Jepang (ja)
Apa Itu HTML Country Code # HTML Country Code atau bahasa Indonesianya kode negara HTML digunakan sebagai tambahan kode bahasa di dalam atribut lang. Dua huruf pertama didalam kode ISO negara mendefinisikan atau menunjukkan negara yang digunakan oleh suatu halaman web.
Beberapa contoh kode ISO negara
Indonesia (ID) Korea Selatan (KR) Inggris (GB) Amerika Serikat (US) Contoh penggunaan kode bahasa # Dalam bahasa Indonesia
&lt;html lang=&quot;id-ID&quot;&gt; &lt;/html&gt; Dalam bahasa Jepang
&lt;html lang=&quot;ja-JP&quot;&gt; &lt;/html&gt; Dalam bahasa Inggris Amerika serikat
&lt;html lang=&quot;en-US&quot;&gt; &lt;/html&gt; Dalam bahasa Cina Taiwan
&lt;html lang=&quot;zh-TW&quot;&gt; &lt;/html&gt; Referensi: Language code: https://www.w3schools.com/tags/ref_language_codes.asp Country code: https://www.w3schools.com/tags/ref_country_codes.asp
`}),e.add({id:67,href:"/html/tutorial/taglist/",title:"Tag List",description:"Dalam file ini berisi semua tag HTML dengan deskripsi (mencakup tag HTML5 terbaru). ",content:`All HTML Tags List # Dalam file ini berisi semua tag HTML dengan deskripsi (mencakup tag HTML5 terbaru). Tag versi HTML sebelumnya selalu berguna, tetapi beberapa tag dihapus di HTML5 dan beberapa tag diperkenalkan di HTML5. Semua daftar tag HTML diurutkan sesuai abjad.
Catatan:
Baru - Tag baru diperkenalkan di HTML5 Hapus - Tidak suport di HTML5 Baru/Hapus - Tag baru diperkenalkan di HTML5, tapi sekarang tidak suport di HTML5 Tag Deskripsi Dalam HTML5? &lt;!--...--&gt; Menjelaskan teks komentar dalam kode sumber &lt;!doctype&gt; Mendefinisikan jenis dokumen &lt;a&gt; Jangkar tertentu (Hyperlink), digunakan untuk tautan dalam dokumen web internal/eksternal &lt;abbr&gt; Menjelaskan singkatan (akronim) &lt;acronym&gt; Menjelaskan akronim Hapus &lt;address&gt; Menjelaskan informasi alamat &lt;applet&gt; Menanamkan applet dalam dokumen HTML Hapus &lt;area&gt; Mendefinisikan area dalam peta gambar &lt;article&gt; Mendefinisikan sebuah artikel Baru &lt;aside&gt; Deskripsi berisi set (atau tulis) di samping tempat di halaman berisi Baru &lt;audio&gt; Audio konten spesifik Baru &lt;b&gt; Menebalkan teks tertentu &lt;base&gt; Menentukan URL dasar untuk semua tautan di halaman web &lt;basefont&gt; Menjelaskan warna font default, ukuran, tampilan dalam dokumen Hapus &lt;bb&gt; Menententukan perintah browser, perintah itu dipanggil sesuai tindakan klien Baru/Hapus &lt;bdo&gt; Arah tampilan teks tertentu &lt;big&gt; Mendefinisikan teks besar Hapus &lt;blockquote&gt; Menentukan kutipan panjang &lt;body&gt; Mendefinisikan bagian utama (tubuh) bagian dalam dokumen HTML &lt;br /&gt; Satu baris break spesifik &lt;button&gt; Menentukan tombol tekan &lt;canvas&gt; Menentukan tampilan grafik pada dokumen web HTML Baru &lt;caption&gt; Menentukan judul tabel &lt;center&gt; Menentukan teks yang ditampilkan rata tengah Hapus &lt;cite&gt; Menentukan kutipan teks &lt;code&gt; Menentukan teks kode komputer &lt;col&gt; Menentukan setiap kolom dalam elemen &lt;colgroup&gt; di tabel &lt;colgroup&gt; Mendefinisikan grup dari satu atau lebih kolom di dalam tabel &lt;command&gt; Menentukan tombol perintah, panggil sesuai tindakan pengguna Baru &lt;datagrid&gt; Mendefinisikan data yang mewakili dalam datagrid Baru/Hapus &lt;datalist&gt; Menentukan daftar opsi yang telah ditentukan sebelumnya di sekitar tag &lt;input&gt; Baru &lt;dd&gt; Mendefinisikan deskripsi definisi dalam daftar definisi &lt;del&gt; Teks tertentu dihapus dalam dokumen web &lt;details&gt; Menentukan detail tambahan yang disembunyikan atau ditampilkan sesuai tindakan pengguna Baru &lt;dfn&gt; Menentukan tim definisi &lt;dialog&gt; Menentukan percakapan obrolan antara satu orang atau lebih Baru/Hapus &lt;dir&gt; Menentukan daftar direktori Hapus &lt;div&gt; Menentukan bagian divisi &lt;dl&gt; Menentukan daftar definisi &lt;dt&gt; Menentukan tim definisi &lt;em&gt; Mendefinisikan teks format penekanan &lt;embed&gt; Mendefinisikan aplikasi eksternal embedding menggunakan plug-in relatif Baru &lt;eventsource&gt; Mendefinisikan sumber event yang dihasilkan ke server jauh Baru/Hapus &lt;fieldset&gt; Mendefinisikan pengelompokan elemen formulir terkait &lt;figcaption&gt; Mewakili teks keterangan yang sesuai dengan elemen gambar Baru &lt;figure&gt; Mewakili konten mandiri yang sesuai dengan elemen &lt;figcaption&gt; Baru &lt;font&gt; Mendefinisikan ukuran font, tampilan font dan warna font untuk teksnya Hapus &lt;footer&gt; Mendefinisikan bagian footer yang berisi detail tentang penulis, hak cipta, hubungi kami, peta situs, atau tautan ke dokumen terkait Baru &lt;form&gt; Mendefinisikan bagian formulir yang memiliki kontrol input interaktif untuk mengirimkan informasi formulir ke server &lt;frame&gt; Mendefinisikan frame window Hapus &lt;frameset&gt; Digunakan untuk menampung satu atau lebih elemen &lt;frame&gt; Hapus &lt;h1&gt; hingga &lt;h6&gt; Mendefinisikan level Judul dari 1 hingga 6 ukuran berbeda &lt;head&gt; Mendefinisikan bagian header dari dokumen HTML &lt;header&gt; Didefinisikan sebagai wadah yang menampung konten pengantar atau tautan navigasi Baru &lt;hgroup&gt; Mendefinisikan judul bagian yang menyimpan tag h1 hingga h6 Baru/Hapus &lt;hr /&gt; Mewakili jeda tematik antara tag tingkat paragraf. Hal ini biasanya menarik garis horizontal &lt;html&gt; Mendefinisikan dokumen bahasa markup HTML &lt;i&gt; Mendefinisikan teks format miring &lt;iframe&gt; Mendefinisikan bingkai sebaris yang menyematkan konten eksternal ke dalam dokumen web saat ini &lt;img&gt; Digunakan untuk menyisipkan gambar ke dalam dokumen web &lt;input&gt; Mendefinisikan informasi di input yang dipilih &lt;ins&gt; Digunakan untuk menunjukkan teks yang disisipkan ke dalam halaman dan menunjukkan perubahan pada dokumen &lt;isindex&gt; Digunakan untuk membuat permintaan pencarian baris tunggal untuk menanyakan isi dokumen Hapus &lt;kbd&gt; Digunakan untuk mengidentifikasi teks yang mewakili input keyboard &lt;keygen&gt; Digunakan untuk menghasilkan sertifikat yang ditandatangani, yang digunakan untuk mengautentikasi ke layanan Baru/Hapus &lt;label&gt; Digunakan untuk memberi keterangan pada label teks dengan elemen form &lt;input&gt; &lt;legend&gt; Digunakan untuk menambahkan keterangan (title) ke sekelompok elemen formulir terkait yang dikelompokkan bersama ke dalam tag &lt;fieldset&gt; &lt;li&gt; Menentukan item daftar baik daftar terurut maupun daftar tidak berurut &lt;link&gt; Digunakan untuk memuat stylesheet eksternal ke dalam dokumen HTML &lt;map&gt; Mendefinisikan peta gambar yang dapat diklik &lt;mark&gt; Digunakan untuk menyorot (ditandai) teks tertentu Baru &lt;menu&gt; Digunakan untuk menampilkan daftar item/menu perintah yang tidak diurutkan &lt;meta&gt; Digunakan untuk menyediakan metadata terstruktur tentang halaman web &lt;meter&gt; Digunakan untuk mengukur data dalam rentang tertentu Baru &lt;nav&gt; Digunakan untuk mendefinisikan grup tautan navigasi Baru &lt;noframes&gt; Digunakan untuk menyediakan konten fallback ke browser yang tidak mendukung elemen &lt;frame&gt; Hapus &lt;noscript&gt; Digunakan untuk menyediakan konten cadangan ke browser yang tidak mendukung JavaScript &lt;object&gt; Digunakan untuk menyematkan objek seperti gambar, audio, video, applet Java, dan animasi Flash &lt;ol&gt; Mendefinisikan daftar item yang diurutkan &lt;optgroup&gt; Digunakan untuk membuat pengelompokan opsi, opsi terkait dikelompokkan di bawah judul tertentu &lt;option&gt; Mewakili item opsi dalam elemen &lt;select&gt;, &lt;optgroup&gt; atau &lt;datalist&gt; &lt;output&gt; Digunakan untuk merepresentasikan hasil perhitungan Baru &lt;p&gt; Digunakan untuk merepresentasikan teks paragraf &lt;param&gt; Menyediakan parameter untuk elemen objek yang disematkan &lt;pre&gt; Digunakan untuk merepresentasikan teks yang telah diformat sebelumnya &lt;progress&gt; Mewakili kemajuan tugas Baru &lt;q&gt; Merupakan kutipan singkat &lt;rp&gt; Digunakan untuk memberikan tanda kurung di sekitar konten fall-back ke browser yang tidak mendukung anotasi ruby Baru &lt;rt&gt; Menentukan teks ruby dari anotasi ruby Baru &lt;s&gt; Menampilan teks dalam gaya coret &lt;samp&gt; Mewakili teks yang harus ditafsirkan sebagai contoh keluaran dari program komputer &lt;script&gt; Mendefinisikan JavaScript sisi klien &lt;section&gt; Digunakan untuk membagi dokumen menjadi beberapa bagian generik yang berbeda Baru &lt;select&gt; Digunakan untuk membuat daftar drop-down &lt;small&gt; Digunakan untuk memperkecil ukuran teks &lt;source&gt; Digunakan untuk menentukan beberapa sumber media Baru &lt;span&gt; Digunakan untuk mengelompokkan dan menerapkan gaya ke elemen sebaris &lt;strike&gt; Mewakili teks yang dicoret Hapus &lt;strong&gt; Mewakili penekanan kuat pada teks penting yang lebih besar &lt;sub&gt; Mewakili teks subskrip sebaris &lt;sup&gt; Mewakili teks superskrip sebaris &lt;table&gt; Digunakan untuk mendefinisikan tabel dalam dokumen HTML &lt;tbody&gt; Digunakan untuk mengelompokkan baris tabel &lt;td&gt; Digunakan untuk membuat sel data standar dalam tabel HTML &lt;textarea&gt; Membuat input teks multi-baris &lt;tfoot&gt; Digunakan untuk menambahkan footer pada tabel yang berisi ringkasan data tabel &lt;th&gt; igunakan untuk membuat header sekelompok sel dalam tabel HTML &lt;thead&gt; Digunakan untuk menambahkan header pada tabel yang berisi informasi header tabel &lt;time&gt; Mewakili tanggal dan/atau waktu dalam dokumen HTML Baru &lt;title&gt; Mewakili judul dokumen HTML &lt;tr&gt; Mendefinisikan baris sel dalam tabel &lt;track&gt; Mewakili trek teks untuk tag &lt;audio&gt; dan &lt;video&gt; Baru &lt;tt&gt; Mewakili teks teletype Hapus &lt;u&gt; Mewakili teks yang digarisbawahi &lt;ul&gt; Mendefinisikan daftar item yang tidak diurutkan &lt;var&gt; Merupakan variabel dalam program komputer atau persamaan matematika &lt;video&gt; Digunakan untuk menyematkan konten video Baru &lt;wbr&gt; Mendefinisikan peluang pemutusan kata dalam string teks yang panjang Baru Referensi # Refensi lengkap dan penjelasan lebih lanjut dapat dilihat pada website berikut.
`}),e.add({id:68,href:"/mysql/tutorial/",title:"Tutorial MySQL",description:"Blog Roberto Kaban",content:""}),e.add({id:69,href:"/vbnet/tutorial/",title:"Tutorial MySQL",description:"Blog Roberto Kaban",content:""}),e.add({id:70,href:"/python/tutorial/",title:"Dasar",description:"Blog Roberto Kaban",content:""}),e.add({id:71,href:"/html/tutorial/",title:"Tutorial HTML",description:"Blog Roberto Kaban",content:`HTML (Hypertext Markup Language) merupakan bahasa markup yang digunakan untuk menentukan konten dan struktur halaman web.
`}),e.add({id:72,href:"/javascript/tutorial/",title:"Tutorial Javascript",description:"Blog Roberto Kaban",content:""}),e.add({id:73,href:"/html/",title:"Tutorial HTML",description:"HTML (HyperText Markup Language) merupakan bahasa markup standar untuk membuat struktur halaman website.",content:`HTML (HyperText Markup Language) merupakan bahasa markup standar untuk membuat struktur halaman website.
`}),e.add({id:74,href:"/javascript/",title:"Tutorial Javascript",description:"JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.",content:`JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.
`}),e.add({id:75,href:"/mysql/",title:"Tutorial MySQL",description:"MySQL merupakan sistem manajemen database relasional yang berbasis SQL (Structured Query Language).",content:`MySQL merupakan sistem manajemen database relasional yang berbasis SQL (Structured Query Language).
`}),e.add({id:76,href:"/php/",title:"Tutorial PHP",description:"PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.",content:`PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.
`}),e.add({id:77,href:"/php/tutorial/",title:"Tutorial PHP",description:"PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.",content:`PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.
`}),e.add({id:78,href:"/python/",title:"Tutorial Python",description:"Python merupakan bahasa pemrograman interpretatif yang multiplatform dan berfokus pada keterbacaan kode.",content:`Python merupakan bahasa pemrograman interpretatif yang multiplatform dan berfokus pada keterbacaan kode.
`}),e.add({id:79,href:"/vbnet/",title:"Tutorial Vb.Net",description:"Vb.Net merupakan bahasa pemrograman untuk membuat aplikasi yang berbasis sistem operasi Windows Microsoft.",content:`Vb.Net merupakan bahasa pemrograman untuk membuat aplikasi yang berbasis sistem operasi Windows Microsoft.
`}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()