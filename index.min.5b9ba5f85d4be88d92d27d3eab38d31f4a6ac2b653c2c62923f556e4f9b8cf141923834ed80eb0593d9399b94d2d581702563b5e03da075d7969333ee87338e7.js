var suggestions=document.getElementById('suggestions'),search=document.getElementById('search');search!==null&&document.addEventListener('keydown',inputFocus);function inputFocus(a){a.ctrlKey&&a.key==='/'&&(a.preventDefault(),search.focus()),a.key==='Escape'&&(search.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(c){const d=suggestions.classList.contains('d-none');if(d)return;const a=[...suggestions.querySelectorAll('a')];if(a.length===0)return;const b=a.indexOf(document.activeElement);if(c.key==="ArrowUp"){c.preventDefault();const d=b>0?b-1:0;a[d].focus()}else if(c.key==="ArrowDown"){c.preventDefault();const d=b+1<a.length?b+1:b;a[d].focus()}}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"/coretanku/pesta-bunga-dan-buah-di-berastagi-kabupaten-karo/",title:"Pesta Bunga dan Buah di Berastagi Kabupaten Karo",description:"Pesta Bunga dan Buah di Berastagi (Kab. Karo) merupakan sebuah festival ataupun pesta tahunan yang pada awalnya dilaksanakan untuk mengucap syukur kepada Tuhan karena telah memberikan masyarakat Karo tanah yang subur.",content:"Apa itu Pesta Bunga Buah? # Pesta Bunga dan Buah di Berastagi (Kab. Karo) merupakan sebuah festival ataupun pesta tahunan yang pada awalnya dilaksanakan untuk mengucap syukur kepada Tuhan karena telah memberikan masyarakat Karo tanah yang subur. Perayaan pesta Bunga dan Buah dilakukan karena masyarakat Karo mensyukuri karunia Tuhan berupa lahan yang subur dengan hasil pertaniannya yang melimpah.\nPerayaan ini telah membudaya dan sudah terlaksana setiap tahunnya. Kabupaten Karo dihuni masyarakat Karo yang berbudaya pertanian (agriculture) memiliki alam pegunungan yang subur penghasil bunga, buah dan sayur yang memenuhi kebutuhan produk pertanian Sumatera Utara.\nSelain sebagai ungkapan syukur pesta Bunga dan Buah juga untuk mempromosikan hasil-hasil panen masyarakat Karo. Pesta Bunga dan Buah digunakan sebagai sarana untuk menarik wisatawan agar tertarik datang dan berkunjung ke Kabupaten Karo untuk melihat hasil panen dari pertanian masyarakat Karo. Selain itu pesta ini juga sebagai sarana untuk mempromosikan tempat-tempat wisata lain yang ada di Kabupaten Karo kepada para wisatawan.\nSejarah Pesta Bunga dan Buah # Pesta Bunga dan Buah ini semula dirancang Bupati Karo yang pertama, yaitu Tampak Sebayang pada tahun 1988. Pada tahun 1998 terjadi krisis moneter di Indonesia yang berdampak terhadap pelaksanaan Pesta Bunga dan Buah. Pemerintah tidak memiliki dana untuk melaksanakan pesta ini sehingga pesta ini tidak jadi dilaksanakan. Akan tetapi antusias masyarakat untuk melaksanakan pesta ini masih kuat. Hal ini bisa dilihat pada saat ini, pesta mejuah-juah dilaksanakan kembali setelah krisis moneter selesai.\nPesta ini diagendakan pemda Karo, dan akan tetap dilaksanakan setiap tahunnya untuk dapat menarik wisatawan baik dari dalam maupun luar negeri agar mau berkunjung ke Kabupaten Karo untuk melihat Pesta Bunga dan Buah serta tempat-tempat wisata lainnya\nKegiatan pada Pesta Bunga dan Buah # Dalam Pesta bunga dan buah, terdapat beberapa kegiatan yang umumnya dilakukan seperti Pawai yang diikuti oleh kontingen Kecamatan, Pelajar, Instansi Pemerintah, Mitra Kerja dan Kelompok masyarakat yang diundang panitia. Selain itu, terdapat juga kegiatan perlombaan seperti, lomba merangkai bunga (bunga pilar), lomba merangkai bunga dipandu dengan buah dan atau sayuran, lomba karnaval kendaraan hias, lomba pawai kontingen, lomba penataan hiasan stan pameran, lomba lari marathon mini dan lain sebgainya.\nPentas Seni dan Hiburan dipersiapkan dan dilaksanakan di taman Mejuah-juah dan disuguhi berbagai hiburan yang sudah mengakar pada budaya Karo seperti Tarian (landek), Ndikkar, atraksi Gundala-gundala, hiburan lagu pop Karo dan berbagai Atraksi Seni Panggung setiap harinya selama kegiatan berlangsung yang pelaksanaanya diselingi dengan kegiatan lomba.\nKegiatan pameran juga dilakukan, pameran ini berisi potensi dan Produk Unggulan Daerah, Pameran Produk dan Pelayanan Mitra Kerja dan Dunia usaha, dlsb.\nPesta Bunga dan Buah Berastagi tahun 2022 # Pada tahun 2022 ini, Pesta (Festival) Bunga dan Buah di Berastagi dilaksanakan pada tanggal 1 -3 juli 2022.\n"}),a.add({id:1,href:"/coretanku/hello-world-buka-blog-lagi/",title:"Hello World! Buka Blog lagi..",description:"Seingat saya terakhir aktivitas di sini dengan memindahkan beberapa artikel teman lama (alm. Roy) dari blog sebelumnya itgeek yang sudah tidak terurus dan expired.",content:"Blog Tidak Terurus # Sudah lama tidak buka blog ini, sakin lamanya\u0026hellip;ups saya tidak tau kata \u0026lsquo;sakin\u0026rsquo; ini kata baku atau tidak, yang pasti saya lupa kapan terakhir menulis sesuatu di sini, dan malas mencari tau juga. Seingat saya terakhir aktivitas di sini dengan memindahkan beberapa artikel teman lama (alm. Roy) dari blog sebelumnya itgeek yang sudah tidak terurus dan expired. Dari sekian banyak blog yang sebelumnya saya punya, nasibnya sama persis dengan ini, terbengkalai. Trus,..apa cerita, kok tiba-tiba coret sesuatu?\nRencana Migrasi # Hari ini bisa teringat buka blog karena istri saya yang rada ngambek dengan membuat status di wa-nya tentang konten yang sudah berganti di blog ini, intinya sih si sayang 😀 (begitu biasanya kami saling panggil) mencari foto-foto kami yang dulunya berada di blog ini. Saya mau jelaskan juga nggak akan nyambung karena sifatnya teknis dan saya juga yang teledor lupa nyimpan backup file xml blog. Saya awalnya gunakan domain kaban.my.id sebagai website undangan pernikahan, jadi desain khusus untuk foto-foto prewedding dan informasi mengenai acara pernikahan.\nMaksud di hati nantinya di pindahkan ke subdomain sebagai arsip, eh\u0026hellip;malah saya lupa simpan di mana file backup templatenya 😔, padahal tinggal di restore seharusnya, masa iya buat ulang?!. Yah..begitulah ceritanya,..nanti bakal saya buat posting ulang lah, biar ada pengingat tentang hari spesial kami, lagian penting juga untuk arsip.\nPenting kok nggak di segerakan coi?!😡\nbentarrr\u0026hellip;masih ada hal lain yang harus di selesaikan secepat mungkin, paling tidak postingan inilah harus di publish sesegera mungkin.\nNgeblog lagi # Wokeh, lompat cerita\u0026hellip;kembali ke blog. Blog lama yg menggunakan wordpress menjadi PR tersendiri untuk memindahkan semua artikel, dipindahkan secara manual kan nggak kerjaan, kalau langsung di generate hasilnya nggak rapi, harus di manualkan juga di beberapa artikel, kan serba salah, butuh waktu juga.\nPengennya sih kemarin sekalian ngeblog dengan menggunakan Hugo (salah satu framework Golang) dan menggunakan github sebagai tempat hosting file Sekarang sudah menggunakan Hugo, malah nggak kesampaian hingga sekarang. Asu-dahlah, manfaatkan yang ada aja, paling tidak ada tempat untuk coret-coret.\nMudah-mudahan blog ini tidak terbengkalai lagi. Saya janji bakal update rutin, jika tidak bisa, maka kedepannya akan saya buat lagi postingan seperti ini yang diakhiri kata janji lagi untuk update.🤬 Terlaluuu!\n"}),a.add({id:2,href:"/coretanku/pernikahan-dan-pesta-adat-aro-roberto-kaban-dan-shella-sari-keliat-2021/",title:"Pernikahan dan Pesta adat Karo: Roberto Kaban dan Shella Sari Keliat 2021",description:"Pernikahan dan Pesta adat Karo: Roberto Kaban dan Shella Sari Keliat 2021",content:"Pernikahan Roberto Kaban dan Shella Sari Keliat # Lokasi dan waktu Pernikahan # Lokasi pernikahan awalnya akan dilaksanakan di rumah orang tua istri, tetapi beralih tempat ke Load Pekan Minggu. Akad nikah dilaksanakan pada 12 Februari 2021, dimulai sekitar jam 10.30, dan belangsung lancar sesuai yang direncanakan, walaupun saya salah pengucapan sekali (diulang) dalam melakukan hijab kabul.\nLokasi dan waktu Pesta adat Karo # Pesta pesta pernikahan secara adat Karo dilaksanakan di Losd Pekan Minggu, Desa Suka Raya, kecamatan Pancur Batu, Deli Serdang, Sumut pada 13 Februari 2022, dimulai kurang lebih dari jam 09.00 s/d jam 17.00\nDokumentasi Preweding # Saya sebenarnya orang yang tidak terlalu suka befoto ria, tapi desakan istri dan untuk mengabadikan momen pernikahan ya dilakukan juga foto-foto untuk pernikahan, sekalian ditempatkan pada undangan.\nFotografer waktu itu adalah mahahasiswa saya yang bernama Anwar, yang kebetulan memiliki profesi sebagai fotografer.\nFoto 1 Foto 2 Foto 3 Foto 4 Foto 5 Dokumentasi Undangan Pernikahan # Undangan awalnya di desain oleh mahasiswa saya yang bernama Amir Nasution, tetapi karena waktu yang mepet dan butuh cepat maka diselesaikan oleh teman saya waktu kuliah D3, Raden Andi Setiawan.\nFoto undangan tampak dalam Foto Undangan tampak depan Dokumentasi Pelaksanaan Pesta Adat Karo # [menyusul]\n"}),a.add({id:3,href:"/perintah-dasar-linux/",title:"Perintah dasar Linux",description:"Linux adalah keluarga sistem operasi turunan Unix yang bersifat _open-source_ dan didasarkan pada Linux Kernel. Terdapat berbagai distribusi (Distro) linux yang populer seperti Ubuntu, Fedora, Mint, Debian, dan lain-lain. Berikut ini perintah dasar dalam Linux.",content:"Sepintas tentang Linux # Linux adalah keluarga sistem operasi turunan Unix yang bersifat open-source dan didasarkan pada Linux Kernel. Terdapat berbagai distribusi (Distro) linux yang populer seperti Ubuntu, Fedora, Mint, Debian, dan lain-lain.\nSejak pertama kali dirilis pada tahun 1991, popularitas Linux terus meroket karena sifatnya yang open-source. User bebas memodifikasi Linux dan mendistribusikannya dengan memakai namanya sendiri.\nKetika mengoperasikan Linux, kita dapat menggunakan shell yang merupakan interface yang menyediakan akses ke layanan sistem operasi. Penggunaan command-line interface (CLI) sangat disarankan karena lebih powerful dan efektif. Task atau tugas yang membutuhkan proses dengan banyak langkah melalui GUI dapat dilakukan hanya dalam waktu sekian detik dengan mengetikkan command atau perintah ke CLI.\nJadi, ketika hendak menggunakan Linux, kita sebaiknya tahu perintah dasar Linux. Di artikel ini, kita akan mempelajari perintah Linux yang paling mendasar.\nPerintah Dasar Linux # Sebelum menjabarkan perintah dasar sistem operasi Linux, Kita harus membuka command line terlebih dulu.\nBerikut daftar command dasar Linux:\nPerintah pwd # Perintah pwd (Print Working Directory) berfungsi untuk mencari path dari direktori (folder) yang Anda gunakan saat ini. Perintah ini akan mengembalikan path yang absolut (penuh), yang pada dasarnya merupakan path semua direktori yang diawali dengan garis miring depan (/). Contoh dari path absolut adalah /home/username.\nPerintah cd # Untuk pindah direktori gunakan perintah cd (change direktory). Perintah ini harus disertakan nama direktori yang dituju beserta lokasi/path.\nContohnya, saat ini Kita sedang berada di direktori /home/username/Documents dan ingin membuka direktori Photos yang berada di direktori Documents. Untuk melakukannya, kita mengetikkan cd Photos\nContoh lainnya, sekarang kita sedang berada di direktori /home/username/Documents/Photos, kemudian ingin berpindah ke direktori /home/username/Documents/Movies maka kita dapat mealukannya dengan mengetikkan path secara langsung,  cd /home/username/Documents/Movies\nAlternatif lain, kita dapat berpindah direktori dengan cara berikut:\ncd .. (dengan dua tanda titik) untuk memindahkan satu direktori ke atas.\ncd- (dengan tanda penghubung) untuk berpindah ke direktori sebelumnya.\nPerintah ls # Perintah ls (lists) digunakan untuk untuk melihat konten atau isi dari direktori. Secara default, command ini akan menampilkan isi dari direktori yang Anda gunakan saat ini. Sebgai contoh, kita sedang berada pada direktori /home/username/Documents kemudian kita ketikkan ls maka akan ditampilkan isi (file dan direktori) yang ada pada direktori kita berada.\nJika ingin melihat isi direktori lain, ketik ls, disusul dengan path direktori. Contoh, ketik ls /home/username/Downloads untuk melihat isi direktori /home/username/Downloads.\nUntuk menampilkan file yang tersembunyi dalam direktori dapat menggunakan ls -a Untuk menampilkan file dan direktori secara detail beserta hak akses, ukuran dan pemilik (owner) dengan perintah ls -la\nPerintah cat # cat (concatenate) perintah untuk membuat daftar konten atau isi file pada standard output (sdout). Untuk menjalankan perintah ini, ketik cat yang kemudian diikuti dengan nama dan ekstensi file.\nSebagai contoh, kita ingin membuat file baru maka dapat menggunakan perintah: cat \u0026gt; biodata.txt kemudian enter akan menghasilkan sebuah file baru dengan nama biodata.txt ketikkan sembarang kalimat dan tekan tombol enter selanjutnya control + c untuk menyimpan.\nMenggabungkan isi file dapat menggunakan perintah cat file1 file2 \u0026gt; file3 artinya kita menggabungkan isi file1 dan file2 kedalam file baru yang bernama file3\nPerintah cp # Perintah cp (copy) untuk menyalin file dari direktori saat ini ke direktori yang berbeda. Contohnya, cp biodata.txt /home/username/Documents untuk copy file biodata.txt dari direktori saat ini ke direktori /home/username/Documents.\ncontoh selanjutnya, kita copy file dari direktori lain (bukan direktori aktif kita sekarang) ke direktori lain cp /home/username/Documents/fotoku.jpg /home/username/Documents/Photos artinya, kita copy file fotoku.jpg dari direktori /home/username/Documents/ ke direktori /home/username/Documents/Photos\nPerintah mv # Perintah mv (move) digunakan untuk memindahkan (mengubah) file atau direktori. Penggunaan perintah mv sama dengan penggunaan perintah cp .\nContoh penggunaan, mv /home/username/Documents/fotoku.jpg /home/username/Documents/Photos artinya, kita memindahkan file fotoku.jpg dari direktori /home/username/Documents/ ke direktori /home/username/Documents/Photos .\ncontoh lain, mv file1.txt file2.txt berarti kita mengganti nama file file1.txt menjadi file2.txt\nPerintah mkdir # Perintah mkdir (make directory) digunakan untuk membuat direktori. Contoh penggunaan, mkdir foto akan membuat sebuah direktori (folder) dengan nama foto pada direktori yang sedang aktif (direktori kita mengetikkan perintah).\ncontoh lain,  mkdir /home/username/Documents/foto akan membuat sebuah direktori dengan nama foto pada direktori  /home/username/Documents/\nPerintah rmdir # Perintah rmdir (remove directory), digunakan untuk menghapus direktori kosong. contoh penggunaan, rmdir foto akan menghapus direktori foto pada direktori yang sedang aktif (direktori kita mengetikkan perintah).\ncontoh lain,  rmdir /home/username/Documents/foto akan menghapus direktori foto pada direktori  /home/username/Documents/\nperintah rm # Perintah rm (remove) berfungsi untuk menghapus direktori beserta isinya. contoh penggunaan, rm foto akan menghapus direktori foto beserta isinya pada direktori yang sedang aktif (direktori kita mengetikkan perintah).\ncontoh lain,  rmdir /home/username/Documents/foto akan menghapus direktori foto beserta isinya pada direktori  /home/username/Documents/\nuntuk menghapus file, rm fotoku.jpg berarti kita menghapus file yang bernama fotoku.jpg\nHati-hati aat menggunakan perintah rm, karena file yang sudah dihapus tidak dapat dikembalikan lagi.😁\nPerintah touch # perintah touch digunakan untuk membuat file baru yang kosong melalui baris perintah Linux. Sebagai contoh, touch /home/username/Documents/biodataku.html untuk membuat file biodataku.html di direktori /home/username/Documents/\nPerintah locate # Perintah locate digunakan untuk mencari file, fungsinya sama seperti pencarian di Windows. Apabila dipasangkan dengan argumen -i , perintah ini akan bersifat case-insensitive sehingga file dapat dicari meski kita tidak mengingat namanya dengan tepat.\nUntuk mencari file yang memuat dua atau lebih dari dua kata, gunakan tanda bintang (*). Misalnya, perintah locate -i tugas*kampus akan mencari file yang pada namanya termuat kata \u0026ldquo;tugas\u0026rdquo; dan “kampus”, dengan mengabaikan penulisan nama file huruf besar atau kecil.\nPerintah find # pPrintah find juga dapat digunakan untuk mencari file dan direktori. Bedanya, perintah find lebih ditujukan untuk mencari file yang berlokasi di dalam direktori yang diberikan.\nContoh, perintah find /home/ -name catatan.txt akan mencari file bernama catatan.txt di dalam direktori home dan subdirektorinya.\nPerintah grep # Perintah grep untuk melakukan pencarian di semua teks di dalam sebuah file.\nSebagai contoh, grep medan catatanku.txt akan mencari kata medan di file catatanku.txt. Baris yang memuat kata yang dicari akan ditampilkan seluruhnya.\nPerintah sudo # Perintah sudo (SuperUser Do) berfungsi untuk menjalankan task yang memerlukan hak akses (permission) administrative atau root.\nPerintah df # Perintah df digunakan untuk mendapatkan laporan tentang penggunaan disk space sistem. Laporan yang ditampilkan dalam bentuk persentase dan satuan KB. Bila ingin melihat laporan berupa satuan megabyte, ketik df -m.\nPerintah du # Perintah du merupakan perintah dasar Linux yang berfungsi untuk mengecek seberapa banyak space yang digunakan oleh suatu file atau direktori. Hanya saja, untuk format ringkasan, penggunaan disk yang ditampilkan berupa nomor blok disk alih-alih format ukuran pada umumnya. Jika ingin melihat jumlah penggunaan disk dalam satuan byte, kilobyte, dan megabyte, tambahkan argumen -h ke baris perintah.\nPerintah head # Perintah head digunakan untuk melihat baris pertama dari semua file teks. Secara default, perintah ini akan menampilkan sepuluh baris pertama. Namun, jumlah baris tersebut dapat diubah sesuai keinginan kita. Misalnya, jika hanya ingin menampilkan lima baris pertama, ketik head -n 5 namafile.ext\nPerintah tail # Perintah tail memiliki fungsi yang sama dengan perintah head. Hanya saja, perintah tail akan menampilkan sepuluh baris terakhir dari suatu file. Misalnya, tail -n namafile.ext.\nPerintah diff # Perintah diff digunakan untuk membandingkan konten atau isi dua file berdasarkan baris demi baris. Setelah menganalisis file, perintah ini akan menghasilkan output berupa line atau baris yang tidak cocok. Programmer sering menggunakan perintah ini ketika membuat perubahan program.\ncontoh penggunaan diff file1.ext file2.ext.\nPerintah tar # Perintah tar digunakan untuk mengarsipkan banyak file ke dalam format file arsip tar\nPerintah chmod # Perintah chmod digunakan untuk membaca, menulis, dan menjalankan permission (hak akses) file dan direktori.\nPerintah jobs # Perintah jobs akan menampilkan semua jobs saat ini beserta dengan statusnya. Pada dasarnya job merupakan proses yang dimulai oleh shell.\nPerintah kill # Perintah kill akan mengirimkan sinyal tertentu ke aplikasi yang bermasalah dan memberi instruksi kepada aplikasi tersebut untuk berakhir atau mati dengan sendirinya.\nTotalnya ada 64 sinyal yang dapat digunakan, tapi biasanya orang-orang hanya menggunakan dua sinyal, yakni:\nSIGTERM (15) – meminta program untuk berhenti bekerja dan memberikannya waktu untuk menyimpan semua progress. Jika tidak ada sinyal khusus yang ditentukan ketika memasukkan perintah kill, sinyal inilah yang akan digunakan.\nSIGKILL (9) – memaksa program untuk berhenti bekerja saat itu juga. Progress yang tidak tersimpan akan hilang.\nSelain sinyal, Kita juga harus tahu nomor identifikasi proses (process identification number – PID) dari sebuah program yang hendak dihentikan (kill). Jika tidak tahu PID-nya, Kita bisa menjalankan perintah ps ux.\nSetelah mengetahui sinyal yang ingin digunakan dan PID program, ketikkan  kill [signal option] PID.\nperintah ping # Perintah ping berfungsi untuk mengecek status konektivitas ke server. Misalnya, ping google.com, command akan mengecek apakah sudah terhubung ke Google atau belum dan juga mengukur waktu respons.\nPerintah wget # Perintah wget digunakan mengunduh file dari internet dengan bantuan command wget. Anda hanya perlu mengetikkan wget yang diikuti dengan link unduhan.\nPerintah uname # Perintah uname (Unix Name) digunakan untuk menampilkan mencetak informasi lengkap mengenai sistem Linux, misalnya nama mesin, sistem operasi, kernel, dan lain-lain.\nPerintah top # Sebagai terminal yang setara dengan Task Manager di Windows, perintah top akan menampilkan daftar proses yang sedang berlangsung dan seberapa banyak ruang CPU yang digunakan oleh tiap proses tersebut. Melakukan pengawasan terhadap penggunaan resource sistem sangatlah disarankan, terutama ketika Anda harus mencari tahu mana proses yang perlu dimatikan karena terlalu banyak menggunakan resource.\nPerintah history # Perintah history untuk mengecek kembali (review) pernah yang sudah digunakan sebelumnya.\nPerintah man # Perintah man digunakan untuk menampilkan manual/ bantuan perintah pada linux. sebgai contoh man tail akan menampilkan opsi yang dapat digunakan pada perintah tail.\nperintah echo # Perintah echo dasar Linux ini digunakan untuk memindahkan beberapa data ke dalam satu file. Misalnya, jika ingin menambahkan teks, Hello world ke file yang bernama hello.txt, yang perlu diketik adalah echo Hello, my name is John \u0026gt;\u0026gt; hello.txt\nperintah zip , unzip # Gunakan perintah zip untuk compress file ke arsip zip dan perintah unzip untuk mengekstrak file zip ke arsip zip.\nperintah hostname # Perintah hostname digunakan untuk mengetahui nama host/network. Dengan menambahkan -I di akhir perintah, alamat IP jaringan akan ditampilkan.\nPerintah useradd, userdel # useradd digunakan untuk membuat user baru, sedangkan passwd untuk menambahkan password ke akun user tersebut. Untuk menambahkan user bernama alfa, misalnya, cukup ketikkan useradd alfa passwd 12345678 untuk menambahkan passwordnya.\nCara menghapus user sama dengan menambahkan user. Untuk menghapus akun user, ketik userdel UserName.\n"}),a.add({id:4,href:"/mengenal-cli-command-line-interface/",title:"Mengenal Cli Command Line Interface",description:"Kita mungkin sering mendengar istilah CLI dalam hal yang bergubungan dengan dunia IT, khususnya di bidang programmer. Apa sebenarnya CLI ini? CLI merupakan singkatan dari Command Line Interface.",content:"Pengantar # Kita mungkin sering mendengar istilah CLI dalam hal yang bergubungan dengan dunia IT, khususnya di bidang programmer. Apa sebenarnya CLI ini? CLI merupakan singkatan dari Command Line Interface. CLI sebagai media untuk memberikan instruksi/perintah pada komputer dan perangkat lunak (software) yang ada di dalamnya. Pada CLI dapat diberikan berupa perintah dalam bentuk teks yang fungsinya untuk mengerjakan tugas (task) tertentu.\nDengan berkembangnya perangkat lunak yg sifatnya GUI (Graphic User Interface) membuat banyak orang kurang familiar dengan CLI. Bahkan beberapa user/pengguna pemula takut ataupun bisa juga malas menggunakan CLI. Mereka merasa program ini lebih cocok bagi user profesional dan yang sudah berpengalaman. Padahal, sebenarnya tidak. Saya sendiri terkadang kebingungan untuk menggunakan Sistem operasi terbaru, khususnya windows karena perubahan tampilan dan fitur, tetapi ketika menggunakan CLI dengan Command prompt windows maka akan lebih cepat dalam melakukan pekerjaan.\nSebagai contoh, saya mulai menggunakan windows di versi Windows 98, kemudian beralih ke Windows XP dan terakhir adalah Windows 7, semua tampilan versi windows tersebut tidak terlalu jauh berbeda. Kemudian ketika menggunakan Windows 8 atau Windows 10 versi sekarang, saya malah agak kesulitan untuk sekedar masuk ke menu Control panel, atau sekedar untuk buka Ms. Excel dari GUI Windows. Tetapi kalau sudah terbiasa dengan CLI, maka tinggal buka Command prompt (Winkey + R) dan ketikkan control kemudian enter, sudah masuk ke Control panel Windows, atau ketikkan excel, dan enter sudah membuka aplikasi Ms. Excel.\nMeskipun demikian, semua terserah pada diri anda dan sesuaikan dengan kubutuhan. Kita lanjut, pada artikel kali ini kita akan membahas sejarah CLI beserta funginya.\nSejarah CLI # CLI pertama kali digunakan secara luas sekitar tahun 1960-an dan ketika itu, perangkat input yang digunakan pada komputer hanyalah keyboard dan layar untuk menampilkan output. Komputer juga masih dapat menampilkan output dalam bentuk teks. Sistem operasi seperti Microsoft DOS (Disk Operating System) menggunakan CLI sebagai interface standar untuk user.\nUntuk melakukan sejumlah tugas tertentu, user harus mengetikkan perintah (command) di CLI yang pada saat itu merupakan satu-satunya cara untuk dapat berkomunikasi dengan komputer.\nSetelah perintah diketik, hasil yang ditampilkan akan berupa informasi berbasis teks atau tindakan tertentu yang dijalankan komputer. Jadi, kuncinya adalah jangan sampai mengetikkan perintah yang salah. Apabila salah mengetik perintah, bisa saja kita justru menghapus file yang tidak seharusnya dihapus, atau menutup program yang sedang berjalan.\nSetelah bertahun-tahun hanya menggunakan keyboard dengan risiko kesalahan ketik perintah yang cukup tinggi, akhirnya mouse diciptakan. Metode point-and-click pada mouse menjadi cara baru untuk berkomunikasi dengan komputer. Cara ini dirasa lebih aman dan mudah bagi pengguna komputer karena mereka tidak harus menggunakan CLI.\nSistem operasi mulai mengembangkan cara komputasi yang lebih menarik dengan GUI (Graphical User Interface). Konsep GUI banyak digunakan dalam pengembangan perangkat lunak, selain lebih familiar pada user, dukungan teknologi perangkat input juga sudah memungkinkan interaksi dengan layar sentuh (Touch Screen).\nMengapa menggunakan CLI # Seperti yang sudah dijelaskan sebelumnya, GUI dikembangkan setelah mouse ditemukan dan menjadi perangkat input baru untuk mengoperasikan komputer. GUI memiliki tampilan yang menarik serta mudah dipahami. Meskipun demikian, bagi orang yang bergelut di bidang IT, terdapat beberapa alasan CLI dinilai lebih efektif dibanding GUI, diantaranya sebgai berikut:\n1. Menggunakan Lebih Sedikit Resource # Sudah jadi rahasia umum bahwa program berbasis teks hanya menggunakan sedikit resource di komputer. Jadi, dengan CLI, Kita dapat menjalankan banyak task dengan penggunaan resource yang minim.\n2. Cepat dan akurat # Kita dapat menggunakan perintah tertentu untuk menuju file atau folder, ataupun aplikasi yang lebih spesifik. Tidak akan ada kendala, asalkan perintah yang diketik benar.\n3. Mudah untuk menjalankan task secara berulang # Sistem operasi tidak menyediakan semua menu dan tombol yang diperlukan untuk menjalankan task demi alasan keamanan. Akibatnya, sulit jika kita harus menjalankan tugas yang berulang. CLI dapat mengatasinya. Misalkan, untuk mengelola ratusan file dalam sebuah folder, Kita hanya perlu menjalankan satu perintah yang kemudian bisa diotomatiskan untuk melakukan task yang sama.\n4. Canggih dan efektif # Sebagian besar Sistem Operasi tidak mengizinkan user konfigurasi proses inti sistem dengan level user default, kita harus menggunakan akses root atau administrator. Windows memiliki sistem keamanan, dan MacOS memiliki System Integrity Protection yang membatasi Anda melakukan task yang dilindungi sistem. Dengan CLI kita dapat mengelola sistem sepenuhnya tanpa dibatasi larangan tersebut.\nPenutup # "}),a.add({id:5,href:"/10-pertanyaan-mendasar-tentang-blockchain-yang-anda-harus-tahu-jawabannya/",title:"10 Pertanyaan Mendasar Tentang Blockchain Yang Anda Harus Tahu Jawabannya",description:"Blockchain adalah serangkaian blok yang berisi informasi. Blok-blok ini saling terkait dan dilindungi keunikannya dengan hash (seperti tanda tangan digital yang unik, bisa diumpamakan juga seperti sidik jari yang tidak mungkin sama di antara satu dengan lainnya).",content:"Apa itu blockchain? # Blockchain adalah serangkaian blok yang berisi informasi. Blok-blok ini saling terkait dan dilindungi keunikannya dengan hash (seperti tanda tangan digital yang unik, bisa diumpamakan juga seperti sidik jari yang tidak mungkin sama di antara satu dengan lainnya). Setiap blok berisi informasi. Apabila ada yang mengubah satu blok, maka ia juga harus mengubah serangkaian blok lainnya sehingga kecurangan atau pencurian data menjadi sangat mungkin untuk ditiadakan. Ide siapakah blockchain ini? Teknologi blockchain pertama kali dideskripsikan pada tahun 1991 oleh sekelompok peneliti yang membuat sebuah teknologi seperti digital stampstime yang tidak dapat diubah-ubah oleh siapa pun. Namun, teknologi tersebut baru berjalan ketika diadopsi oleh Satoshi Nakamoto untuk menciptakan kriptocurrency untuk bitcoin padatahun 2009.\nBagaimana prinsip kerja teknologi blockchain ini? # Bayangkan bila ada sekelompok orang yang berkumpul dan memutuskan untuk bermain arisan. Mereka mengumpulkan uang dengan jumlah tertentu dan untuk ditarik sesuai jadwal atau ketentuan. Lalu, Anda memutuskan pula untuk bergabung bersama mereka bermain arisan. Kepada siapa Anda harus memberikan kepercayaan Anda? Tentu kepada semua orang di dalam kelompok itu bukan? Dan, apabila ada kemungkinan Anda dicurangi, maka yang harus melakukan kecurangan itu adalah satu kelompok itu, dengan kata lain, tidak mungkin curang jika sendirian, karena setiap tindakan yang dilakukan akan diketahui satu sama lain. Maka, anggaplah orang-orang yang tergolong dalam kelompok tadi adalah blok-blok yang ada dalam sistem blockchain. Semua kegiatan berbasis pada kepercayaan satu sama lain.\nProblem apa yang dapat diselesaikan dengan teknologi ini? # Yang pertama kali mengaplikasikan blockchain adalah perbankan. Mereka tahu bahwa teknologi yang tidak membutuhkan “pihak ketiga” ini pada akhirnya bisa mengancam peran Bank (cryptocurrency begitu aman dan tidak membutuhkan bank yang notabene adalah pihak ketiga itu). Selain finansial, isu pertanian, kesehatan, pendidikan juga dapat dibereskan dengan teknologi ini. Slain itu, teknologi ini juga dapat dipakai di bidang kesenian karena dapat melindungi pekerja seni dari plagiasi karya.\nKeunggulan Blockchain. # Ketika internet pertama kali muncul di tahun 90-an, teknologi ini berperan dalam setiap kehidupan manusia. Di segala bidang internet digunakan. Namun, ada dua hal yang tidak mampu dijamin oleh interner; kepercayaan (trust) dan keterlibatan pihak ketiga. Pada blockchain, kepercayaan adalah landasan utamanya, dan pihak ketiga memang adalah yang paling dihindari dari sistem ini. Blockchain menjawab tantangan yang tak mampu dipecahkan oleh internet dewasa ini.\nBahasa Pemrograman apa saja yang dapat digunakan untuk membangun blockchain? # Blockchain dapat dibangun di atas berbagai bahasa yang lazim digunakan di bidang komputer, seperti Javascript, Phyton, dan lain sebagainya.\nApakah hubungan antara blockchain dengan bitcoin? # Blockchain adalah teknologi di belakang bitcoin untuk membangun sebuah sistem transaksi finansial dengan menggunakan kritografi untuk membuat cryptocurrency. Sehingga, ketika bitcoin booming, maka blockchain pun ikut “terlihat”. Namun, blockchain dapat dikembangkan melampaui apa yang bisa dilakukan dengan bitcoin. Tidak hanya dapat dimanfaatkan di satu bidang, tetapi banyak aspek kehidupan kita.\nBagaimana prospek blockchain di masa yang akan datang? # Blockchain adalah teknologi yang berkembang dengan sangat progresif. Terdapat lima negara (dan kemungkinan jumlah ini akan terus bertambah) yang menerapkan teknologi ini.\nAmerika Serikat, 32% transaksi di negara ini menggunakan bitcoin (merupakan negara dengan tingkat terbanyak menggunakan bitcoin di dunia).\nSingapore, Pemerintahnya sangat terbuka dan menerima transaksi dengan bitcoin, walaupun dengan tetap berhati-hati akan ancaman dalam bidang perbankan dengan penerapan teknologi ini.\nSierra Leon, Sebuah perusahaan bernama Agora telah membantu untuk penghitungan pendapatan negara ini dengan menggunakan teknologi blockchain.\nJepang, sejak tahun 2018, Jepang telah membuka lebar masukkan teknologi blockchain (transaksi dengan bitcoin) di bidang keuangan mereka.\nUni Emirates Arab. Sejak tahun ini, Uni Emirates Arab berencana untuk melakukan 50% transaksi pemerintah dengan sistem blockchain dan melegalkan penggunaaan bitcoin. Yang paling terkini adalah kabarnya pemerintah Uni Emirates Arab juga akan meluncurkan blockchain strategi 2021 yang memfokuskan pada empat landasan utama, yaitu kebahagiaan rakyat, efisiensi pemerintah, legislasi yang maju, dan global entrepreneurship.\nApa kendala terbesar masuknya teknologi blockchain (bitcoin) di sebuah negara? # Kendala terbesarnya adalah kebijakan pemerintah berkaitan dengan kekhawatiran akan jaminan perlindungan terhadap konsumen karena tidak adanya regulasi tentang blockchain. Seperti yang diketahui, blockchain sistemnya adalah desentralisasi sehingga pemerintah tidak punya kendali terhadap kegiatan apa pun yang terjadi di sana. Ada kecemasan bahwa teknologi dapat memudahkan pencucian uang yang menjadi momok setiap negara.\nBagaimana kemungkinan Indonesia menerapkan seratus persen blockchain di kemudian hari? # Pemerintah Indonesia termasuk salah satu negara yang belum menerapkan teknologi dengan masif, walaupun kemungkinan ke arah sana sangat terbuka. Persiapan yang dilakukan antara lain menetapkan regulasi blockchain dan menyusun aturan sebagai payung yang menyangga penerapan teknologi ini. Persiapan lainnya adalah dengan merancang tata kelola, manajemen resiko, dan standarisasi operasional yang kuat yang bertujuan untuk menghindari fragmentasi pasar.\nRoy Sari Milda Siregar, ST, M.Kom\n"}),a.add({id:6,href:"/blockchain-solusi-resiko-keterlibatan-pihak-ketiga-yang-tidak-bertanggung-jawab/",title:"Blockchain: Solusi Resiko Keterlibatan Pihak Ketiga yang Tidak Bertanggung Jawab",description:"Tidak ada satu pun transaksi dalam kehidupan manusia modern yang berhubungan dengan internet yang benar-benar terlepas dari pihak ketiga. Dalam sistem blockchain, pihak ketiga ini disebut “services” (yang memberikan layanan).",content:"Pengantar # Begitu banyak kegiatan/transaksi di dalam kehidupan kita memanfaatkan pihak ketiga. Ketiga Anda menggunakan jasa bank, sistem informasi pendaftaran ke sekolah pilihan, bahkan untuk bersosialisasi di dunia maya seperti facebook. Dan, siapa pun tahu bahwa facebook pernah menjual data para user-nya dan mendapatkan keuntungan.\nTidak ada satu pun transaksi dalam kehidupan manusia modern yang berhubungan dengan internet yang benar-benar terlepas dari pihak ketiga. Dalam sistem blockchain, pihak ketiga ini disebut “services” (yang memberikan layanan), bedanya mereka diberikan aturan yang kuat dan aman yang membuat mereka hanya bisa mengakses apa yang diizinkan oleh user. Dengan kata lain, user tetap memegang otoritas tertinggi atas data mereka.\nBayangkan contoh seperti ini, ketika Anda menggunakan Facebook, Anda memberikan data juga dengan kunci sekaligus. Pihak Facebook bisa melihat data itu sebagai data tak bertuan, mereka punya datanya, tapi tidak tahu milik siapa sehingga tidak dapat menyelewengkan penggunaan data itu. Dan, suatu kali user ingin menghapus atau menarik kembali informasi yang telah diberikan, user dapat sewaktu-waktu mengubah “kontrak” atau izinnya.\nKetakutan pengguna #  Ketakutan—sebetulnya yang wajar—dari user terhadap pihak ketiga umumnya adalah: Ketika tiba-tiba mereka tidak dapat dipercaya Jika tiba-tiba diserang (hacked?) dan semua data dicuri Adanya pihak ketiga kadang membuat komunikasi terhambat, mengapa tidak langsung berkomunikasi dari peer-to-peer? Otentifikasi dan validasi sangat penting, lantas bagaimana mengetahui otentifikasi dan validasinya dilakukan oleh orang yang benar atau tidak?  Ketika Satoshi Nakamoto menemukan blockchain untuk diterapkan dalam bitcoin, permasalahan di atas terjawab sudah. Bitcoin menggunakan kiptocurrency dengan desentralisasi yang pertama di dunia. Sistem pada Bitcoin menukar dan mentransfer dengan menggunakan ledger (buku induk) yang merekam semua rincian setiap transaksi tanpa memerlukan jasa pelayanan sentral yang terpercaya sekalipun. Masing-masing pihak terlibat mendapatkan satu salinan buku besar. Untuk otentifikasi dan identifikasi, setiap transaksi akan ditandatangani secara digital oleh si pemilik dengan sebuah kunci private.\nMekanisme Konsensus # Agar semua transaksi itu dapat dipantau secara simultan, maka transaksi berulang digrupkan secara terstruktur dan disebut sebagai “block” yang dapat dibedakan dengan hash dan timestamp yang unik. Untuk mengurasi resiko pengguna yang tidak dapat dipercaya (distruted user) maka diberlakukan mekanisme konsensus, artinya setiap ada perubahan dalam buku induk akan di-update oleh konsensus/perjanjian (agreement) dari simpul-simpul mayoritas (majorities of nodes).\nProses input data baru di dalam sistem blockchain sehingga membentuk block yang baru memerlukan waktu 10 menit. Dalam arti kata, dengan detilnya pekerjaan yang dilakukan untuk dapat menghasilkan block yang baru dipastikan kecurangan data dapat disingkirkan.\nValidasi Block # Beberapa langkah dalam validasi block antara lain:\n Semua transaksi yang terisi di dalam block diverifikasi dengan langkah sebagai berikut: setiap transaksi sebagai output dihasilkan dari nodes penerima yang diotorisasi di dalam transaksi dengan menggunakan public key hash. Dengan kunci publik pengguna dapat memberikan data dengan tetap merahasiakan identitasnya. Mereka dikenal sebagai pseudonymous identity. Namun demikian, user tetap membutuhkan kunci private untuk mengakses kontrol mereka terhadap bitcoin (contoh kasus). Hanya user dengan kunci private yang dapat melakukan claim terhadap output dari transaksi yang mereka lakukan. Block’s hash yang sebelumnya digunakan sebagai acuan bagi pembentukan block berikutnya dan dicek dari genesis block. Akurasi dari time stamp diverifikasi Proof-or-work dari block yang dibentuk dinyatakan valid. Oleh: Roy Sari Milda Siregar, ST, M.Kom  "}),a.add({id:7,href:"/mengenal-bitcoin-mata-uang-virtual/",title:"Mengenal Bitcoin Mata Uang Virtual",description:"Bitcoin adalah mata uang virtual yang dikembangkan pada tahun 2009 oleh Satoshi Nakamoto. Bitcoin sama halnya  dengan mata uang Rupiah atau Dollar. Bitcoin dikembangkan dengan idealisme bahwa mata uang yang baik tidak dikontrol oleh pemerintah atau bank sentral. ",content:"Pendahuluan # Bitcoin adalah mata uang virtual yang dikembangkan pada tahun 2009 oleh seseorang dengan nama samaran Satoshi Nakamoto. Bitcoin sama halnya dengan mata uang Rupiah atau Dollar, namun hanya tersedia di dunia digital(internet).\nBitcoin dikembangkan dengan idealisme bahwa mata uang yang baik tidak dikontrol oleh pemerintah atau bank sentral. Pemerintah dipercaya selalu dikuasai oleh orang-orang yang korup dan hanya bekerja demi keuntungan pribadi, sehingga keputusan-keputusan finansial selalu berpihak kepada konglomerat belaka.\nKonsep ini menarik bagi banyak orang terutama para geek di dunia IT. Mereka mulai menginvestasikan aset mereka dalam bentuk bitcoin, sementara itu perekonomian dunia semakin labil terbukti dengan adanya krisis perbankan Amerika dan Eropa. Bitcoin dipercayai akan menjadi mata uang dan komoditas universal sehingga harga akan terus melambung tinggi.\nFitur Transaksi Anonim # Bitcoin juga memiliki fitur transaksi yang sifatnya anonim dan biaya transaksi yang sangat rendah (hampir 0). Menggunakan bitcoin, anda dapat melakukan transaksi tanpa memberikan identitas sama sekali sehingga dapat menjaga privasi anda ke level yang paling tinggi.\nMining Bitcoin # Bitcoin diciptakan dengan proses yang disebut “mining”. Para miner menggunakan komputer canggih untuk menguraikan matematika kompleks untuk menemukan block baru Bitcoin, sebagai hadiahnya si penemu akan dihadiahi sejumlah bitcoin. Hadiah per ditemukannya 1 block awalnya ada 50 BTC, sekarang 25 BTC/block, selanjutnya akan terus berkurang diiringi dengan bertambahkan sirkulasi Bitcoin. Sistem telah memastikan bahwa maksimal bitcoin yang beredar di dunia adalah 21 Juta BTC sehingga tidak akan terjadi inflasi.\nKeamanan Transaksi Bitcoin # Bagaimana dengan keamanan? mungkin anda berpikir bahwa sistem bitcoin yang open source memungkinkan seorang komputer jenius dapat membobol sistem bitcoin dan menerbitkan sejumlah bitcoin untuk dirinya sendiri. Kenyataannya sistem ini telah direview oleh berbagai kalangan dan terbukti tanpa cacat. Setiap data transaksi masa lampau tersimpan di semua peer di seluruh jaringan, dan harus berurutan. Setiap transaksi baru akan diverifikasi oleh sejumlah peer, baru dinyatakan valid.\nFitur Transaksi dengan Bitcoin # Berikut ini beberapa fitur dan keuntungan menggunakan bitcoin dalam bertransaksi di internet\n  Transfer instant secara peer to peer. Peer-to-peer sendiri artinya Bitcoin berjalan tanpa memiliki server pusat. Server penyimpanannya bersifat desentralisasi dan terdistribusi—dibagi ke berbagai server yang dijalankan oleh setiap pengguna yang terhubung ke dalam jaringan.\n  Transfer ke mana saja Bitcoin bisa dikirimkan kemana saja dalam hitungan detik, kapanpun dan darimanapun yang Anda mau. Pengiriman uang dengan Bitcoin bisa terjadi hanya dengan modal sebuah smartphone dan koneksi internet.\n  Biaya transfer sangat kecil. Biaya pengiriman pun bisa dihilangkan sampai gratis, namun untuk mempercepat transaksi, biasanya dompet Bitcoin Anda akan memotong biaya sekitar 500 – 3,000 rupiah, tidak peduli berapa jumlah uang yang dikirimkan.\n  Transaksi bersifat irreversible, artinya sekali ditransfer tidak bisa dibatalkan. Bitcoin diberikan ke tangan orang lain, transaksi tidak dapat dibatalkan kecuali orang itu bersedia mengirimkan Bitcoinnya kembali;\n  Transaksi bitcoin bersifat pseudonymous. Semua transaksi yang pernah dilakukan sekaligus saldo Bitcoin yang dimiliki seseorang bisa kita lihat, namun kita tidak tahu siapa pemilik alamat Bitcoin tersebut bila si pemilik tidak memberitahukannya. Setiap pengguna Bitcoin sebenarnya bisa memilih apakah namanya ingin dimunculkan atau tidak, namun meskipun si pengguna ingin merahasiakan identitasnya, semua transaksinya tetap tercatat dan dapat dipantau oleh publik.\n  Bitcoin tidak dikontrol oleh lembaga atau pemerintah apapun. Bitcoin yang menggunakan database Blockchain tidak dikontrol oleh suatu pihak, melainkan sangat terbuka untuk umum sehingga mustahil bagi seseorang untuk memalsukan transaksi di Blockchain. Seluruh transaksi tercatat secara live, transparan, dan tersebar ke jutaan server. Mereka yang ingin mengubah atau memalsukan data transaksi Bitcoin, harus meretas jutaan server tersebut di saat yang bersamaan.\n  Jumlahnya terbatas Suplai Bitcoin hanya akan ada 21 juta Bitcoin di seluruh dunia. Sistem penciptaan Bitcoin yang terus berkurang setiap 4 tahun sekali ini menyerupai sistem ekonomi berdasarkan deflasi dan dengan makin terbatasnya supply bitcoin, harga bitcoin cenderung naik.\n  Penutup # Wokeh, demikian artikel singkatnya mengenai bitcoin. Selanjutnya mungkin anda bertanya, Bagaimana cara mendapatkan bitcoin? Bitcoin bisa didapatkan dengan cara membeli dan mining. Untuk membeli bitcoin dapat dilakukan di exchanger-exchanger seperti bitcoin.co.id (indonesia), mtgox (US \u0026amp; Jepang), dan btcchina.com (China).\n"}),a.add({id:8,href:"/blockchain-dan-dunia-pendidikan/",title:"Blockchain Dan Dunia Pendidikan",description:"Blockchain adalah teknologi matematika yang menggunakan kriptografi yang khas, timestamp, antisentralisasi alias decentralized",content:"Pengantar # Hai hai, habis ikut seminar, nih. Pembicaranya dari Spanyol miss Andrea bla bla dan banyak lagi, saya lupa kebanyakan namanya J di bawah nanti ada link seminar mereka yang kalian bisa ikuti juga ya. Tanpa perlu jauh-jauh terbang ke sana (sama, saya juga ga perlu terbang hahaha).\nKali ini blockchain yang dibahas yang masuk ke ranah pendidikan, khususnya lagi universitas. Kita tentu saja sudah sama-sama yakin bagaimana kerennya blockchain yang membuat bitcoin jadi begitu terkenal ya. Sistem yang dianggap mampu memberikan kepercayaan yang sangat tinggi di antara para penggunanya.\nBlockchain dalam Dunia Pendidikan # Alkisah bahwa blockchain adalah teknologi matematika yang menggunakan kriptografi yang khas, timestamp, antisentralisasi alias decentralized (kadang-kadang lebih menyenangkan menggunakan istilah asingnya ya, saya takut kalian kurang paham apa yang saya maksudkan kalau semuanya diterjemahkan).\nTeknologi ini digadang mampu memangkas sistem yang rumit di dalam dunia pendidikan dewasa ini. Bayangkan, dalam sistem informasi untuk pengelolaan data mahasiswa yang banyak digunakan saat ini, semua data mahasiswa disimpan di cloud computing dengan menggunakan misalnya dropbox, yang pada akhirnya membuat biaya untuk kuliahnya menjadi lebih tinggi. Dengan blockchain biaya ini dapat dipangkas.\nHal lain yang dapat dipangkas adalah biaya kuliah untuk mahasiswa internasional yang mendaftar di suatu kampus tertentu, mereka dapat membeli cryptocurrency di negara mereka sendiri, lalu melakukan pembayaran kuliah tanpa di-charge dengan biaya transfer yang kita tahu cukup banyak. Well, saya sudah pernah merasakannya, bagaimana transfer beberapa juta dengan ratusan ribu, biaya transfernya sama saja dan cukup tinggi karena perbedaan kurs dan kerja sama dengan pihak bank.\nDibayangkan pula, suatu saat nanti dunia pendidikan kita tidak lagi butuh formalitas kehadiran di suatu kelas yang menghadirkan fisik. Mahasiswa dapat memilih mata kuliah (lebih jauh, membuat kurikulumnya sendiri) dari berbagai kampus yang mereka kehendaki di seluruh dunia. Setiap mata kuliah dan proses yang dijalaninya disimpan dalam bentuk data di blok-blok dalam sistem blockchain. Sangat seru, bukan?\nDi contoh terakhir, mahasiswa mendaftar ke sistem blockchain di satu universitas, lalu reportnya akan diedarkan kepada pemilik perusahaan yang mengkehendaki suatu saat mahasiswa ini bekerja di tempat mereka. Semua hasil belajarnya akan diketahui oleh pihak perusahaan, dikirim langsung oleh universitas. Ketika mahasiswa ini menyelesaikan perkuliahannya, perusahaan tinggal me-hire si mahasiswa karena telah memiliki bukti betapa berkualitasnya si mahasiswa. Wow, amazing!\nPenutup # Demikianlah dunia pendidikan menjadi begitu mudah, murah, efektif bagi student, pendidik, dan mereka yang membutuhkan sumber daya manusia yang berkualitas.\nRoy Sari Milda Siregar, S.T., M.Kom\n"}),a.add({id:9,href:"/pengertian-data-informasi-sistem-sistem-informasi-dan-sistem-informasi-manajemen/",title:"Pengertian Data, Informasi, Sistem Sistem Informasi Dan Sistem Informasi Manajemen",description:"Sebagai mahasiswa tentu saja kita di tuntut untuk mendapatkan refrensi terbaru (text book) tentang teori dasar dalam karya ilmiah, berikut ini beberapa pendapat ahli tentang pengertian Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen",content:"Pengantar # Dalam menyusun karya Ilmiah, Tugas Akhir atau Skripsi untuk mahasiswa Teknik Informatika dan Sistem informasi, khususnya mahasiswa yang mengambil judul perancangan sistem, pengembangan atau evaluasi sistem maka membutuhkan teori-teori umum dalam skripsi tersebut.\nTeori-teori umum yang biasa di sertakan meliputi Pengertian tentang Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen. Sebagai mahasiswa tentu saja kita di tuntut untuk mendapatkan refrensi terbaru (text book), nah bagi anda yang kesulitan dalam mencari refrensi, berikut ini beberapa pendapat ahli tentang pengertian Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen.\nPengertian Data # 1. Menurut Oz (2009:9) # Data merupakan fakta tentang orang, kejadian-kejadian serta subjek lainnya yang dimanipulasi dan diproses untuk menghasilkan informasi.\n2. Menurut O’Brien dan Marakas (2011:34) # Data merupakan fakta-fakta mentah, observasi mengenai fenomena fisik atau transaksi bisnis.\n3. Menurut Stairs dan Reynolds (2010:5) # Data merupakan fakta-fakta mentah, seperti nomor induk karyawan, total jam kerja dalam seminggu, bagian penomoran inventori ataupun sales order.\n4. Menurut Shelly dan Rosenblatt (2012:7) # Data adalah fakta yang menjadi material dasar sebuah sistem, sedangkan menurut Laudon dan Laudon(2012:15) data merupakan aliran fakta-fakta mentah yang mewakili peristiwa yang terjadi dalam organisasi atau lingkungan fisik sebelum di atur dan disusun kedalam bentuk yang dipahami dan dapat digunakan.\n5. Menurut Valacich dan Schneider (2012:22) # Data merupakan material mentah, informasi yang belum terformat, seperti kata dan angka-angka.\nPengertian Informasi # 1. Menurut Shelly dan Rosenblatt (2012:7) # Informasi adalah data yang telah di transformasi menjadi bentuk yang lebih berguna bagi pemakai.\n2. Menurut Becerra-Fernandez dan Sabherwal (2010:18) # Informasi adalah subset data yang memiliki konteks, relevansi, dan tujuan.\n3. Laudon dan Laudon (2012:15) # Informasi merupakan data yang telah diubah menjadi bentuk yang bermakna dan berguna bagi manusia.\n4. Menurut Oz (2009:19) # Informasi merupakan fakta atau kesimpulan yang memiliki arti dalam konteks.\n5. Menurut Stairs dan Reynolds (2010:5) # Informasi adalah kumpulan fakta terorganisir sehingga memiliki nilai tambahan di luar nilai fakta individual.\n6. Menurut O’Brien dan Marakas (2011:34) # Informasi merupakan data yang telah dikonversi kedalam konteks yang bermakna dan berguna kepada pengguna akhir tertentu .\n7. Menurut Valacich dan Schneider (2012:22, 510) # Informasi merupakan data yang telah diformat dan / atau terorganisir dengan berbagai cara sehingga menjadi berguna bagi orang yang menggunakan.\nKarakteristik Informasi yang bermanfaat bagi pengguna, Stairs dan Reynolds (2010:7) # Agar informasi bermanfaat bagi pengguna untuk pengambilan keputusan, informasi memiliki karakteristik tertentu seperti tabel dibawah,\n   No Karakteristik Keterangan     1 Accessible Informasi harus mudah diakses oleh para pengguna sehingga mereka bisa mendapatkannya dalam format yang tepat dan pada waktu yang tepat untuk memenuhi kebutuhan mereka.   2 Accurate Informasi yang akurat adalah bebas dari kesalahan. Dalam beberapa kasus, informasi yang tidak akurat akan dihasilkan karena data yang tidak akurat dimasukkan ke dalam proses transformasi. Hal ini biasa disebut dengan garbage in, garbage out (GIGO).   3 Complete Informasi harus lengkap dan berisi semua fakta.   4 Economical Informasi juga harus relatif ekonomis untuk diproduksi. Pengambil keputusan harus selalu menyeimbangkan nilai informasi dengan biaya untuk menghasilkan informasi tersebut.   5 Flexible Informasi yang fleksibel dapat digunakan untuk berbagai tujuan.   6 Relevant Informasi yang dihasilkan harus relevan dengan kebutuhan pengambil keputusan.   7 Reliable Informasi yang handal dan dapat dipercaya oleh pengguna. Dalam banyak kasus, keandalan informasi tergantung pada keandalan metode pengumpulan data.   8 Secure Informasi harus aman dari akses oleh pengguna yang tidak sah.   9 Simple Informasi harus sederhana, tidak terlalu rumit. Informasi yang rumit dan terlalu berlebihan akan mengakibatkan pengambil keputusan terlalu banyak informasi dan tidak dapat menentukan apa yang benar benar penting.   10 Timely Informasi yang tepat waktu disampaikan ketika dibutuhkan.   11 Verifiable Informasi harus diverifikasi. Ini berarti bahwa sebuah informasi harus dipastikan kebenarannya dengan memeriksa banyak sumber untuk informasi yang sama.    Pengertian Sistem # 1. Menurut Shelly dan Rosenblatt (2012:7) # Sistem adalah sekumpulan komponen yang saling berinteraksi untuk menghasilkan tujuan tertentu.\n2. Menurut Satzinger, Jackson dan Burd (2010:6) # Sebuah sistem adalah kumpulan komponen-komponen yang saling terkait yang berfungsi bersama-sama untuk mencapai hasil tertentu.\n3. Menurut Valacich, George dan Hover (2012:6) # Sistem merupakan seperangkat komponen atau prosedur bisnis yang saling terkait yang digunakan dalam satu unit bisnis dan bekerja sama untuk tujuan tertentu.\n4. Menurut Stairs dan Reynolds (2010:6) # Sistem merupakan kumpulan elemen-elemen atau komponen-komponen yang saling berinteraksi untuk menghasilkan suatu tujuan.\n5. Menurut O’Brien dan Marakas (2011:26) # Sistem merupakan komponen yang saling berinteraksi dengan batasan yang sudah ditetapkan, bekerja bersama-sama untuk mencapai tujuan yang objektif dengan menerima input dan menghaslkan output dalam proses transformasi yang terorganisir. ###\n6. Menurut Oz (2009:11) # Sistem merupakan kumpulan dari komponen-komponen yang bekerja sama untuk mencapai tujuan bersama, atau beberapa tujuan, dengan menerima masukan, pengolahan, dan menghasilkan output secara terorganisir.\n7. Menurut Valacich, et al (2012:6) # Suatu sistem memiliki sembilan karakteristik, tujuh di antaranya terlihat pada Gambar dibawah. Pada gambar dapat dilihat interaksi sistem dengan lingkungannya yang memiliki pembatas untuk memisahkan sistem dari lingkungan luar sistem. Sistem mengambil input dari luar, memprosesnya, dan mengirimkan output yang dihasilkan kembali ke lingkungannya.\nKarakteristik Sistem #  Component (komponen) Merupakan elemen-elemen sistem disebut juga dengan subsistem yang merupakan bagian terkecil yang membentuk sebuah sistem. Interrelated (saling berhubungan) Ketergantungan dari salah satu bagian dari sistem pada satu atau lebih bagian sistem lainnya Boundary (batas) Merupakan garis yang menandai bagian dalam dan bagian luar sebuah sistem dalam lingkungannya. Purpose (tujuan) Tujuan keseluruhan atau fungsi dari suatu system. Environment (lingkungan) Segala sesuatu yang berada di luar sistem yang berinteraksi dengan sistem. Interface (antar muka) Penghubung sistem dalam berinteraksi dengan subsistem di lingkungannya. Constraint (batasan) Sebuah batasan tentang apa yang ingin dicapai sebuah sistem.  Pengertian Sistem Informasi # 1. Menurut Laudon dan Laudon (2012:15) # Sistem informasi merupakan seperangkat komponen yang saling terkait yang mengumpulkan (atau mengambil), memproses, menyimpan, dan mendistribusikan informasi untuk mendukung pengambilan keputusan dan kontrol dalam sebuah organisasi.\n2. Menurut Shelly dan Rosenblatt(2012:7) # Sistem informasi adalah kombinasi teknologi informasi, orang(people) dan data untuk mendukung kebutuhan bisnis. sebuah Sistem informasi memiliki lima komponen kunci utama yaitu terdiri dari hardware, Software, data, process dan people. Shelly dan Rosenblatt(2012:8)\n3. Menurut Oz(2009:13) # Sistem Informasi terdiri dari semua komponen yang bekerja sama untuk memproses data dan menghasilkan informasi.\n4. Menurut Stairs dan Reynolds (2010:4) # Sistem Informasi merupakan seperangkat komponen yang saling berinteraksi untuk mengumpulkan, mengubah, menyimpan dan menyebarkan data dan informasi serta menyediakan mekanisme umpan balik untuk memenuhi tujuan.\n5. Menurut O’Brien dan Marakas (2011:4) # Sistem Informasi merupakan kombinasi secara terorganisir atas apa saja dari orang/pengguna, hardware, software, jaringan komunikasi, sumber daya, aturan dan prosedur yang menyimpan, menerima, mengubah dan menyebarkan informasi dalam sebuah organisasi.\n6. Menurut Valacich, George dan Hover (2012:20) # Sistem informasi adalah kombinasi hardware, software, dan jaringan telekomunikasi yang dibangun orang dan digunakan untuk mengumpulkan, membuat, dan mendistribusikan data yang berguna dalam pengaturan organisasi.\n7. Menurut Satzinger, et al(2010:6) # Sistem informasi merupakan kumpulan komponen yang saling terkait yang mengumpulkan, memproses, menyimpan, dan menyediakan informasi sebagai output yang diperlukan untuk menyelesaikan tugas bisnis.\nKomponen Sistem Informasi #  Hardware (perangkat keras) merupakan segala sesuatu yang berada pada lapisan fisik sebuah sistem informasi. Software(perangkat lunak) merupakan program-program yang mengontrol hardware untuk menghasilkan tujuan atau informasi yang dibutuhkan. Data merupakan material dasar sistem informasi yang ditransformasi menjadi bentuk informasi yang berguna bagi pemakai. Process merupakan tugas dan fungsi bisnis yang dilaksanakan oleh user, manager, staff IT untuk menghasilkan tujuan secara lebih spesifik. People merupakan pengguna, baik dari dalam dan luar sebuah perusahaan yang berinteraksi langsung dengan sistem informasi.  Aktifitas dasar dari Sistem Informasi # Aktifitas dasar dari Sistem Informasi menurut Laudon dan Laudon(2012:16) adalah sebagai berikut :\n Input Melibatkan penangkapan atau pengumpulan data mentah dari dalam organisasi atau dari lingkungan ekstemal untuk pengolahan dalam suatu sistem informasi. Process Melibatkan proses mengkonversi input mentah ke bentuk yang lebih bermakna. Output Mentransfer proses informasi kepada orang yang akan menggunakannya atau kepada aktivitas yang akan digunakan. Feedback Output yang dikembalikan ke anggota organisasi yang sesuai untuk kemudian membantu mengevaluasi atau mengoreksi tahap Input.  Pengertian Sistem Informasi Manajemen # 1.Menurut Laudon dan Laudon (2012:29) # Studi tentang sistem informasi manajemen (MIS) menggabungkan karya ilmu komputer, ilmu manajemen, dan riset operasi dengan orientasi praktis terhadap pengembangan solusi sistem untuk masalah dunia nyata dan mengelola sumberdaya teknologi informasi. Hal ini juga terkait dengan perilaku isu seputar pengembangan, penggunaan, dan dampak dari sistem informasi, yang biasanya dibahas dalam bidang sosiologi, ekonomi, dan psikologi.\n2. Menurut Stairs dan Reynolds (2010:22) # Sistem Informasi Manajemen merupakan kumpulan yang terorganisir dari orang, prosedur, software, database dan perangkat dengan tujuan menghasilkan informasi untuk para manager dan pengambil keputusan.\n3. Menurut O’Brien dan Marakas (2011:15) # Sistem Informasi Manajemen merupakan sistem pendukung manajemen yang menghasilkan laporan, tampilan dan respon yang telah di spesifikasi secara periodik, khusus berdasarkan atas permintaan atau dengan basis pelaporan yang wajib\n4. Menurut Valacich dan Schneider (2012:30,513) # Sistem Informasi Manajemen merupakan suatu sistem informasi yang dirancang untuk mendukung pengelolaan fungsi organisasi pada manajerial tingkat organisasi. Dalam bidang keilmuan, Sistem Informasi Manajemen merupakan sebuah bidang studi yang meliputi pengembangan, penggunaan, pengelolaan, dan studi sistem informasi berbasis komputer dalam organisasi.\nPenutup # itu dia beberapa pengertian Pengertian Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen yang di kutip dari pendapat ahli 😀. Cara pengutipan sebaiknya sesuaikan dengan panduan penulisan karya ilmiah anda dan jangan lupa tambahkan pendapat/ simpulan anda pada setiap pengertian tersebut. OK, selamat menulis ria dan semoga bermanfaat.\nReferensi # Laudon., Kenneth C, Laudon., Jane P, (2012), “Management Information Systems: Managing The Digital Firm, Twelfth Edition”, Prentice Hall Inc., New Jersey.\nOz, Effy., (2009), “Management Information Systems,Sixth Edition”, Cengage Learning, Boston.\nSatzinger, John., Jackson, Robert., Burd, Stephen., (2009), “Systems Analysis and Design in a Changing World, Fifth Edition”, Cengage Learning, Boston.\nShelly, B Shelly., Rosenblatt, Harry J., (2008) ”Systems Analysis and Design, Ninth Edition”, Cengage Learning, Boston.\nValacich, Joseph S., George , Joey F., Hover, Jeffrey A.,(2012), “Essentials of Systems Analysis and Design”, Prentice Hall Inc., New Jersey.\nValacich, Joseph S., Schneider Christoph., (2012), “Information Systems Today: Managing in the Digital World”, Prentice Hall Inc., New Jersey.\nStair, Ralph M., Reynolds, George W., (2010), \u0026ldquo;Principles of Information Systems A Managerial Approach Ninth Edition\u0026rdquo;, Cengage Learning, Boston.\nO’Brien, James A., Marakas, Maracas A.,(2011), \u0026ldquo;Management Information Systems\u0026rdquo; McGraw-Hill, New York\nBecerra-Fernandez., Irma, Sabherwal., Rajiv (2010),\u0026ldquo;Knowledge Management: Systems and Processes\u0026rdquo;, M E Sharpe Inc., New York\n👻 Semua refrensi (textbook) diatas dalam bentuk softcopy, jika anda membutuhkan silakan contact saya karena tidak etis jika saya share disini.\n"}),a.add({id:10,href:"/coretanku/pengalaman-terbang-dengan-pesawat-capung/",title:"Pengalaman terbang dengan pesawat 'capung'",description:"Pengalaman terbang dengan pesawat 'capung'. Ceritaku tentang pertama kali terbang dengan Cessna 208 (SUSI AIR) ke Meulaboh",content:"Terbang dengan Pesawat \u0026lsquo;Capung\u0026rsquo;,..Deg..deg-an juga, soalnya ini pengalaman pertama saya naik pesawat kecil dalam kondisi penerbangan yang cuacanya kurang baik.\nPesawat Capung 😁 # Pesawat \u0026lsquo;capung\u0026rsquo; yang saya maksudkan di sini adalah jenis Cessna 208 (SUSI AIR). Pesawat ini bermesin turboprop tunggal, fixed-gear dan merupakan pesawat regional jarak pendek sayap tinggi (high wing) dan dibangun di Amerika Serikat oleh Cessna. Pesawat terbang bermesin turboprop ini biasanya berkapasitas sembilan penumpang, dan dapat bisa digunakan untuk kargo.\nDalam pekerjaan di salah satu distibutor Rokok, kebetulan saya di tempatkan Regional office yang membawahi beberapa Area Office, yaitu Medan, Banda Aceh, Lhokseumawe, Kisaran, Padang Sidimpuan dan Pematang Siantar, kemudian terdapat Pos yang berada di Nias dan Meulaboh.\nPekerjaan ini terkadang membutuhkan kunjungan ke Area Office dan Pos. Kunjungan yang paling saya hindari adalah ke Pos, karena jauh dan juga transportasi biasanya rada \u0026lsquo;aneh'😀. Perjalanan sebelumnya ke Nias, saya sudah cari schedule dan berbagai alasan agar dapat naik pesawat yang \u0026lsquo;agak besar\u0026rsquo; dan berhasil dengan naik pesawat yang agak besaran, penumpangnya lebih 20 orang.\nTatapi kali ini pas menuju Nagan raya, Meulaboh dan hanya pesawat \u0026lsquo;capung\u0026rsquo; inilah yang memungkinkan karena jadwal pesawat yg \u0026lsquo;agak besaran\u0026rsquo; tidak ada setiap hari, yah terpaksa deh..hehe..tapi ini mungkin pengalaman yang tidak bisa terlupakan, karena pertama kali, cuacanya juga lumayan tidak mendukung, duduk di belakang pilot dan langsung melihat navigasi dan cara pilotnya menerbangkan pesawat.\nTernyata mnerbangkan pesawat itu nggak jauh beda dengan game simulator untuk menerbangkan pesawat yang pernah saya mainkan 😆 padahal di game aja saya mainkan bleum pernah terbang..(ga sabaran sih).\nFoto pesawat di bandara Polonia, sebelum saya naiki # Sewaktu berangkat dari bandara Polonia menuju Nagan raya, penumpangnya aja cuma 7 orang termasuk pilot 2 orang (bule, katanya sih dari jerman, mudah2an bukan anak PKL🤣), pokoknya seperti naik pesawat pribadi, tetapi sekitar 15 menit terbang, wah..wah..bener2 jantungan, nggak ada enaknya sama sekali, orang medan bilang acem mau jatuh aja, goyang kiri kanan, naik turun, trus pilotnya bentar-bentar liat ke sayap.\nTapi itulah nasib baik tadi, sampai juga, tapi kan lumayan menguji iman, 1 jam kayak gitu, yah..mau nggak mau pasti berdoa\u0026hellip;hahaha.\nSetelah tiba Nagan raya, Meulaboh saya sampe kepikiran terus, soalnya besok pulang juga harus naik ini lagi, tiket sudah di pesan Pulang-Pergi.\nTernyata bener cui\u0026hellip;besoknya cerah\u0026hellip;.senang kali rasanya, nyaman bener, bisa liat kiri kanan dan depan. ada juga beberapa video saya rekam dan dipikir2 kayaknya lebih enak dan menantang jika naik pesawat capung kayak gini, nih..foto dan beberapa videonya;\nVideo Awan dari Cesna 208 #  Video Pantai barat Meulaboh dari pesawat I #  Video Pantai barat Meulaboh dari pesawat II #  Video Sebelum mendarat di polonia Medan #  Video Mendarat di polonia Medan #  "}),a.add({id:11,href:"/python/tutorial/pengenalan-python/",title:"Pengenalan Python",description:"Pengenalan bahasa pemrograman python.",content:"Apa itu Python? # Python adalah bahasa pemrograman yang populer. Itu dibuat oleh Guido van Rossum, dan dirilis pada tahun 1991.\nPython digunakan untuk:\n pengembangan web (sisi server), pengembangan perangkat lunak, matematika, skrip sistem.  Python dapat digunakan untuk keperluan apa saja? #  Python dapat digunakan di server untuk membuat aplikasi web. Python dapat digunakan bersama perangkat lunak untuk membuat alur kerja. Python dapat terhubung ke sistem database. Itu juga dapat membaca dan memodifikasi file. Python dapat digunakan untuk menangani data besar dan melakukan matematika yang kompleks. Python dapat digunakan untuk pembuatan prototipe cepat, atau untuk pengembangan perangkat lunak siap produksi.  Mengapa Python? #  Python bekerja pada platform yang berbeda (Windows, Mac, Linux, Raspberry Pi, dll). Python memiliki sintaks sederhana yang mirip dengan bahasa Inggris. Python memiliki sintaks yang memungkinkan pengembang untuk menulis program dengan lebih sedikit baris daripada beberapa bahasa pemrograman lainnya. Python berjalan pada sistem interpreter, artinya kode dapat dieksekusi segera setelah ditulis. Ini berarti bahwa pembuatan prototipe bisa sangat cepat. Python dapat diperlakukan dengan cara prosedural, cara berorientasi objek atau cara fungsional.  Versi Python #  Versi utama terbaru dari Python adalah Python 3, yang akan kita gunakan dalam tutorial ini. Namun, Python 2, meskipun tidak diperbarui dengan apa pun selain pembaruan keamanan, masih cukup populer. Dalam tutorial ini Python akan ditulis dalam editor teks. Dimungkinkan untuk menulis Python dalam Lingkungan Pengembangan Terintegrasi, seperti Thonny, Pycharm, Netbeans atau Eclipse yang sangat berguna saat mengelola koleksi file Python yang lebih besar.  Sintaks Python dibandingkan dengan bahasa pemrograman lain #  Python dirancang agar mudah dibaca, dan memiliki beberapa kesamaan dengan bahasa Inggris dengan pengaruh dari matematika. Python menggunakan baris baru untuk menyelesaikan perintah, berbeda dengan bahasa pemrograman lain yang sering menggunakan titik koma atau tanda kurung. Python bergantung pada tanda kurung, menggunakan spasi, untuk mendefinisikan ruang lingkup; seperti ruang lingkup loop, fungsi dan kelas. Bahasa pemrograman lain sering menggunakan kurung kurawal untuk tujuan ini.  Contoh \u0026lsquo;Hello World\u0026rsquo; dengan Python # print(\u0026quot;Hello, World!\u0026quot;)  "}),a.add({id:12,href:"/python/tutorial/instalasi-python/",title:"Instalasi Python",description:"Memulai bahasa pemrograman python.",content:"Cek Instalasi Python # Untuk memeriksa apakah Anda telah menginstal python pada PC Windows, buka command prompt Windows, atau dari menu Run dengan menekan tombol Winkey + R kemudian ketikkan \u0026lsquo;cmd\u0026rsquo; kemudian tekan enter, selanjutnya ketikkan python --version seperti contoh dibawah:\nC:\\Users\\ Your Name\u0026gt;python --version  Untuk memeriksa apakah Anda telah menginstal python di Linux atau Mac, lalu di linux buka command prompt atau di Mac buka Terminal dan ketik:\npython --version  Instalasi Python # Jika Anda belum menginstal Python, silakan download secara gratis dari situs resminya python.org\nBerikut ini adalah panduan cara instal python di platform Linux, Windows dan Mac OS.\nInstalasi Python pada Linux #  Buka browser, kunjungi http://www.python.org/downloads/source/ Download versi terbaru Python berbentuk file zip untuk Unix/Linux Ekstrak file zip yang baru saja di download Edit file Modules/Setup jika Anda ingin kostumisasi Python Jalankan ./configure script make make install Langkah ini akan menginstal Python di lokasi standar /usr/local/bin dan library di /usr/local/lib/pythonXX dimana XX adalah versi terbaru Python yang anda gunakan.   Beberapa distro (distribution store) dari sistem operasi linux sudah terinstal Python di dalamnya. Jadi Anda tidak perlu menginstalnya lagi.\n Instalasi Python pada Windows #  Buka browser, kunjungi http://www.python.org/downloads/windows/ Buka (klik 2x) file installer python yang baru saja di download Ikuti langkah instalasi sampai selesai  Instalasi Python pada MacOS #  Buka browser, kunjungi http://www.python.org/download/mac/ Download versi terbaru Python untuk Macintosh Buka file yang baru saja di download Ikuti langkah instalasi sampai selesai  "}),a.add({id:13,href:"/python/tutorial/menjalankan-python/",title:"Menjalankan Python",description:"Memulai bahasa pemrograman python.",content:"Untuk menjalankan Python ada banyak cara yang bisa dilakukan. Anda bisa menggunakan shell, terminal atau menggunakan IDE (Integrated Development Environment). Di bawah ini adalah langkah-langkah menjalankan Python dengan cara yang paling mudah.\nCara menjalankan file python di Linux # Buka terminal CTRL+ALT+T Ketik python maka Anda akan masuk ke Python shell. Tuliskan script Python Anda, contoh: print(\u0026quot;Selamat datang di Python\u0026quot;). jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() atau\nGunakan teks editor, misalnya gedit. Buat file baru, dan ketikan script python Anda, contoh: print(\u0026ldquo;Selamat datang di Python\u0026rdquo;). Save As dengan ekstensi .py (contoh: cetak.py). Jalankan file dengan menggunakan Terminal. Buka terminal CTRL+ALT+T. Masuk ke direktori dimana file Python Anda disimpan (contoh: cd /Users/admin/Desktop/). Jalankan script Python dengan menggunakan python diikuti dengan nama file (contoh: python cetak.py). Script Python Anda akan dieksekusi/dijalankan.\nCara menjalankan file python di Windows # Menggunakan Shell Buka IDLE (python shell di windows), Anda bisa mencarinya di tombol START. Tuliskan script Python Anda, contoh: print(\u0026ldquo;Selamat datang di Python\u0026rdquo;). jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Python Shell Windows\nUntuk keluar dari Python shell ketik exit() Menggunakan Script Editor Untuk menjalankan script yang disimpan dalam file, buka IDLE (python shell di windows), Anda bisa mencarinya di tombol START. Klik menu File - New File Tulis script Python pada window yang muncul, contoh: print(\u0026ldquo;Belajar Python\u0026rdquo;) print(\u0026ldquo;di belajarpython.com\u0026rdquo;) Simpan script lewat menu File - Save Jalankan program dengan klik menu Run - Run Module Python Editor Windows\nCara menjalankan file python di Mac OS # Buka terminal. Ketik python maka Anda akan masuk ke Python shell. Tuliskan script Python Anda, contoh: print(\u0026ldquo;Selamat datang di Python\u0026rdquo;). jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() atau\nGunakan teks editor. Buat file baru, dan ketikan script python Anda, contoh: print(\u0026ldquo;Selamat datang di Python\u0026rdquo;). Save As dengan ekstensi .py (contoh: cetak.py). Jalankan file dengan menggunakan Terminal. Buka terminal CTRL+ALT+T Masuk ke direktori dimana file Python Anda disimpan (contoh: cd /Users/admin/Desktop/). Jalankan script Python dengan menggunakan python diikuti dengan nama file (contoh: python cetak.py). Script Python Anda akan dieksekusi/dijalankan.\n"}),a.add({id:14,href:"/python/tutorial/aturan-penulisan/",title:"Aturan Penulisan",description:"Aturan penulisan dalam bahasa pemrograman python.",content:"Syntax bahasa Python hampir sama dengan bahasa pemrograman pada umumnya seperti Java atau PHP.\nSyntax Dasar # Dibawah ini adalah contoh fungsi Python yang digunakan untuk mencetak. Di Python untuk mencetak cukup gunakan fungsi print() , dimana sesuatu yang akan dicetak harus diletakkan diantara kurung buka dan kurung tutup, bahkan di Python versi 2.x Anda tidak harus menggunakan tanda kurung kurawal, cukup pisahkan dengan spasi.\nJika ingin mencetak tipe data String langsung, Anda harus memasukanya ke dalam tanda kutip terlebih dahulu.\nprint(\u0026quot;Hello World\u0026quot;)  Saat anda menjalankan script diatas, Anda akan melihat output berupa text \u0026lsquo;Hello World\u0026rsquo;\nPython Case Sensitivity # Python bersifat case sensitif, ini artinya huruf besar dan huruf kecil memiliki perbedaan. Sebagai contoh jika Anda menggunakan fungsi print dengan huruf kecil print() akan berhasil. Lain hal jika anda menggunakan huruf kapital Print() atau PRINT() , akan muncul pesan error.\nAturan ini berlaku untuk nama variabel ataupun fungsi-fungsi lainnya.\n"}),a.add({id:15,href:"/python/tutorial/komentar-program/",title:"Komentar Program",description:"Komentar program dalam python.",content:"Apa itu komentar program? # Komentar (comment) adalah kode di dalam script Python yang tidak dieksekusi atau tidak dijalankan mesin. Komentar hanya digunakan untuk menandai atau memberikan keterangan tertulis pada script.\nKomentar biasa digunakan untuk membiarkan orang lain memahami apa yang dilakukan script. atau untuk mengingatkan kepada programmer sendiri jika suatu saat kembali mengedit script tersebut.\nUntuk menggunakan komentar anda cukup menulis tanda pagar #, diikuti dengan komentar Anda.\nDibawah ini adalah contoh penggunaan komentar pada Python\nKomentar satu baris # #Ini adalah komentar # Tulisan ini tidak akan dieksekusi #komentar dengan tanda pagar hanya bisa digunakan #untuk #satu #baris  Komentar beberapa baris # \u0026quot;\u0026quot;\u0026quot; Penulisan Komentar lebih dari satu baris yaitu dengan menggunakan kutip dua 3 kali dan ditutup dengan kutip dua 3 kali juga \u0026quot;\u0026quot;\u0026quot; print(\u0026quot;Hello World\u0026quot;) #ini juga komentar #print(\u0026quot;Welcome\u0026quot;) # komentar bisa berisi spesial karakter !@#$%^\u0026amp;*(),./;'[]\\ #mencetak nama print(\u0026quot;Budi\u0026quot;) #mencetak angka/integer print(123)  Saat anda menjalankan script diatas, Anda akan melihat output berupa Hello World, Budi dan 123, karena tulisan/komentar yang ditulis tidak dieksekusi.\n"}),a.add({id:16,href:"/python/tutorial/tipe-data/",title:"Tipe data",description:"Tipe data.",content:"Apa itu tipe data? # Tipe data adalah suatu media atau memori pada komputer yang digunakan untuk menampung informasi.\nPython sendiri mempunyai tipe data yang cukup unik bila kita bandingkan dengan bahasa pemrograman yang lain.\nBerikut adalah tipe data dari bahasa pemrograman Python :\n   Tipe Data Contoh Penjelasan     Boolean True atau False Menyatakan benar True yang bernilai 1, atau salah False yang bernilai 0   String \u0026ldquo;Ayo belajar Python\u0026rdquo; Menyatakan karakter/kalimat bisa berupa huruf angka, dll (diapit tanda \u0026quot; atau \u0026lsquo;)   Integer 25 atau 1209 Menyatakan bilangan bulat   Float 3.14 atau 0.99 Menyatakan bilangan yang mempunyai koma   Hexadecimal 9a atau 1d3 Menyatakan bilangan dalam format heksa (bilangan berbasis 16)   Complex 1 + 5j Menyatakan pasangan angka real dan imajiner   List [\u0026lsquo;xyz\u0026rsquo;, 786, 2.23] Data untaian yang menyimpan berbagai tipe data dan isinya bisa diubah-ubah   Tuple (\u0026lsquo;xyz\u0026rsquo;, 768, 2.23) Data untaian yang menyimpan berbagai tipe data tapi isinya tidak bisa diubah   Dictionary {\u0026lsquo;nama\u0026rsquo;: \u0026lsquo;adi\u0026rsquo;,\u0026lsquo;id\u0026rsquo;:2} Data untaian yang menyimpan berbagai tipe data berupa pasangan penunjuk dan nilai    Untuk mencoba berbagai macam tipe data, silahkan coba script Python dibawah ini.\n#tipe data Boolean print(True) #tipe data String print(\u0026quot;Ayo belajar Python\u0026quot;) print('Belajar Python Sangat Mudah') #tipe data Integer print(20) #tipe data Float print(3.14) #tipe data Hexadecimal print(9a) #tipe data Complex print(5j) #tipe data List print([1,2,3,4,5]) print([\u0026quot;satu\u0026quot;, \u0026quot;dua\u0026quot;, \u0026quot;tiga\u0026quot;]) #tipe data Tuple print((1,2,3,4,5)) print((\u0026quot;satu\u0026quot;, \u0026quot;dua\u0026quot;, \u0026quot;tiga\u0026quot;)) #tipe data Dictionary print({\u0026quot;nama\u0026quot;:\u0026quot;Budi\u0026quot;, 'umur':20}) #tipe data Dictionary dimasukan ke dalam variabel biodata biodata = {\u0026quot;nama\u0026quot;:\u0026quot;Andi\u0026quot;, 'umur':21} #proses inisialisasi variabel biodata print(biodata) #proses pencetakan variabel biodata yang berisi tipe data Dictionary print(type(biodata)) #fungsi untuk mengecek jenis tipe data. akan tampil \u0026lt;class 'dict'\u0026gt; yang berarti dict adalah tipe data dictionary  "}),a.add({id:17,href:"/python/tutorial/variabel/",title:"Variabel dalam Python",description:"Variabel dalam Python.",content:"Apa itu variabel? # Variabel adalah lokasi memori yang dicadangkan untuk menyimpan nilai-nilai. Ini berarti bahwa ketika Anda membuat sebuah variabel Anda memesan beberapa ruang di memori. Variabel menyimpan data yang dilakukan selama program dieksekusi, yang nantinya isi dari variabel tersebut dapat diubah oleh operasi - operasi tertentu pada program yang menggunakan variabel.\nVariabel dapat menyimpan berbagai macam tipe data. Di dalam pemrograman Python, variabel mempunyai sifat yang dinamis, artinya variabel Python tidak perlu didekralasikan tipe data tertentu dan variabel Python dapat diubah saat program dijalankan.\nPenulisan Variabel # Penulisan variabel Python sendiri juga memiliki aturan tertentu, yaitu :\n Karakter pertama harus berupa huruf atau garis bawah/underscore _ Karakter selanjutnya dapat berupa huruf, garis bawah/underscore _ atau angka Karakter pada nama variabel bersifat sensitif (case-sensitif). Artinya huruf kecil dan huruf besar dibedakan. Sebagai contoh, variabel namaDepan dan namadepan adalah variabel yang berbeda. Untuk mulai membuat variabel di Python caranya sangat mudah, Anda cukup menuliskan variabel lalu mengisinya dengan suatu nilai dengan cara menambahkan tanda sama dengan = diikuti dengan nilai yang ingin dimasukan.  Contoh Penulisan Variabel # Dibawah ini adalah contoh penggunaan variabel dalam bahasa pemrograman Python\n#proses memasukan data ke dalam variabel nama = \u0026quot;John Doe\u0026quot; #proses mencetak variabel print(nama) #nilai dan tipe data dalam variabel dapat diubah umur = 20 #nilai awal print(umur) #mencetak nilai umur type(umur) #mengecek tipe data umur umur = \u0026quot;dua puluh satu\u0026quot; #nilai setelah diubah print(umur) #mencetak nilai umur type(umur) #mengecek tipe data umur namaDepan = \u0026quot;Budi\u0026quot; namaBelakang = \u0026quot;Susanto\u0026quot; nama = namaDepan + \u0026quot; \u0026quot; + namaBelakang umur = 22 hobi = \u0026quot;Berenang\u0026quot; print(\u0026quot;Biodata\\n\u0026quot;, nama, \u0026quot;\\n\u0026quot;, umur, \u0026quot;\\n\u0026quot;, hobi) #contoh variabel lainya inivariabel = \u0026quot;Halo\u0026quot; ini_juga_variabel = \u0026quot;Hai\u0026quot; _inivariabeljuga = \u0026quot;Hi\u0026quot; inivariabel222 = \u0026quot;Bye\u0026quot; panjang = 10 lebar = 5 luas = panjang * lebar print(luas)  "}),a.add({id:18,href:"/python/tutorial/operator/",title:"Operator di dalam Python",description:"Operator dalam Python.",content:"Apa itu Operator? # Operator adalah konstruksi yang dapat memanipulasi nilai dari operan.\nSebagai contoh operasi 4 + 5 = 9. Disini 4 dan 5 adalah operan dan + adalah operator.\nOperator Aritmatika #    Operator Contoh Penjelasan     Penjumlahan + 1 + 3 = 4 Menjumlahkan nilai dari masing-masing operan atau bilangan   Pengurangan - 4 - 1 = 3 Mengurangi nilai operan di sebelah kiri menggunakan operan di sebelah kanan   Perkalian * 2 * 4 = 8 Mengalikan operan/bilangan   Pembagian / 10 / 5 = 2 Untuk membagi operan di sebelah kiri menggunakan operan di sebelah kanan   Sisa Bagi % 11 % 2 = 1 Mendapatkan sisa pembagian dari operan di sebelah kiri operator ketika dibagi oleh operan di sebelah kanan   Pangkat ** 8 ** 2 = 64 Memangkatkan operan disebelah kiri operator dengan operan di sebelah kanan operator   Pembagian Bulat // 10 // 3 = 3 Sama seperti pembagian. Hanya saja angka dibelakang koma dihilangkan    Dibawah ini adalah contoh penggunaan Operator Aritmatika dalam bahasa pemrograman Python\n#OPERATOR ARITMATIKA #Penjumlahan print(13 + 2) apel = 7 jeruk = 9 buah = apel + jeruk # print(buah) #Pengurangan hutang = 10000 bayar = 5000 sisaHutang = hutang - bayar print(\u0026quot;Sisa hutang Anda adalah \u0026quot;, sisaHutang) #Perkalian panjang = 15 lebar = 8 luas = panjang * lebar print(luas) #Pembagian kue = 16 anak = 4 kuePerAnak = kue / anak print(\u0026quot;Setiap anak akan mendapatkan bagian kue sebanyak \u0026quot;, kuePerAnak) #Sisa Bagi / Modulus bilangan1 = 14 bilangan2 = 5 hasil = bilangan1 % bilangan2 print(\u0026quot;Sisa bagi dari bilangan \u0026quot;, bilangan1, \u0026quot; dan \u0026quot;, bilangan2, \u0026quot; adalah \u0026quot;, hasil) #Pangkat bilangan3 = 8 bilangan4 = 2 hasilPangkat = bilangan3 ** bilangan4 print(hasilPangkat) #Pembagian Bulat print(10//3) #10 dibagi 3 adalah 3.3333. Karena dibulatkan maka akan menghasilkan nilai 3  Operator Perbandingan # Operator perbandingan (comparison operators) digunakan untuk membandingkan suatu nilai dari masing-masing operan.\n   Operator Contoh Penjelasan     Sama dengan == 1 == 1 bernilai True Jika masing-masing operan memiliki nilai yang sama, maka kondisi bernilai benar atau True.   Tidak sama dengan != 2 != 2 bernilai False Akan menghasilkan nilai kebalikan dari kondisi sebenarnya.   Tidak sama dengan \u0026lt;\u0026gt; 2 \u0026lt;\u0026gt; 2 bernilai False Akan menghasilkan nilai kebalikan dari kondisi sebenarnya.   Lebih besar dari \u0026gt; 5 \u0026gt; 3 bernilai True Jika nilai operan kiri lebih besar dari nilai operan kanan, maka kondisi menjadi benar.   Lebih kecil dari \u0026lt; 5 \u0026lt; 3 bernilai True Jika nilai operan kiri lebih kecil dari nilai operan kanan, maka kondisi menjadi benar.   Lebih besar atau sama dengan \u0026gt;= 5 \u0026gt;= 3 bernilai True Jika nilai operan kiri lebih besar dari nilai operan kanan, atau sama, maka kondisi menjadi benar.   Lebih kecil atau sama dengan \u0026lt;= 5\u0026lt;= 3 bernilai True Jika nilai operan kiri lebih kecil dari nilai operan kanan, atau sama, maka kondisi menjadi benar.    Operator Penugasan # Operator penugasan digunakan untuk memberikan atau memodifikasi nilai ke dalam sebuah variabel.\n   Operator Contoh Penjelasan     Sama dengan = a = 1 Memberikan nilai di kanan ke dalam variabel yang berada di sebelah kiri.   Tambah sama dengan += a += 2 Memberikan nilai variabel dengan nilai variabel itu sendiri ditambah dengan nilai di sebelah kanan.   Kurang sama dengan -= a -= 2 Memberikan nilai variabel dengan nilai variabel itu sendiri dikurangi dengan nilai di sebelah kanan.   Kali sama dengan *= a *= 2 Memberikan nilai variabel dengan nilai variabel itu sendiri dikali dengan nilai di sebelah kanan.   Bagi sama dengan /= a /= 4 Memberikan nilai variabel dengan nilai variabel itu sendiri dibagi dengan nilai di sebelah kanan.   Sisa bagi sama dengan %= a %= 3 Memberikan nilai variabel dengan nilai variabel itu sendiri dibagi dengan nilai di sebelah kanan. Yang diambil nantinya adalah sisa baginya.   Pangkat sama dengan **= a **= 3 Memberikan nilai variabel dengan nilai variabel itu sendiri dipangkatkan dengan nilai di sebelah kanan.   Pembagian bulat sama dengan //= a //= 3 Membagi bulat operan sebelah kiri operator dengan operan sebelah kanan operator kemudian hasilnya diisikan ke operan sebelah kiri.    Prioritas Eksekusi Operator di Python # Dari semua operator diatas, masing-masing mempunyai urutan prioritas yang nantinya prioritas pertama akan dilakukan paling pertama, begitu seterusnya sampai dengan prioritas terakhir.\n   Operator Keterangan     ** Aritmatika   ~, +, - Bitwise   *, /, %, // Aritmatika   +, -	 Aritmatika   \\\u0026gt;\u0026gt;, \\\u0026lt;\u0026lt; Bitwise   \u0026amp; Bitwise   ^, |	 Bitwise   \u0026lt;=, \u0026lt;, \u0026gt;, \u0026gt;=	 Perbandingan   \u0026lt;\u0026gt; , ==, !=	 Perbandingan   =, %=, /=, //=, -=, +=, *=, **= Penugasan   is, is not Identitas   in, not in Membership (Keanggotaan)   not, or, and Logika    "}),a.add({id:19,href:"/python/tutorial/kondisi/",title:"Kondisi di dalam Python",description:"Kondisi dalam Python.",content:"Kondisi If # Pengambilan keputusan (kondisi if) digunakan untuk mengantisipasi kondisi yang terjadi saat jalanya program dan menentukan tindakan apa yang akan diambil sesuai dengan kondisi.\nPada python ada beberapa statement/kondisi diantaranya adalah if, else dan elif Kondisi if digunakan untuk mengeksekusi kode jika kondisi bernilai benar True.\nJika kondisi bernilai salah False maka statement/kondisi if tidak akan di-eksekusi.\nDibawah ini adalah contoh penggunaan kondisi if pada Python\n#Kondisi if adalah kondisi yang akan dieksekusi oleh program jika bernilai benar atau TRUE nilai = 9 #jika kondisi benar/TRUE maka program akan mengeksekusi perintah dibawahnya if(nilai \u0026gt; 7): print(\u0026quot;Sembilan Lebih Besar Dari Angka Tujuh\u0026quot;) # Kondisi Benar, Dieksekusi #jika kondisi salah/FALSE maka program tidak akan mengeksekusi perintah dibawahnya if(nilai \u0026gt; 10): print(\u0026quot;Sembilan Lebih Besar Dari Angka Sepuluh\u0026quot;) # Kondisi Salah, Maka tidak tereksekusi  Dari contoh diatas, jika program dijalankan maka akan mencetak string \u0026ldquo;Sembilan Lebih Besar Dari Angka Tujuh\u0026rdquo; sebanyak 1 kali yaitu pada if pertama. Di if kedua statement bernilai salah, jadi perintah print(\u0026ldquo;Sembilan Lebih Besar Dari Angka Sepuluh\u0026rdquo;) tidak akan dieksekusi.\nKondisi If Else # Pengambilan keputusan (kondisi if else) tidak hanya digunakan untuk menentukan tindakan apa yang akan diambil sesuai dengan kondisi, tetapi juga digunakan untuk menentukan tindakan apa yang akan diambil/dijalankan jika kondisi tidak sesuai.\nPada python ada beberapa statement/kondisi diantaranya adalah if, else dan elif Kondisi if digunakan untuk mengeksekusi kode jika kondisi bernilai benar.\nKondisi if else adalah kondisi dimana jika pernyataan benar True maka kode dalam if akan dieksekusi, tetapi jika bernilai salah False maka akan mengeksekusi kode di dalam else.\nDibawah ini adalah contoh penggunaan kondisi if else pada Python\n#Kondisi if else adalah jika kondisi bernilai TRUE maka akan dieksekusi pada if, tetapi jika bernilai FALSE maka akan dieksekusi kode pada else nilai = 3 #Jika pernyataan pada if bernilai TRUE maka if akan dieksekusi, tetapi jika FALSE kode pada else yang akan dieksekusi. if(nilai \u0026gt; 7): print(\u0026quot;Selamat Anda Lulus\u0026quot;) else: print(\u0026quot;Maaf Anda Tidak Lulus\u0026quot;)  Pada contoh diatas, jika program dijalankan maka akan mencetak string \u0026ldquo;Maaf Anda Tidak Lulus\u0026rdquo; karena pernyataan pada if bernilai False\nKondisi Elif # Pengambilan keputusan (kondisi if elif) merupakan lanjutan/percabangan logika dari “kondisi if”. Dengan elif kita bisa membuat kode program yang akan menyeleksi beberapa kemungkinan yang bisa terjadi. Hampir sama dengan kondisi “else”, bedanya kondisi “elif” bisa banyak dan tidak hanya satu.\nDibawah ini adalah contoh penggunaan kondisi elif pada Python\n#Contoh penggunaan kondisi elif hari_ini = \u0026quot;Minggu\u0026quot; if(hari_ini == \u0026quot;Senin\u0026quot;): print(\u0026quot;Saya akan kuliah\u0026quot;) elif(hari_ini == \u0026quot;Selasa\u0026quot;): print(\u0026quot;Saya akan kuliah\u0026quot;) elif(hari_ini == \u0026quot;Rabu\u0026quot;): print(\u0026quot;Saya akan kuliah\u0026quot;) elif(hari_ini == \u0026quot;Kamis\u0026quot;): print(\u0026quot;Saya akan kuliah\u0026quot;) elif(hari_ini == \u0026quot;Jumat\u0026quot;): print(\u0026quot;Saya akan kuliah\u0026quot;) elif(hari_ini == \u0026quot;Sabtu\u0026quot;): print(\u0026quot;Saya akan kuliah\u0026quot;) elif(hari_ini == \u0026quot;Minggu\u0026quot;): print(\u0026quot;Saya akan libur\u0026quot;)  Pada contoh diatas, jika program dijalankan maka akan mencetak string \u0026ldquo;Saya akan libur\u0026rdquo;.\n"}),a.add({id:20,href:"/python/tutorial/perulangan/",title:"Perulangan di dalam Python",description:"Perulangan dalam Python.",content:"Apa itu loop? # Secara umum, pernyataan pada bahasa pemrograman akan dieksekusi secara berurutan. Pernyataan pertama dalam sebuah fungsi dijalankan pertama, diikuti oleh yang kedua, dan seterusnya. Tetapi akan ada situasi dimana Anda harus menulis banyak kode, dimana kode tersebut sangat banyak. Jika dilakukan secara manual maka Anda hanya akan membuang-buang tenaga dengan menulis beratus-ratus bahkan beribu-ribu kode. Untuk itu Anda perlu menggunakan pengulangan di dalam bahasa pemrograman Python.\nJenis loop dalam Python # Di dalam bahasa pemrograman Python pengulangan dibagi menjadi 3 bagian, yaitu :\n While Loop For Loop Nested Loop  While Loop # Pengulangan While Loop di dalam bahasa pemrograman Python dieksesusi statement berkali-kali selama kondisi bernilai benar atau True.\nDibawah ini adalah contoh penggunaan pengulangan While Loop.\n#Contoh penggunaan While Loop #Catatan: Penentuan ruang lingkup di Python bisa menggunakan tab alih-alih menggunakan tanda kurung count = 0 while (count \u0026lt; 9): print (\u0026quot;The count is: \u0026quot;, count) count = count + 1 print (\u0026quot;Good bye!\u0026quot;)  For Loop # Pengulangan for pada Python memiliki kemampuan untuk mengulangi item dari urutan apapun, seperti list atau string.\nDibawah ini adalah contoh penggunaan pengulangan For Loop.\n#Contoh pengulangan for sederhana angka = [1,2,3,4,5] for x in angka: print(x) #Contoh pengulangan for buah = [\u0026quot;nanas\u0026quot;, \u0026quot;apel\u0026quot;, \u0026quot;jeruk\u0026quot;] for makanan in buah: print (\u0026quot;Saya suka makan\u0026quot;, makanan)  Nested Loop # Bahasa pemrograman Python memungkinkan penggunaan satu lingkaran di dalam loop lain. Bagian berikut menunjukkan beberapa contoh untuk menggambarkan konsep tersebut.\nDibawah ini adalah contoh penggunaan Nested Loop.\n#Contoh penggunaan Nested Loop #Catatan: Penggunaan modulo pada kondisional mengasumsikan nilai selain nol sebagai True(benar) dan nol sebagai False(salah) i = 2 while(i \u0026lt; 100): j = 2 while(j \u0026lt;= (i/j)): if not(i%j): break j = j + 1 if (j \u0026gt; i/j) : print(i, \u0026quot; is prime\u0026quot;) i = i + 1 print(\u0026quot;Good bye!\u0026quot;)  "}),a.add({id:21,href:"/python/tutorial/number/",title:"Number di dalam Python",description:"Kondisi dalam Python.",content:"Number adalah tipe data Python yang menyimpan nilai numerik. Number adalah tipe data yang tidak berubah. Ini berarti, mengubah nilai dari sejumlah tipe data akan menghasilkan objek yang baru dialokasikan.\nObjek Number dibuat saat Anda memberikan nilai pada-nya. Sebagai contoh : angkaPertama = 1 angkaKedua = 33\nPython mendukung beberapa tipe data Number diantaranya :\nInt Float Complex Berikut ini adalah beberapa contoh dari Tipe data Number pada Python :\nInt	Float	Complex 20	0.1	3.14j 300	1.20	35.j -13	-41.2	3.12e-12j 020	32.23+e123	.873j -0103	-92.	-.123+0J -0x212	-32.52e10	3e+123J 0x56	60.2-E13	4.31e-4j Konversi Tipe Data Number Python Pada Python Anda bisa mengkonversi tipe data dengan menggunakan fungsi. Dibawah ini adalah beberapa fungsi untuk mengkonversi tipe data number Python.\nint(x) untuk meng-konversi x menjadi plain integer. long(x) untuk meng-konversi x menjadi long integer. float(x) untuk meng-konversi x menjadi floating point number. complex(x) untuk meng-konversi x menjadi complex number dengna real part x dan imaginary part zero. complex(x, y) untuk meng-konversi x dan y menjadi complex number dengan real part x dan imaginary part y. x dan numeric expressions y. Fungsi Matematika Python Pada bahasa pemrograman Python terdapat fungsi untuk melakukan perhitungan matematis, berikut adalah daftarnya :\nNama	Penggunaan	Penjelasan Absolute	abs(x)	Nilai absolut dari x:(positive) jarak antara x and 0. Ceiling	ceil(x)	Ceiling dari x: integer terkecil yang kurang dari x. Cmp	cmp(x, y)	-1 if x \u0026lt; y, 0 if x == y, or 1 if x \u0026gt; y. Tidak berlaku lagi dengan Python 3. Sebaliknya gunakan return (x\u0026gt;y)-(x Eksponen	exp(x)	Nilai eksponen dari x: ex Fabs	fabs(x)	Nilai absolut dari x. Floor	floor(x)	Nilai dasar dari x: internet terbesar tidak lebih besar dari x. Log	log(x)	Logaritma dari x, untuk x \u0026gt; 0. Log 10	log10(x)	Basis 10 logaritma dari x, untuk x \u0026gt; 0. Max	max(x1, x2,\u0026hellip;)	Argumen terbesar: Nilai terdekat dengan tak terhingga positif Min	min(x1, x2,\u0026hellip;)	Argumen terkecil: nilai yang paling mendekati tak berhingga negatif. Modf	modf(x)	Bagian pecahan dan bilangan bulat dari x dalam tupel dua item. Kedua bagian memiliki tanda yang sama dengan x. Bagian integer dikembalikan sebagai float. Pow	pow(x, y)	Nilai x ** y. Round	round(x [,n])	X dibulatkan menjadi n digit dari titik desimal. Putaran Python jauh dari nol sebagai tie-breaker: round (0.5) adalah 1.0 dan round (-0.5) adalah -1.0. Akar Kuadrat	sqrt(x)	Akar kuadrat x untuk x\u0026gt; 0. Fungsi Nomor Acak Python Nomor acak digunakan untuk aplikasi permainan, simulasi, pengujian, keamanan, dan privasi. Python mencakup fungsi berikut yang umum digunakan. Berikut adalah daftarnya :\nNama	Penggunaan	Penjelasan Choice	choice(seq)	Item acak dari list, tuple, atau string. RandRange	randrange ([start,] stop [,step])	Elemen yang dipilih secara acak dari jangkauan (start, stop, step). Random	random()	A random float r, sehingga 0 kurang dari atau sama dengan r dan r kurang dari 1 Seed	seed([x])	Menetapkan nilai awal integer yang digunakan dalam menghasilkan bilangan acak. Panggil fungsi ini sebelum memanggil fungsi modul acak lainnya. Tidak ada pengembalian Shuffle	shuffle(lst)	Mengacak daftar dari daftar di tempat. Tidak ada pengembalian Floor	floor(x)	The floor of x: the largest integer not greater than x. Uniform	uniform(x, y)	Sebuah float acak r, sedemikian rupa sehingga x kurang dari atau sama dengan r dan r kurang dari y. Fungsi Trigonometri Python Python mencakup fungsi berikut yang melakukan perhitungan trigonometri. Berikut adalah daftarnya :\nNama	Penggunaan Penjelasan Acos	acos(x)	Kembalikan kosinus x, di radian. Asin	asin(x)	Kembalikan busur sinus x, dalam radian. Atan	atan(x)	Kembalikan busur singgung x, di radian. Atan 2	atan2(y, x)	Kembali atan (y / x), di radian. Kosinus	cos(x)	Kembalikan kosinus x radian. Hypot	hypot(x, y)	Kembalikan norma Euclidean, sqrt (x * x + y * y). Sin	sin(x)	Kembalikan sinus dari x radian. Tan	tan(x)	Kembalikan tangen x radian. Derajat	degrees(x)	Mengonversi sudut x dari radian ke derajat. Radian	radians(x)	Mengonversi sudut x dari derajat ke radian. Konstanta Matematika Python Modul ini juga mendefinisikan dua konstanta matematika. Berikut adalah daftarnya :\nNama	Penggunaan	Penjelasan Pi	pi	Konstanta Pi matematika e	e	Konstanta e matematika\n"}),a.add({id:22,href:"/python/tutorial/string/",title:"String di dalam Python",description:"Kondisi dalam Python.",content:"String adalah jenis yang paling populer di bahasa pemrograman. Kita bisa membuatnya hanya dengan melampirkan karakter dalam tanda kutip. Python memperlakukan tanda kutip tunggal sama dengan tanda kutip ganda. Membuat string semudah memberi nilai pada sebuah variabel.\nDibawah ini adalah contoh sederhana dari sebuah string pada bahasa pemrograman Python.\nprint(\u0026ldquo;Hello World\u0026rdquo;) Mengakses Nilai dalam String Python tidak menggunakan tipe karakter titik koma ; Ini diperlakukan sebagai string dengan panjang satu, sehingga juga dianggap sebagai substring.\nUntuk mengakses substring, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan substring Anda. Sebagai contoh :\nname = \u0026lsquo;John Doe\u0026rsquo; message = \u0026ldquo;John Doe belajar bahasa python di Belajarpython\u0026rdquo; print (\u0026ldquo;name[0]: \u0026ldquo;, name[0]) print (\u0026ldquo;message[1:4]: \u0026ldquo;, message[1:4]) Bila kode diatas dieksekusi, maka akan menghasilkan hasil sebagai berikut :\nname[0]: J message[1:4]: ohn\nMengupdate String Anda dapat “memperbarui” string yang ada dengan (kembali) menugaskan variabel ke string lain. Nilai baru dapat dikaitkan dengan nilai sebelumnya atau ke string yang sama sekali berbeda sama sekali. Sebagai contoh\nmessage = \u0026lsquo;Hello World\u0026rsquo; print (\u0026ldquo;Updated String :- \u0026ldquo;, message[:6] + \u0026lsquo;Python\u0026rsquo;) Bila kode diatas dieksekusi, maka akan menghasilkan hasil sebagai berikut :\nUpdated String :- Hello Python\nEscape Characters / Karakter Escape Python Dibawah ini adalah tabel dari daftar karakter escape atau karakter non-printable yang dapat diwakili/ditulis dengan awalan notasi backslash.\nNotasi Backslash	Karakter Hexadecimal	Penjelasan \\a	0x07	Bell atau alert \\b	0x08	Backspace \\cx	Control-x \\C-x	Control-x \\e	0x1b	Escape \\f	0x0c	Formfeed \\M-\\C-x	Meta-Control-x \\n	0x0a	Newline \\nnn	Octal notation, dimana n berada di range 0.7 \\r	0x0d	Carriage return \\s	0x20	Space \\t	0x09	Tab \\v	0x0b	Vertical tab \\x	Character x \\xnn	Notasi Hexadecimal, dimana n berada di range 0.9, a.f, atau A.F Operator Spesial String Python Asumsikan variabel string adalah ‘Belajar’ dan variabel b adalah ‘Python’, lalu dibawah ini adalah operator yang bisa dipakai pada kedua string di variabel tersebut. a = \u0026ldquo;Belajar\u0026rdquo; b = \u0026ldquo;Python\u0026rdquo;\nBerikut adalah daftar operator spesial string pada Python :\nOperator	Contoh Penjelasan\n a + b	akan menghasilkan BelajarPython Concatenation - Menambahkan nilai pada kedua sisi operator   a*2	akan menghasilkan BelajarBelajar Pengulangan - Membuat string baru, menggabungkan beberapa salinan dari string yang sama []	a[1]	akan menghasilkan e Slice - Memberikan karakter dari indeks yang diberikan [ : ]	a[1:4]	akan menghasilkan ela Range Slice - Memberikan karakter dari kisaran yang diberikan in	B in a	akan menghasilkan 1 Keanggotaan - Mengembalikan nilai true jika ada karakter dalam string yang diberikan not in	Z not in a	akan menghasilkan 1 Keanggotaan - Mengembalikan nilai true jika karakter tidak ada dalam string yang diberikan r/R	print r’\\n’ prints \\n dan print R’\\n’prints \\n Raw String -	Menekan arti aktual karakter Escape. Sintaks untuk string mentah sama persis dengan string biasa kecuali operator string mentah, huruf “r”, yang mendahului tanda petik. “R” bisa berupa huruf kecil (r) atau huruf besar (R) dan harus ditempatkan tepat sebelum tanda kutip pertama. %	Format - Melakukan format String Operator Format String Python Salah satu fitur Python yang paling keren adalah format string operator %. Operator ini unik untuk string dan membuat paket memiliki fungsi dari keluarga printf C () C. berikut adalah contoh sederhananya : print (\u0026ldquo;My name is %s and weight is %d kg!\u0026rdquo; % (\u0026lsquo;Zara\u0026rsquo;, 21))  Berikut adalah daftar lengkap simbol yang bisa digunakan bersamaan dengan % :\nOperator	Penjelasan %c	character %s	Konversi string melalui str () sebelum memformat %i	Dianggap sebagai bilangan bulat desimal %d	Dianggap sebagai bilangan bulat desimal %u	Unsigned decimal integer %o	Bilangan bulat oktal %x	Bilangan bulat heksadesimal (huruf kecil) %X	Bilangan bulat heksadesimal (huruf besar) %e	Notasi eksponensial (dengan huruf kecil ‘e’) %E	Notasi eksponensial (dengan huruf besar ‘E’) %f	Bilangan real floating point %g	Yang lebih pendek dari% f dan% e %G	Lebih pendek dari% f dan% E Triple Quote Python Python triple quotes digunakan dengan membiarkan string untuk ditulis dalam beberapa baris, termasuk kata kerja NEWLINEs, TABs, dan karakter khusus lainnya. Sintaks untuk triple quotes terdiri dari tiga tanda kutip tunggal atau ganda ditulis berturut-turut : Berikut adalah contohnya :\nkutipantiga = \u0026ldquo;\u0026ldquo;\u0026ldquo;this is a long string that is made up of several lines and non-printable characters such as TAB ( \\t ) and they will show up that way when displayed. NEWLINEs within the string, whether explicitly given like this within the brackets [ \\n ], or just a NEWLINE within the variable assignment will also show up. \u0026quot;\u0026rdquo;\u0026rdquo; print (kutipantiga) String Unicode Python Pada Python 3, semua string diwakili dalam Unicode. Sedangkan pada Python 2 disimpan secara internal sebagai 8-bit ASCII, maka diperlukanlampiran ‘u’ untuk membuatnya menjadi Unicode. Tetapi hal ini tidak lagi diperlukan sekarang. :\nMetode String Built-in\nPython menyertakan metode built-in berikut untuk memanipulasi string\nMetode	Penjelasan capitalize()	Meng-kapitalkan huruf pertama string center(width, fillchar)	Mengembalikan string yang dilapisi dengan fillchar dengan string asli yang dipusatkan pada total width kolom. count(str, beg = 0,end = len(string))	Menghitung berapa kali str yang terjadi dalam string atau dalam substring string jika memulai indeks beg dan end index end diberikan. decode(encoding = \u0026lsquo;UTF-8\u0026rsquo;,errors = \u0026lsquo;strict\u0026rsquo;)	Dekode string menggunakan codec yang terdaftar untuk pengkodean. Encoding default ke pengkodean string default. encode(encoding = \u0026lsquo;UTF-8\u0026rsquo;,errors = \u0026lsquo;strict\u0026rsquo;)	Mengembalikan versi string yang dikodekan string; Pada kesalahan, default adalah menaikkan ValueError kecuali jika kesalahan diberikan dengan ‘ignore’ atau ‘replace’. endswith(suffix, beg = 0, end = len(string))	Menentukan apakah string atau substring string (jika memulai indeks memohon dan mengakhiri akhir indeks diberikan) berakhir dengan akhiran; Mengembalikan nilai true jika benar dan salah. expandtabs(tabsize = 8)	Memperluas tab dalam string ke banyak ruang; Default ke 8 spasi per tab jika tabsize tidak tersedia. find(str, beg = 0 end = len(string))	Tentukan jika str terjadi dalam string atau dalam substring string jika memulai indeks beg dan end index end diberikan return index jika ditemukan dan -1 sebaliknya. index(str, beg = 0, end = len(string))	Sama seperti find (), namun menimbulkan pengecualian jika str tidak ditemukan. isalnum()	Mengembalikan true jika string memiliki minimal 1 karakter dan semua karakternya alfanumerik dan false sebaliknya. isalpha()	Mengembalikan true jika string memiliki minimal 1 karakter dan semua karakter adalah abjad dan false sebaliknya. isdigit()	Mengembalikan true jika string hanya berisi digit dan false sebaliknya. islower()	Mengembalikan true jika string memiliki setidaknya 1 karakter casing dan semua karakter casing dalam huruf kecil dan false sebaliknya. isnumeric()	Mengembalikan true jika string unicode hanya berisi karakter numerik dan false sebaliknya. isspace()	Mengembalikan true jika string hanya berisi karakter spasi dan false sebaliknya. istitle()	Mengembalikan true jika string benar “titlecased” dan false sebaliknya. isupper()	Mengembalikan true jika string memiliki setidaknya satu karakter casing dan semua karakter casing ada dalam huruf besar dan false sebaliknya. join(seq)	Merges (concatenates) representasi string elemen dalam urutan seq menjadi string, dengan string pemisah. len(string)	Mengembalikan panjang string ljust(width[, fillchar])	Mengembalikan string berlapis ruang dengan string asli dibiarkan dibenarkan ke kolom lebar total. lower()	Mengonversi semua huruf besar dalam bentuk string menjadi huruf kecil. lstrip()	Menghapus semua spasi utama dalam string. maketrans()	Mengembalikan tabel terjemahan untuk digunakan dalam fungsi terjemahan. max(str)	Mengembalikan karakter alfabetik dari string str. min(str)	Mengembalikan min karakter abjad dari string str. replace(old, new [, max])	Menggantikan semua kemunculan lama dalam string dengan kejadian baru atau paling maksimal jika max diberikan. rfind(str, beg = 0,end = len(string))	Sama seperti find (), tapi cari mundur dalam string. rindex( str, beg = 0, end = len(string))	Sama seperti index (), tapi cari mundur dalam string. rjust(width,[, fillchar])	Mengembalikan string berlapis ruang dengan senar asli benar-dibenarkan untuk total kolom lebar. rstrip()	Menghapus semua spasi spasi string. split(str=\u0026quot;\u0026rdquo;, num=string.count(str))	Membagi string sesuai dengan pemisah str (ruang jika tidak disediakan) dan mengembalikan daftar substring; Terpecah menjadi paling banyak substring jika diberikan. splitlines( num=string.count('\\n'))	Membagi string sama sekali (atau num) NEWLINEs dan mengembalikan daftar setiap baris dengan NEWLINEs dihapus. startswith(str, beg=0,end=len(string)	Determines if string or a substring of string (if starting index beg and ending index end are given) starts with substring str; returns true if so and false otherwise. strip([chars])	Lakukan kedua lstrip () dan rstrip () pada string swapcase()	Kasus invers untuk semua huruf dalam string. title()	Mengembalikan versi string “titlecased”, yaitu, semua kata diawali dengan huruf besar dan sisanya huruf kecil. translate(table, deletechars=\u0026quot;\u0026quot;)	Menerjemahkan string sesuai dengan tabel terjemahan str (256 karakter), menghapus string del. upper()	Mengonversi huruf kecil dalam bentuk string ke huruf besar. zfill (width)	Mengembalikan string asli yang tertinggal dengan angka nol ke total karakter lebar; Dimaksudkan untuk angka, zfill () mempertahankan tanda apapun yang diberikan (kurang satu nol). isdecimal()	Mengembalikan nilai true jika string unicode hanya berisi karakter desimal dan false sebaliknya.\n"}),a.add({id:23,href:"/python/tutorial/list/",title:"Lists di dalam Python",description:"Kondisi dalam Python.",content:"Dalam bahasa pemrograman Python, struktur data yang paling dasar adalah urutan atau lists. Setiap elemen-elemen berurutan akan diberi nomor posisi atau indeksnya. Indeks pertama dalam list adalah nol, indeks kedua adalah satu dan seterusnya.\nPython memiliki enam jenis urutan built-in, namun yang paling umum adalah list dan tuple. Ada beberapa hal yang dapat Anda lakukan dengan semua jenis list. Operasi ini meliputi pengindeksan, pengiris, penambahan, perbanyak, dan pengecekan keanggotaan. Selain itu, Python memiliki fungsi built-in untuk menemukan panjang list dan untuk menemukan elemen terbesar dan terkecilnya.\nMembuat List Python List adalah tipe data yang paling serbaguna yang tersedia dalam bahasa Python, yang dapat ditulis sebagai daftar nilai yang dipisahkan koma (item) antara tanda kurung siku. Hal penting tentang daftar adalah item dalam list tidak boleh sama jenisnya.\nMembuat list sangat sederhana, tinggal memasukkan berbagai nilai yang dipisahkan koma di antara tanda kurung siku. Dibawah ini adalah contoh sederhana pembuatan list dalam bahasa Python.\n#Contoh sederhana pembuatan list pada bahasa pemrograman python list1 = [\u0026lsquo;kimia\u0026rsquo;, \u0026lsquo;fisika\u0026rsquo;, 1993, 2017] list2 = [1, 2, 3, 4, 5 ] list3 = [\u0026ldquo;a\u0026rdquo;, \u0026ldquo;b\u0026rdquo;, \u0026ldquo;c\u0026rdquo;, \u0026ldquo;d\u0026rdquo;] Akses Nilai Dalam List Python Untuk mengakses nilai dalam list python, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan nilai yang tersedia pada indeks tersebut.\nBerikut adalah contoh cara mengakses nilai di dalam list python :\n#Cara mengakses nilai di dalam list Python\nlist1 = [\u0026lsquo;fisika\u0026rsquo;, \u0026lsquo;kimia\u0026rsquo;, 1993, 2017] list2 = [1, 2, 3, 4, 5, 6, 7 ]\nprint (\u0026ldquo;list1[0]: \u0026ldquo;, list1[0]) print (\u0026ldquo;list2[1:5]: \u0026ldquo;, list2[1:5]) Setelah Anda mengeksekusi kode diatas, hasilnya akan seperti dibawah ini :\nlist1[0]: fisika list2[1:5]: [2, 3, 4, 5]\nUpdate Nilai Dalam List Python Anda dapat memperbarui satu atau beberapa nilai di dalam list dengan memberikan potongan di sisi kiri operator penugasan, dan Anda dapat menambahkan nilai ke dalam list dengan metode append (). Sebagai contoh :\nlist = [\u0026lsquo;fisika\u0026rsquo;, \u0026lsquo;kimia\u0026rsquo;, 1993, 2017] print (\u0026ldquo;Nilai ada pada index 2 : \u0026ldquo;, list[2])\nlist[2] = 2001 print (\u0026ldquo;Nilai baru ada pada index 2 : \u0026ldquo;, list[2]) Hapus Nilai Dalam List Python Untuk menghapus nilai di dalam list python, Anda dapat menggunakan salah satu pernyataan del jika Anda tahu persis elemen yang Anda hapus. Anda dapat menggunakan metode remove() jika Anda tidak tahu persis item mana yang akan dihapus. Sebagai contoh :\n#Contoh cara menghapus nilai pada list python\nlist = [\u0026lsquo;fisika\u0026rsquo;, \u0026lsquo;kimia\u0026rsquo;, 1993, 2017]\nprint (list) del list[2] print (\u0026ldquo;Setelah dihapus nilai pada index 2 : \u0026ldquo;, list) Operasi Dasar Pada List Python List Python merespons operator + dan * seperti string; Itu artinya penggabungan dan pengulangan di sini juga berlaku, kecuali hasilnya adalah list baru, bukan sebuah String.\nSebenarnya, list merespons semua operasi urutan umum yang kami gunakan pada String di bab sebelumnya. Dibawah ini adalah tabel daftar operasi dasar pada list python.\nPython Expression	Hasil	Penjelasan len([1, 2, 3, 4])	4	Length [1, 2, 3] + [4, 5, 6]	[1, 2, 3, 4, 5, 6]	Concatenation [\u0026lsquo;Halo!'] * 4	[\u0026lsquo;Halo!\u0026rsquo;, \u0026lsquo;Halo!\u0026rsquo;, \u0026lsquo;Halo!\u0026rsquo;, \u0026lsquo;Halo!']	Repetition 2 in [1, 2, 3]	 True	Membership for x in [1,2,3] : print (x,end = ' \u0026lsquo;)	1 2 3	Iteration Indexing, Slicing dan Matrix Pada List Python Karena list adalah urutan, pengindeksan dan pengiris bekerja dengan cara yang sama untuk list seperti yang mereka lakukan untuk String.\nDengan asumsi input berikut :\nL = [\u0026lsquo;C++'\u0026rsquo;, \u0026lsquo;Java\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;]\nPython Expression	Hasil	Penjelasan L[2]	\u0026lsquo;Python\u0026rsquo;	Offset mulai dari nol L[-2]	\u0026lsquo;Java\u0026rsquo;	Negatif: hitung dari kanan [1:]	[\u0026lsquo;Java\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;]	Slicing mengambil bagian Method dan Fungsi Build-in Pada List Python Python menyertakan fungsi built-in sebagai berikut :\nPython Function	Penjelasan cmp(list1, list2) #	Tidak lagi tersedia dengan Python 3 len(list)	Memberikan total panjang list. max(list)	Mengembalikan item dari list dengan nilai maks. min(list)	Mengembalikan item dari list dengan nilai min. list(seq)	Mengubah tuple menjadi list. Python menyertakan methods built-in sebagai berikut\nPython Methods	Penjelasan list.append(obj)	Menambahkan objek obj ke list list.count(obj)	Jumlah pengembalian berapa kali obj terjadi dalam list list.extend(seq)	Tambahkan isi seq ke list list.index(obj)	Mengembalikan indeks terendah dalam list yang muncul obj list.insert(index, obj)	Sisipkan objek obj ke dalam list di indeks offset list.pop(obj = list[-1])	Menghapus dan mengembalikan objek atau obj terakhir dari list list.remove(obj)	Removes object obj from list list.reverse()	Membalik list objek di tempat list.sort([func])	Urutkan objek list, gunakan compare func jika diberikan\n"}),a.add({id:24,href:"/python/tutorial/tuple/",title:"Tuple di dalam Python",description:"Kondisi dalam Python.",content:"Sebuah tupel adalah urutan objek Python yang tidak berubah. Tupel adalah urutan, seperti daftar. Perbedaan utama antara tupel dan daftarnya adalah bahwa tupel tidak dapat diubah tidak seperti List Python. Tupel menggunakan tanda kurung, sedangkan List Python menggunakan tanda kurung siku.\nMembuat tuple semudah memasukkan nilai-nilai yang dipisahkan koma. Secara opsional, Anda dapat memasukkan nilai-nilai yang dipisahkan koma ini di antara tanda kurung juga. Sebagai contoh :\n#Contoh sederhana pembuatan tuple pada bahasa pemrograman python\ntup1 = (\u0026lsquo;fisika\u0026rsquo;, \u0026lsquo;kimia\u0026rsquo;, 1993, 2017) tup2 = (1, 2, 3, 4, 5 ) tup3 = \u0026ldquo;a\u0026rdquo;, \u0026ldquo;b\u0026rdquo;, \u0026ldquo;c\u0026rdquo;, \u0026ldquo;d\u0026rdquo; Tupel kosong ditulis sebagai dua tanda kurung yang tidak berisi apa-apa, contohnya : tup1 = (); Untuk menulis tupel yang berisi satu nilai, Anda harus memasukkan koma, meskipun hanya ada satu nilai, contohnya : tup1 = (50,) Seperti indeks String, indeks tuple mulai dari 0, dan mereka dapat diiris, digabungkan, dan seterusnya\nAkses Nilai Dalam Tuple Python Untuk mengakses nilai dalam tupel, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan nilai yang tersedia pada indeks tersebut. Sebagai contoh :\n#Cara mengakses nilai tuple\ntup1 = (\u0026lsquo;fisika\u0026rsquo;, \u0026lsquo;kimia\u0026rsquo;, 1993, 2017) tup2 = (1, 2, 3, 4, 5, 6, 7 )\nprint (\u0026ldquo;tup1[0]: \u0026ldquo;, tup1[0]) print (\u0026ldquo;tup2[1:5]: \u0026ldquo;, tup2[1:5]) Setelah Anda mengeksekusi kode diatas, hasilnya akan seperti dibawah ini :\ntup1[0]: fisika tup2[1:5]: (2, 3, 4, 5)\nUpdate Nilai Dalam Tuple Python Tuple tidak berubah, yang berarti Anda tidak dapat memperbarui atau mengubah nilai elemen tupel. Anda dapat mengambil bagian dari tupel yang ada untuk membuat tupel baru seperti ditunjukkan oleh contoh berikut.\ntup1 = (12, 34.56) tup2 = (\u0026lsquo;abc\u0026rsquo;, \u0026lsquo;xyz\u0026rsquo;)\nAksi seperti dibawah ini tidak bisa dilakukan pada tuple python # Karena memang nilai pada tuple python tidak bisa diubah # tup1[0] = 100; # Jadi, buatlah tuple baru sebagai berikut # tup3 = tup1 + tup2 print (tup3) Hapus Nilai Dalam Tuple Python Menghapus elemen tuple individual tidak mungkin dilakukan. Tentu saja, tidak ada yang salah dengan menggabungkan tupel lain dengan unsur-unsur yang tidak diinginkan dibuang.\nUntuk secara eksplisit menghapus keseluruhan tuple, cukup gunakan del statement. Sebagai contoh\ntup = (\u0026lsquo;fisika\u0026rsquo;, \u0026lsquo;kimia\u0026rsquo;, 1993, 2017) print(tup)\nhapus tuple dengan statement del # del tup\nlalu buat kembali tuple yang baru dengan elemen yang diinginkan # tup = (\u0026lsquo;Bahasa\u0026rsquo;, \u0026lsquo;Literasi\u0026rsquo;, 2020) print(\u0026ldquo;Setelah menghapus tuple :\u0026rdquo;, tup) Operasi Dasar Pada Tuple Python Tupel merespons operator + dan * sama seperti String; Mereka berarti penggabungan dan pengulangan di sini juga berlaku, kecuali hasilnya adalah tupel baru, bukan string.\nSebenarnya, Tuple merespons semua operasi urutan umum yang kami gunakan pada String di bab sebelumnya. Dibawah ini adalah tabel daftar operasi dasar pada Tuple python\nPython Expression	Hasil	Penjelasan len((1, 2, 3))	3	Length (1, 2, 3) + (4, 5, 6)	(1, 2, 3, 4, 5, 6)	Concatenation (‘Halo!’,) * 4	(‘Halo!’, ‘Halo!’, ‘Halo!’, ‘Halo!’)	Repetition 3 in (1, 2, 3)	True	Membership for x in (1,2,3) : print (x, end = ‘ ‘)	1 2 3	Iteration Indexing, Slicing dan Matrix Pada Tuple Python Karena tupel adalah urutan, pengindeksan dan pengiris bekerja dengan cara yang sama untuk tupel seperti pada String, dengan asumsi masukan berikut\nDengan asumsi input berikut : T = (\u0026lsquo;C++\u0026rsquo;, \u0026lsquo;Java\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;)\nPython Expression	Hasil	Penjelasan T[2]	\u0026lsquo;Python\u0026rsquo;	Offset mulai dari nol T[-2]	\u0026lsquo;Java\u0026rsquo;	Negatif: hitung dari kanan T[1:]	(\u0026lsquo;Java\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;)	Slicing mengambil bagian Fungsi Build-in Pada Tuple Python Python menyertakan fungsi built-in sebagai berikut\nPython Function	Penjelasan cmp(tuple1, tuple2)	# Tidak lagi tersedia dengan Python 3 len(tuple)	Memberikan total panjang tuple. max(tuple)	Mengembalikan item dari tuple dengan nilai maks. min(tuple)	Mengembalikan item dari tuple dengan nilai min. tuple(seq)	Mengubah seq menjadi tuple.\n"}),a.add({id:25,href:"/python/tutorial/dictionary/",title:"Dictionary",description:"Kondisi dalam Python.",content:"Dictionary Python berbeda dengan List ataupun Tuple. Karena setiap urutanya berisi key dan value. Setiap key dipisahkan dari value-nya oleh titik dua (:), item dipisahkan oleh koma, dan semuanya tertutup dalam kurung kurawal. Dictionary kosong tanpa barang ditulis hanya dengan dua kurung kurawal, seperti ini: {}.\nNilai kamus bisa berupa tipe apa pun, namun key harus berupa tipe data yang tidak berubah seperti string, angka, atau tupel.\nAkses Nilai Dalam Dictionary Python Untuk mengakses elemen Dictionary, Anda dapat menggunakan tanda kurung siku yang sudah dikenal bersama dengan key untuk mendapatkan nilainya. Berikut adalah contoh sederhananya :\n#Contoh cara membuat Dictionary pada Python\ndict = {\u0026lsquo;Name\u0026rsquo;: \u0026lsquo;Zara\u0026rsquo;, \u0026lsquo;Age\u0026rsquo;: 7, \u0026lsquo;Class\u0026rsquo;: \u0026lsquo;First\u0026rsquo;} print (\u0026ldquo;dict[\u0026lsquo;Name\u0026rsquo;]: \u0026ldquo;, dict[\u0026lsquo;Name\u0026rsquo;]) print (\u0026ldquo;dict[\u0026lsquo;Age\u0026rsquo;]: \u0026ldquo;, dict[\u0026lsquo;Age\u0026rsquo;]) Update Nilai Dalam Dictionary Python Anda dapat memperbarui Dictionary dengan menambahkan entri baru atau pasangan nilai kunci, memodifikasi entri yang ada, atau menghapus entri yang ada seperti ditunjukkan pada contoh sederhana yang diberikan di bawah ini.\n#Update dictionary python\ndict = {\u0026lsquo;Name\u0026rsquo;: \u0026lsquo;Zara\u0026rsquo;, \u0026lsquo;Age\u0026rsquo;: 7, \u0026lsquo;Class\u0026rsquo;: \u0026lsquo;First\u0026rsquo;} dict[\u0026lsquo;Age\u0026rsquo;] = 8; # Mengubah entri yang sudah ada dict[\u0026lsquo;School\u0026rsquo;] = \u0026ldquo;DPS School\u0026rdquo; # Menambah entri baru\nprint (\u0026ldquo;dict[\u0026lsquo;Age\u0026rsquo;]: \u0026ldquo;, dict[\u0026lsquo;Age\u0026rsquo;]) print (\u0026ldquo;dict[\u0026lsquo;School\u0026rsquo;]: \u0026ldquo;, dict[\u0026lsquo;School\u0026rsquo;]) Hapus Elemen Dictionary Python Anda dapat menghapus elemen Dictionary individual atau menghapus keseluruhan isi Dictionary. Anda juga dapat menghapus seluruh Dictionary dalam satu operasi.\nUntuk menghapus seluruh Dictionary secara eksplisit, cukup gunakan del statement. Berikut adalah contoh sederhana :\n#Contoh cara menghapus pada Dictionary Python\ndict = {\u0026lsquo;Name\u0026rsquo;: \u0026lsquo;Zara\u0026rsquo;, \u0026lsquo;Age\u0026rsquo;: 7, \u0026lsquo;Class\u0026rsquo;: \u0026lsquo;First\u0026rsquo;}\ndel dict[\u0026lsquo;Name\u0026rsquo;] # hapus entri dengan key \u0026lsquo;Name\u0026rsquo; dict.clear() # hapus semua entri di dict del dict # hapus dictionary yang sudah ada\nprint (\u0026ldquo;dict[\u0026lsquo;Age\u0026rsquo;]: \u0026ldquo;, dict[\u0026lsquo;Age\u0026rsquo;]) print (\u0026ldquo;dict[\u0026lsquo;School\u0026rsquo;]: \u0026ldquo;, dict[\u0026lsquo;School\u0026rsquo;]) Fungsi Build-in Pada Dictionary Python Python menyertakan fungsi built-in sebagai berikut :\nFungsi Python	Penjelasan cmp(dict1, dict2)	Membandingkan unsur keduanya. len(dict)	Memberikan panjang total Dictionary. Ini sama dengan jumlah item dalam Dictionary. str(dict)	Menghasilkan representasi string yang dapat dicetak dari Dictionary type(variable)	Mengembalikan tipe variabel yang lulus. Jika variabel yang dilewatkan adalah Dictionary, maka akan mengembalikan tipe Dictionary. Method Build-in Pada Dictionary Python Python menyertakan method built-in sebagai berikut :\nMethod Python	Penjelasan dict.clear()	Menghapus semua elemen Dictionary dict.copy()	Mengembalikan salinan Dictionary dict.fromkeys()	Buat Dictionary baru dengan kunci dari seq dan nilai yang disetel ke nilai. dict.get(key, default=None)	For key, nilai pengembalian atau default jika tombol tidak ada dalam Dictionary dict.has_key(key)	Mengembalikan true jika key dalam Dictionary, false sebaliknya dict.items()	Mengembalikan daftar dari pasangan tuple dictionary (key, value) dict.keys()	Mengembalikan daftar key dictionary dict.setdefault(key, default=None)	Mirip dengan get (), tapi akan mengatur dict [key] = default jika kunci belum ada di dict dict.update(dict2)	Menambahkan pasangan kunci kata kunci dict2 ke dict dict.values()	Mengembalikan daftar nilai dictionary\n"}),a.add({id:26,href:"/python/tutorial/tanggal-waktu/",title:"Tanggal dan Waktu di dalam Python",description:"Kondisi dalam Python.",content:"Program Python dapat menangani tanggal dan waktu dengan beberapa cara. Konversi antara format tanggal adalah tugas umum untuk komputer. Modul waktu dan kalender Python melacak tanggal dan waktu.\nApa itu Tick? Interval waktu adalah bilangan floating-point dalam satuan detik. Instansi tertentu dalam waktu dinyatakan dalam hitungan detik sejak pukul 12:00 1 Januari 1970.\nDibawah ini adalah contoh penggunanaya.\nimport time; # Digunakan untuk meng-import modul time\nticks = time.time() print \u0026ldquo;Berjalan sejak 12:00am, January 1, 1970:\u0026rdquo;, ticks #python 2 print (\u0026ldquo;Berjalan sejak 12:00am, January 1, 1970:\u0026rdquo;, ticks) #untuk python 3 gunakan tanda kurung, print() Apa itu TimeTuple Python? Banyak fungsi waktu Python menangani waktu sebagai tuple dari 9 nomor, seperti yang terdapat pada tabel di bawah ini.\nIndex	Field	Value 0	4-digit year	2008 1	Bulan	1 sampai 12 2	Hari	1 sampai 31 3	Jam	0 sampai 23 4	Menit	0 sampai 59 5	Detik	0 sampai 61 6	Hari dalam Minggu	0 sampai 6 (0 adalah Senin) 7	Hari dalam Bulan	1 sampai 366 8	Daylight savings	-1, 0, 1, -1 means library determines DST Tuple di atas setara dengan struktur struct_time. Struktur ini memiliki atribut berikut\nIndex	Atribut	Value 0	tm_year	2008 1	tm_mon	1 sampai 12 2	tm_mday	1 sampai 31 3	tm_hour	0 sampai 23 4	tm_min	0 sampai 59 5	tm_sec	0 sampai 61 6	tm_wday	0 sampai 6 (0 adalah Senin) 7	tm_yday	1 sampai 366 8	tm_isdst	-1, 0, 1, -1 means library determines DST Mendapatkan Waktu Saat Ini Untuk menerjemahkan waktu instan dari satu detik sejak nilai floating-point ke waktu menjadi tupel waktu, lewati nilai floating-point ke fungsi (mis., Localtime) yang mengembalikan waktu tupel dengan semua sembilan item valid.\nimport time;\nlocaltime = time.localtime(time.time()) print \u0026ldquo;Waktu lokal saat ini :\u0026rdquo;, localtime #python 2 Mendapatkan Waktu yang berformat Anda dapat memformat kapan saja sesuai kebutuhan Anda, namun metode sederhana untuk mendapatkan waktu dalam format yang mudah dibaca adalah asctime ()\nimport time;\nlocaltime = time.asctime( time.localtime(time.time()) ) print \u0026ldquo;Waktu lokal saat ini :\u0026rdquo;, localtime #python 2 Mendapatkan kalender dalam sebulan Modul kalender memberikan berbagai macam metode untuk dimainkan dengan kalender tahunan dan bulanan. Di sini, kami mencetak kalender untuk bulan tertentu (Jan 2008)\nimport calendar\ncal = calendar.month(2008, 1) print \u0026ldquo;Dibawah ini adalah kalender:\u0026rdquo; #python 2 print cal Modul time pada Python Ada modul waktu populer yang tersedia dengan Python yang menyediakan fungsi untuk bekerja dengan waktu dan untuk mengkonversi antara representasi. Dibawah ini adalah tabel dari modul time pada python yang ada.\nFungsi Python	Penjelasan time.altzone	Diimbangi zona waktu DST lokal, dalam detik di sebelah barat UTC, jika seseorang didefinisikan. Ini negatif jika zona waktu DST lokal berada di sebelah timur UTC (seperti di Eropa Barat, termasuk Inggris). Gunakan saja ini jika siang hari tidak nol. time.asctime([tupletime])	Menerima time-tupel dan mengembalikan string 24-karakter yang dapat dibaca seperti ‘Tue Dec 11 18:07:14 2008’. time.clock()	Mengembalikan waktu CPU saat ini sebagai jumlah floating-point detik. Untuk mengukur biaya komputasi dari berbagai pendekatan, nilai time.clock lebih bermanfaat daripada time.time (). time.ctime([secs])	Seperti asctime (localtime (detik)) dan tanpa argumen seperti asctime () time.gmtime([secs])	Menerima instan yang diungkapkan dalam hitungan detik sejak zaman dan mengembalikan waktu tuple t dengan waktu UTC. Catatan: t.tm_isdst selalu 0 time.localtime([secs])	Menerima instan yang dinyatakan dalam hitungan detik sejak zaman dan mengembalikan waktu tuple t dengan waktu setempat (t.tm_isdst adalah 0 atau 1, tergantung pada apakah DST berlaku seketika oleh peraturan lokal). time.mktime(tupletime)	Menerima instan dinyatakan sebagai time-tuple di waktu setempat dan mengembalikan nilai floating-point dengan instan yang dinyatakan dalam hitungan detik sejak zaman. time.sleep(secs)	Menangguhkan panggilan untuk beberapa detik. time.strftime(fmt[,tupletime])	Menerima instan dinyatakan sebagai tupel waktu di waktu lokal dan mengembalikan sebuah string yang mewakili instan seperti yang ditentukan oleh string fmt. time.strptime(str,fmt=’%a %b %d %H:%M:%S %Y’)	Parses str sesuai dengan format string fmt dan mengembalikan format instant-tuple. time.time()	Mengembalikan waktu saat ini secara instan, jumlah detik mengambang beberapa detik sejak zaman itu. time.tzset()	Mengatur ulang aturan konversi waktu yang digunakan oleh rutinitas perpustakaan. Variabel lingkungan TZ menentukan bagaimana hal ini dilakukan. Ada dua atribut penting yang tersedia dengan modul waktu:\nMethod Python	Penjelasan time.timezone	Atribut time.timezone adalah offset dalam detik zona waktu lokal (tanpa DST) dari UTC (\u0026gt; 0 di Amerika; \u0026lt;= 0 di sebagian besar Eropa, Asia, Afrika). time.tzname	Atribut time.tzname adalah sepasang string yang bergantung pada lokal, yang merupakan nama zona waktu lokal tanpa dan dengan DST. Modul calendar pada Python Modul kalender menyimpan fungsi yang berhubungan dengan kalender, termasuk fungsi untuk mencetak kalender teks untuk bulan atau tahun tertentu.\nSecara default, kalender mengambil hari Senin sebagai hari pertama dalam minggu dan minggu sebagai yang terakhir. Untuk mengubah ini, fungsi call calendar.setfirstweekday ().\nBerikut adalah daftar fungsi yang tersedia dengan modul kalender:\nFungsi Python	Penjelasan calendar.calendar(year,w=2,l=1,c=6)	Mengembalikan string multiline dengan kalender untuk tahun tahun yang diformat menjadi tiga kolom yang dipisahkan oleh ruang c. W adalah lebar karakter setiap tanggal; Setiap baris memiliki panjang 21 * w + 18 + 2 * c. L adalah jumlah baris untuk setiap minggu. calendar.firstweekday( )	Mengembalikan pengaturan saat ini untuk hari kerja yang dimulai setiap minggu. Secara default, saat kalender pertama kali diimpor, ini adalah 0, yang berarti Senin. calendar.isleap(year)	Pengembalian True jika tahun adalah tahun kabisat; Jika tidak, False calendar.leapdays(y1,y2)	Mengembalikan jumlah lompatan hari dalam tahun-tahun dalam rentang (y1, y2). calendar.month(year,month,w=2,l=1)	Mengembalikan string multiline dengan kalender untuk bulan bulan tahun, satu baris per minggu ditambah dua baris header. W adalah lebar karakter setiap tanggal; Setiap baris memiliki panjang 7 * w + 6. L adalah jumlah baris untuk setiap minggu. calendar.monthcalendar(year,month)	Mengembalikan daftar daftar int. Setiap sublist menunjukkan seminggu. Hari di luar bulan bulan tahun diatur ke 0; Hari dalam bulan ditetapkan ke hari ke bulan, 1 dan ke atas. calendar.monthrange(year,month)	Mengembalikan dua bilangan bulat. Yang pertama adalah kode hari kerja untuk hari pertama bulan bulan di tahun; Yang kedua adalah jumlah hari dalam sebulan. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu); Angka bulan adalah 1 sampai 12. calendar.prcal(year,w=2,l=1,c=6)	Seperti kalender cetak.calendar (tahun, w, l, c). calendar.prmonth(year,month,w=2,l=1)	Seperti kalender cetak. Bulan (tahun, bulan, w, l). calendar.setfirstweekday(weekday)	Mengatur hari pertama setiap minggu sampai hari kerja kode hari kerja. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu). calendar.timegm(tupletime)	Kebalikan dari time.gmtime: menerima waktu instan dalam bentuk tupel waktu dan mengembalikan detik yang sama seperti jumlah floating-point dalam hitungan detik sejak zaman. calendar.weekday(year,month,day)	Mengembalikan kode hari kerja untuk tanggal yang ditentukan. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu); Bulan adalah 1 (Januari) sampai 12 (Desember).\n"}),a.add({id:27,href:"/blockchains-penggebrak-desentralisasi-privasi/",title:"Blockchains Penggebrak Desentralisasi Privasi?",description:"bitcoin yang memungkinkan penggunanya melakukan transfer mata uang (currency) dengan aman tanpa pengatur yang terpusat (centralized), dengan menggunakan open ledger (blockchains) yang terbukti tangguh.",content:"Pengantar # Pernahkah Anda ketika melakukan sign up pada sebuah website diminta untuk memberikan sejumlah informasi yang Anda tidak bisa menarik kembali apa pun keterangan yang telah Anda berikan? Ingat bahwa update informasi yang Anda lakukan sekalipun tidak menghapus data yang telah terlanjur Anda berikan. Ketidakberdayaan kita sebagai pengguna teknologi IT telah membuat para peneliti mengembangkan banyak teknik yang memfokuskan pada perlindungan terhadap data personal. Gembar-gembor pemanfaatan blockchains mulai berdengung sejak lima tahunan yang lalu. Berawal dari bitcoin yang mendemonstrasikan transaksi dan penyimpanan dana finansial secara private dengan menggunakan legder publik, semakin booming-lah blockchains mengikuti bitcoin. Mereka toh adalah dua hal yang tidak dapat dipisahkan.\nKesuksesan Bitcoin # Kesuksesan bitcoin membuat orang—lintas keilmuan dan kepentingan—memberikan perhatian penuh pada perkembangan blockchains. Begitu banyak keunggulan yang dijamin oleh blockchains,di antaranya—merupakan fokus semua praktisi—privasi.\nSekadar flashback, peneliti dan pembaca mungkin mengenal beberapa teknik keamanan data; (1) Data anonymization methods yang melindungi data pribadi yang bisa diidentifikasi. (2) k-anonymity, sebuah properti umum dari set data yang tak memiliki nama dan tak dapat dibedakan kecuali dengan formula k-1 record lainnya, (3) l-diversity yang merupakan pengembangan dari k-anonymity, (4) t-closeness, (5) differential privacy sebuah teknik memberikan noise dalam penyimpanan data pribadi, juga(5) encryption schemes yang memungkinkan penghitungan (komputasi) dan queries terhadap data yang sudah dienkrispsi, tetapi kurang praktis untuk diaplikasikan secara luas.\nHingga kemudian muncul sistem yang dapat dipertanggungjawabkan yaitu bitcoin yang memungkinkan penggunanya melakukan transfer mata uang (currency) dengan aman tanpa pengatur yang terpusat (centralized), dengan menggunakan open ledger (blockchains) yang terbukti tangguh.\nPara peneliti melakukan begitu banyak inovasi dengan blockchains, salah satunya adalah dengan mengombinasikan blockchains dengan off-blockchains storage untuk membangun dan mengelola platform yang fokus pada privasi—kepemilikan data, transparansi dan dapat diaudit, kontrol akses yang baik—yang dapat dijelaskan sebagai berikut.\nKepemilikan data # Sistem mengenal pengguna sebagai pemilik data dan pelayanan (services) sebagai guest (tamu) yang diberikan izin untuk mengakses data.\nData yang transparan dan dapat di-audit. Setiap pengguna sistem sepatutnya mengetahui data apa saja yang telah digali dari mereka dan bagaimana data itu diakses oleh pelayanan dan sistem.\nKontrol terhadap akses # Sepatutnya setiap pengguna dapat mengubah serangkaian izin (set of permissions) dan mencabut akses terhadap data yang telah dikoleksi sebelumnya kapan saja sesuai keinginan dari pengguna sistem.\nPenelitian yang dilakukan oleh Guy Zyskind, et al., menerapkan mekanisme yang mampu membenahi sekaligus memperbaiki dialog perizinan yang ada di aplikasi mobile. Sementara interface usernya dibiarkan sama, kebijakan akses kontrolnya disimpan dengan aman di blockchain dan hanya penggunanya yang dapat mengubah apa pun di dalamnya.\nTipe Transaksi Bitcoin # Blockchain menerima dua tipe transaksi: T-akses—untuk mengontol pengelolaan—dan T-data untuk penyimpanan dan retrieval data. Operasi jaringan ini dapat dengan mudah diintegrasikan ke sebuah alat pengembang software yang berbasis mobile (SDK) yang layanan-layanannya dapat digunakan dalam proses pengembangannya. Bayangkan kejadiannya seperti ini. Seorang pengguna menginstal sebuah aplikasi yang menggunakan platform rancangan peneliti ini untuk menjaga privasi sang pengguna. Ketika user melakukan sign up untuk pertama kalinya, identitas yang baru diberikan antara user dan service (pihak pemberi layanan) sekaligus dengan izin-izin tertentu yang dikaitkan dengan penyelenggaran proses tersebut kepada blockchain di dalam transaksi T-akses. Data yang yang dikumpulkan dari ponsel, misalnya data lokasi dienkripsikan menggunakan kunci enkripsi yang dibagi dan dikirim ke blockchain dalam transaksi T-data, yang merutekannya ke penyimpanan off-blockchain dengan key-value, dengan mengontrol pointer terhadap data di public ledger (pointernya dalah SHD-256 hash dari data).\nBaik user maupun service dapat meng-query data dengan menggunakan transaksi T-data dengan pointer (key) yang terhubung kepada keduanya. Sementara itu, blockchain nantinya akan melakukan verifikasi digital signature baik milik si user maupun si service. Berbeda daripada kebanyakan sistem sebelumnya, akhirnya si user dapat menggonta-ganti permission set-nya dengan sekehendak hati dan kapan saja diperlukan dengan memanfaatkan T-access transaction, termasuk mencabut data yang sebelumnya telah direkam sistem.\nPenutup # Demikianlah bagaimana desentralisasi data private dilakukan dengan menggunakan kombinasi blockchain dan off-blockchain. Karena, sepatutnya user—siapa pun mereka—tidak melibatkan pihak ketiga dalam pengelolaan data yang memberikan kesempatan untuk diserang atau disalahgunakan.\nCuplikan tentang blockchain dan off-blockchain ini merupakan bagian dari jurnal Decentralizing Privacy: Using Blockchain to Protect Personal Data (Guy Zyskin, Oz Nathan, Alex ‘Sandy’ Pentland).\noleh: Roy Sari Milda Siregar, M.Kom\n"}),a.add({id:28,href:"/python/tutorial/fungsi/",title:"Fungsi di dalam Python",description:"Kondisi dalam Python.",content:"Fungsi adalah blok kode terorganisir dan dapat digunakan kembali yang digunakan untuk melakukan sebuah tindakan/action. Fungsi memberikan modularitas yang lebih baik untuk aplikasi Anda dan tingkat penggunaan kode yang tinggi.\nMendefinisikan Fungsi Python Anda dapat menentukan fungsi untuk menyediakan fungsionalitas yang dibutuhkan. Berikut adalah aturan sederhana untuk mendefinisikan fungsi dengan Python.\nFungsi blok dimulai dengan def kata kunci diikuti oleh nama fungsi dan tanda kurung (()). Setiap parameter masukan atau argumen harus ditempatkan di dalam tanda kurung ini. Anda juga dapat menentukan parameter di dalam tanda kurung ini. Pernyataan pertama dari sebuah fungsi dapat berupa pernyataan opsional - string dokumentasi fungsi atau docstring. Blok kode dalam setiap fungsi dimulai dengan titik dua (:) dan indentasi. Pernyataan kembali [ekspresi] keluar dari sebuah fungsi, secara opsional menyampaikan kembali ekspresi ke pemanggil. Pernyataan pengembalian tanpa argumen sama dengan return None. Contoh fungsi\ndef printme( str ): \u0026ldquo;This prints a passed string into this function\u0026rdquo; print (str) return\n"}),a.add({id:29,href:"/python/tutorial/modul/",title:"Modul di dalam Python",description:"Kondisi dalam Python.",content:"Modul memungkinkan Anda mengatur kode Python secara logis. Mengelompokkan kode terkait ke dalam modul membuat kode lebih mudah dipahami dan digunakan. Modul adalah objek Python dengan atribut yang diberi nama yang bisa Anda bind dan dijadikan referensi.\nSecara sederhana modul adalah file yang terdiri dari kode Python. Modul dapat mendefinisikan fungsi, kelas dan variabel. Modul juga bisa menyertakan kode yang bisa dijalankan “runable”.\nBerikut adalah contoh modul sederhana pada Python :\ndef print_func( par ): print \u0026ldquo;Halo : \u0026ldquo;, par return Import Statement Anda dapat menggunakan file sumber Python apapun sebagai modul dengan mengeksekusi pernyataan impor di file sumber Python lainnya. Impornya memiliki sintaks berikut.\nKetika interpreter menemukan sebuah pernyataan import, ia mengimpor modul jika modul tersebut ada di jalur pencarian. Jalur pencarian adalah daftar direktori yang ditafsirkan juru bahasa sebelum mengimpor modul. Misalnya, untuk mengimpor modul hello.py, Anda perlu meletakkan perintah berikut di bagian atas script.\nImport module support # import support\nAnda bisa memanggil fungsi defined sebagai berikut # support.print_func(\u0026ldquo;Andy\u0026rdquo;)\n"}),a.add({id:30,href:"/python/tutorial/input-output/",title:"Input Output di dalam Python",description:"Kondisi dalam Python.",content:"Disini kita akan belajar semua fungsi dasar I/O yang tersedia pada Python 3. Jika Anda ingin mempelajari lebih detail, lihat dokumentasi standar Python.\nPrint Cara termudah untuk menghasilkan output adalah dengan menggunakan pernyataan cetak di mana Anda bisa melewati nol atau lebih banyak ekspresi yang dipisahkan dengan koma. Fungsi ini mengubah ekspresi yang Anda berikan ke string dan menulis hasilnya ke output standar sebagai berikut :\nprint (\u0026ldquo;Python adalah bahasa pemrograman yang hebat\u0026rdquo;) Membaca Input Keyboard Python 2 memiliki dua fungsi built-in untuk membaca data dari input standar, yang secara default berasal dari keyboard. Fungsi ini adalah input() dan raw_input()\nDengan Python 3, fungsi raw_input() tidak digunakan lagi. Selain itu, input() berfungsi membaca data dari keyboard sebagai string, terlepas dari apakah itu tertutup dengan tanda kutip (‘’ atau ‘”) atau tidak.\nFungsi Input Python Fungsi input([prompt]) setara dengan raw_input, kecuali mengasumsikan bahwa input adalah ekspresi Python yang valid dan mengembalikan hasil yang dievaluasi ke Anda.\n   x = input(\u0026ldquo;something:\u0026quot;) something:10\n      x \u0026lsquo;10\u0026rsquo;\n      x = input(\u0026ldquo;something:\u0026quot;) something:\u0026lsquo;10\u0026rsquo; #entered data treated as string with or without ''\n      x \u0026ldquo;\u0026lsquo;10\u0026rsquo;\u0026rdquo;\n   "}),a.add({id:31,href:"/python/tutorial/exception/",title:"Exception",description:"Kondisi dalam Python.",content:"Python menyediakan dua fitur yang sangat penting untuk menangani kesalahan tak terduga dalam program Python Anda dan menambahkan kemampuan debugging di dalamnya.\nException Handling Assertions Exception adalah sebuah peristiwa, yang terjadi selama pelaksanaan program yang mengganggu aliran normal instruksi program. Secara umum, ketika skrip Python menemukan situasi yang tidak dapat diatasi, hal itu menimbulkan pengecualian. Exception adalah objek Python yang mewakili kesalahan. Ketika skrip Python menimbulkan Exception, ia harus menangani Exception begitu saja sehingga berhenti dan berhenti.\nStandard Exceptions Nama	Penjelasan Exception	Kelas dasar untuk semua pengecualian / exception StopIteration	Dibesarkan ketika metode (iterator) berikutnya dari iterator tidak mengarah ke objek apa pun. SystemExit	Dibesarkan oleh fungsi sys.exit (). StandardError	Kelas dasar untuk semua pengecualian built-in kecuali StopIteration dan SystemExit. ArithmeticError	Kelas dasar untuk semua kesalahan yang terjadi untuk perhitungan numerik. OverflowError	Dibesarkan saat perhitungan melebihi batas maksimum untuk tipe numerik. FloatingPointError	Dibesarkan saat perhitungan floating point gagal. ZeroDivisonError	Dibesarkan saat pembagian atau modulo nol dilakukan untuk semua tipe numerik. AssertionError	Dibesarkan jika terjadi kegagalan pernyataan Assert. AttributeError	Dibesarkan jika terjadi kegagalan referensi atribut atau penugasan. EOFError	Dibesarkan bila tidak ada input dari fungsi raw_input () atau input () dan akhir file tercapai. ImportError	Dibesarkan saat sebuah pernyataan impor gagal. KeyboardInterrupt	Dibesarkan saat pengguna menyela eksekusi program, biasanya dengan menekan Ctrl + c. LookupError	Kelas dasar untuk semua kesalahan pencarian. IndexError	Dibesarkan saat sebuah indeks tidak ditemukan secara berurutan. KeyError	Dibesarkan saat kunci yang ditentukan tidak ditemukan dalam kamus. NameError	Dibesarkan saat pengenal tidak ditemukan di namespace lokal atau global. UnboundLocalError	Dibesarkan saat mencoba mengakses variabel lokal dalam suatu fungsi atau metode namun tidak ada nilai yang ditugaskan padanya. EnvironmentError	Kelas dasar untuk semua pengecualian yang terjadi di luar lingkungan Python. IOError	Dibesarkan saat operasi input / output gagal, seperti pernyataan cetak atau fungsi open () saat mencoba membuka file yang tidak ada. OSError	Dibangkitkan untuk kesalahan terkait sistem operasi. SyntaxError	Dibesarkan saat ada kesalahan dengan sintaks Python. IndentationError	Dibesarkan saat indentasi tidak ditentukan dengan benar. SystemError	Dibesarkan saat penafsir menemukan masalah internal, namun bila kesalahan ini ditemui juru bahasa Python tidak keluar. SystemExit	Dibesarkan saat juru bahasa Python berhenti dengan menggunakan fungsi sys.exit (). Jika tidak ditangani dalam kode, menyebabkan penafsir untuk keluar. TypeError	Dibesarkan saat operasi atau fungsi dicoba yang tidak valid untuk tipe data yang ditentukan. ValueError	Dibesarkan ketika fungsi bawaan untuk tipe data memiliki jenis argumen yang valid, namun argumen tersebut memiliki nilai yang tidak valid yang ditentukan. RuntimeError	Dibesarkan saat kesalahan yang dihasilkan tidak termasuk dalam kategori apa pun. NotImplementedError	Dibesarkan ketika metode abstrak yang perlu diimplementasikan di kelas warisan sebenarnya tidak dilaksanakan.\n"}),a.add({id:32,href:"/python/tutorial/objek-class/",title:"Objek dan class di dalam Python",description:"Kondisi dalam Python.",content:"Python telah menjadi bahasa berorientasi objek sejak bahasa Python sendiri dibuat. Untuk membuat dan menggunakan kelas dan objek pada Python benar-benar mudah. Pada tutorial ini Anda akan dibantu untuk menjadi ahli dalam penggunaan pemrograman berorientasi objek Python.\nJika Anda tidak memiliki pengalaman sebelumnya dengan pemrograman berorientasi objek (OOP), Anda mempelajarinya terlebih dahulu agar Anda dapat memahami konsep dasarnya.\nJika memang sudah mengerti konsep dasar OOP berikut ini adalah pengenalan dari Object-Oriented Programming (OOP) untuk membantu Anda.\nIstilah Dalam OOP Istilah	Penjelasan Class	Prototipe yang ditentukan pengguna untuk objek yang mendefinisikan seperangkat atribut yang menjadi ciri objek kelas apa pun. Atribut adalah data anggota (variabel kelas dan variabel contoh) dan metode, diakses melalui notasi titik. Class variable	Sebuah variabel yang dibagi oleh semua contoh kelas. Variabel kelas didefinisikan dalam kelas tapi di luar metode kelas manapun. Variabel kelas tidak digunakan sesering variabel contoh. Data member	Variabel kelas atau variabel contoh yang menyimpan data yang terkait dengan kelas dan objeknya. Function overloading	Penugasan lebih dari satu perilaku ke fungsi tertentu. Operasi yang dilakukan bervariasi menurut jenis objek atau argumen yang terlibat. Instance variable	Variabel yang didefinisikan di dalam sebuah metode dan hanya dimiliki oleh instance kelas saat ini. Inheritance	Pengalihan karakteristik kelas ke kelas lain yang berasal darinya. Instance	Objek individu dari kelas tertentu. Obyek obj yang termasuk dalam Lingkaran kelas, misalnya, adalah turunan dari Lingkaran kelas. Instantiation	Penciptaan sebuah instance dari sebuah kelas. Method	Jenis fungsi khusus yang didefinisikan dalam definisi kelas. Object	Contoh unik dari struktur data yang didefinisikan oleh kelasnya. Objek terdiri dari kedua anggota data (variabel kelas dan variabel contoh) dan metode. Operator overloading	Penugasan lebih dari satu fungsi ke operator tertentu. Membuat Class Python Statement class digunakan untuk membuat definisi kelas baru. Nama kelas segera mengikuti kelas kata kunci diikuti oleh titik dua sebagai berikut.\nclass ClassName: \u0026lsquo;Optional class documentation string\u0026rsquo; class_suite\nDibawah ini adalah contoh cara membuat class dan penggunaanya :\nclass Employee: \u0026lsquo;Common base class for all employees\u0026rsquo; empCount = 0\ndef init(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1\ndef displayCount(self): print \u0026ldquo;Total Employee %d\u0026rdquo; % Employee.empCount\ndef displayEmployee(self): print \u0026ldquo;Name : \u0026ldquo;, self.name, \u0026ldquo;, Salary: \u0026ldquo;, self.salary Membuat Instance Objects Untuk membuat instances kelas, Anda memanggil class menggunakan nama class dan meneruskan argumen apa pun yang metode init terima.\nThis would create first object of Employee class emp1 = Employee(\u0026ldquo;Zara\u0026rdquo;, 2000) This would create second object of Employee class emp2 = Employee(\u0026ldquo;Manni\u0026rdquo;, 5000) Mengakses Atribut Anda mengakses atribut objek menggunakan dot operator dengan objek. Variabel kelas akan diakses dengan menggunakan nama kelas sebagai berikut :\nemp1.displayEmployee() emp2.displayEmployee() print (\u0026ldquo;Total Employee %d\u0026rdquo; % Employee.empCount) Contoh lengkapnya, silahkan lihat kode dibawah ini.\nclass Employee: \u0026lsquo;Common base class for all employees\u0026rsquo; empCount = 0\ndef init(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1\ndef displayCount(self): print (\u0026ldquo;Total Employee %d\u0026rdquo; % Employee.empCount)\ndef displayEmployee(self): print (\u0026ldquo;Name : \u0026ldquo;, self.name, \u0026ldquo;, Salary: \u0026ldquo;, self.salary)\n#This would create first object of Employee class\u0026rdquo; emp1 = Employee(\u0026ldquo;Zara\u0026rdquo;, 2000) #This would create second object of Employee class\u0026rdquo; emp2 = Employee(\u0026ldquo;Manni\u0026rdquo;, 5000) emp1.displayEmployee() emp2.displayEmployee() print (\u0026ldquo;Total Employee %d\u0026rdquo; % Employee.empCount)\n"}),a.add({id:33,href:"/python/tutorial/akses-database/",title:"Akses database di dalam Python",description:"Kondisi dalam Python.",content:"Standar Interface Python untuk database adalah Python DB-API. Kebanyakan Interface database Python mematuhi standar ini.\nAnda bisa memilih database yang tepat untuk aplikasi Anda. API Database Python mendukung berbagai macam server database seperti.\nGadFly mSQL MySQL PostgreSQL Microsoft SQL Server 2000 Informix Interbase Oracle Sybase SQLite Berikut adalah link untuk mempelajari lebih lengkap daftar antarmuka/interface database Python - Antarmuka dan API Database Python. Anda harus mendownload modul DB API terpisah untuk setiap database yang perlu Anda akses. Sebagai contoh, jika Anda perlu mengakses database Oracle dan juga database MySQL, Anda harus mendownload kedua modul database Oracle dan MySQL.\nAPI DB menyediakan standar minimal untuk bekerja dengan database menggunakan struktur dan sintaks Python sedapat mungkin. API ini meliputi:\nMengimpor modul API. Mendapatkan koneksi dengan database. Menerbitkan pernyataan SQL dan prosedur tersimpan. Menutup koneksi Python memiliki dukungan built-in untuk SQLite. Pada bagian ini, kita akan mempelajari semua konsep menggunakan MySQL. Modul MySQLdb, antarmuka yang populer dengan MySQL tidak kompatibel dengan Python 3. Sebagai gantinya, kita akan menggunakan modul PyMySQL.\nApa itu PyMySQL ? PyMySQL adalah sebuah antarmuka untuk menghubungkan ke server database MySQL dari Python. Ini mengimplementasikan API Database Python v2.0 dan berisi perpustakaan klien MySQL murni-Python. Tujuan PyMySQL adalah penggantian drop-in untuk MySQLdb. Anda dapat melihat dokumentasi lengkap penggunaan PyMySQL di https://pymysql.readthedocs.io/en/latest/.\nCara Instal PyMySQL Sebelum melanjutka, pastikan Anda telah menginstal PyMySQL di komputer Anda. Cukup ketik berikut ini di skrip Python Anda dan jalankan.\nimport pymysql.cursors\nJika menghasilkan hasil berikut, berarti modul MySQLdb tidak terpasang:\nTraceback (most recent call last): File \u0026ldquo;test.py\u0026rdquo;, line 3, in Import PyMySQL ImportError: No module named PyMySQL\nUntuk menginstal modul PyMySQL silahkan gunakan command/perintah berikut di command prompt:\npython -m pip install PyMySQL\nDatabase Connection Sebelum terhubung ke database MySQL, pastikan beberapa hal dibawah ini :\nAnda telah membuat database TESTDB. Anda telah membuat tabel EMPLOYEE di TESTDB. Tabel ini memiliki bidang FIRST_NAME, LAST_NAME, AGE, SEX, dan INCOME. User ID “testuser” dan password “test123” diatur untuk mengakses TESTDB. Python modul PyMySQL terinstal dengan benar pada mesin Anda. Anda telah melalui tutorial MySQL untuk memahami Dasar-Dasar MySQL Berikut ini adalah contoh koneksi dengan database MySQL “TESTDB”\nimport pymysql.cursors\nOpen database connection # db = pymysql.connect(\u0026ldquo;localhost\u0026rdquo;,\u0026ldquo;testuser\u0026rdquo;,\u0026ldquo;test123\u0026rdquo;,\u0026ldquo;TESTDB\u0026rdquo; )\nprepare a cursor object using cursor() method # cursor = db.cursor()\nexecute SQL query using execute() method. # cursor.execute(\u0026ldquo;SELECT VERSION()\u0026quot;)\nFetch a single row using fetchone() method. # data = cursor.fetchone()\nprint (\u0026ldquo;Database version : %s \u0026quot; % data)\ndisconnect from server # db.close() Membuat Tabel Database import pymysql.cursors\nOpen database connection # db = pymysql.connect(\u0026ldquo;localhost\u0026rdquo;,\u0026ldquo;testuser\u0026rdquo;,\u0026ldquo;test123\u0026rdquo;,\u0026ldquo;TESTDB\u0026rdquo; )\nprepare a cursor object using cursor() method # cursor = db.cursor()\nDrop table if it already exist using execute() method. # cursor.execute(\u0026ldquo;DROP TABLE IF EXISTS EMPLOYEE\u0026rdquo;)\nCreate table as per requirement # sql = \u0026ldquo;\u0026ldquo;\u0026ldquo;CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )\u0026rdquo;\u0026rdquo;\u0026rdquo;\ncursor.execute(sql)\ndisconnect from server # db.close() Operasi Insert Contoh berikut, mengeksekusi pernyataan SQL INSERT untuk membuat catatan di tabel EMPLOYEE\nimport pymysql.cursors\nOpen database connection # db = pymysql.connect(\u0026ldquo;localhost\u0026rdquo;,\u0026ldquo;testuser\u0026rdquo;,\u0026ldquo;test123\u0026rdquo;,\u0026ldquo;TESTDB\u0026rdquo; )\nprepare a cursor object using cursor() method # cursor = db.cursor()\nPrepare SQL query to INSERT a record into the database. # sql = \u0026ldquo;\u0026ldquo;\u0026ldquo;INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES (\u0026lsquo;Mac\u0026rsquo;, \u0026lsquo;Mohan\u0026rsquo;, 20, \u0026lsquo;M\u0026rsquo;, 2000)\u0026rdquo;\u0026rdquo;\u0026rdquo; try:\nExecute the SQL command # cursor.execute(sql)\nCommit your changes in the database # db.commit() except:\nRollback in case there is any error # db.rollback()\ndisconnect from server # db.close() Contoh di atas bisa dituliskan sebagai berikut untuk membuat query SQL secara dinamis\nimport pymysql.cursors\nOpen database connection # db = pymysql.connect(\u0026ldquo;localhost\u0026rdquo;,\u0026ldquo;testuser\u0026rdquo;,\u0026ldquo;test123\u0026rdquo;,\u0026ldquo;TESTDB\u0026rdquo; )\nprepare a cursor object using cursor() method # cursor = db.cursor()\nPrepare SQL query to INSERT a record into the database. # sql = \u0026ldquo;INSERT INTO EMPLOYEE(FIRST_NAME,\nLAST_NAME, AGE, SEX, INCOME)\nVALUES ('%s', \u0026lsquo;%s\u0026rsquo;, \u0026lsquo;%d\u0026rsquo;, \u0026lsquo;%c\u0026rsquo;, \u0026lsquo;%d\u0026rsquo; )\u0026rdquo; %\n(\u0026lsquo;Mac\u0026rsquo;, \u0026lsquo;Mohan\u0026rsquo;, 20, \u0026lsquo;M\u0026rsquo;, 2000) try:\nExecute the SQL command # cursor.execute(sql)\nCommit your changes in the database # db.commit() except:\nRollback in case there is any error # db.rollback()\ndisconnect from server # db.close() Read Operation READ Operation pada database apapun berarti mengambil beberapa informasi berguna dari database.\nSetelah koneksi database terbentuk, Anda siap untuk membuat query ke dalam database ini. Anda bisa menggunakan metode fetchone() untuk mengambil satu record atau fetchall() metode untuk mengambil beberapa nilai dari tabel database.\nFetchone () - Ini mengambil baris berikut dari kumpulan hasil query. Set hasil adalah objek yang dikembalikan saat objek kursor digunakan untuk query tabel.\nFetchall () - Ini menjemput semua baris dalam kumpulan hasil. Jika beberapa baris telah diekstraksi dari himpunan hasil, maka akan diambil baris yang tersisa dari kumpulan hasil.\nRowcount - Ini adalah atribut read-only dan mengembalikan jumlah baris yang dipengaruhi oleh metode execute ().\nProsedur berikut menanyakan semua catatan dari tabel EMPLOYEE yang memiliki gaji lebih dari 1000\nimport pymysql.cursors\nOpen database connection # db = pymysql.connect(\u0026ldquo;localhost\u0026rdquo;,\u0026ldquo;testuser\u0026rdquo;,\u0026ldquo;test123\u0026rdquo;,\u0026ldquo;TESTDB\u0026rdquo; )\nprepare a cursor object using cursor() method # cursor = db.cursor()\nPrepare SQL query to INSERT a record into the database. # sql = \u0026ldquo;SELECT * FROM EMPLOYEE\nWHERE INCOME \u0026gt; \u0026lsquo;%d\u0026rsquo;\u0026rdquo; % (1000) try:\nExecute the SQL command # cursor.execute(sql)\nFetch all the rows in a list of lists. # results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # Now print fetched result print (\u0026ldquo;fname = %s,lname = %s,age = %d,sex = %s,income = %d\u0026rdquo; %\n(fname, lname, age, sex, income )) except: print (\u0026ldquo;Error: unable to fetch data\u0026rdquo;)\nmenutup koneksi ke server # db.close() Setelah Anda eksekusi kode diatas, akan muncul hasil seperti dibawah ini : fname = Mac, lname = Mohan, age = 20, sex = M, income = 2000\nUpdate Operation Operasi UPDATE pada database apapun berarti mengupdate satu atau lebih catatan, yang sudah tersedia di database. Prosedur berikut memperbarui semua catatan yang memiliki SEX sebagai ‘M’. Di sini, kita meningkatkan UMUR semua laki-laki satu tahun.\nimport pymysql.cursors\nOpen database connection # db = pymysql.connect(\u0026ldquo;localhost\u0026rdquo;,\u0026ldquo;testuser\u0026rdquo;,\u0026ldquo;test123\u0026rdquo;,\u0026ldquo;TESTDB\u0026rdquo; )\nprepare a cursor object using cursor() method # cursor = db.cursor()\nPrepare SQL query to UPDATE required records # sql = \u0026ldquo;UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = \u0026lsquo;%c\u0026rsquo;\u0026rdquo; % (\u0026lsquo;M\u0026rsquo;) try:\nExecute the SQL command # cursor.execute(sql)\nCommit your changes in the database # db.commit() except:\nRollback in case there is any error # db.rollback()\ndisconnect from server # db.close() Delete Operation Operasi DELETE diperlukan bila Anda ingin menghapus beberapa catatan dari database Anda. Berikut ini adalah prosedur untuk menghapus semua catatan dari EMPLOYEE dimana AGE lebih dari 20\nimport pymysql.cursors\nOpen database connection # db = pymysql.connect(\u0026ldquo;localhost\u0026rdquo;,\u0026ldquo;testuser\u0026rdquo;,\u0026ldquo;test123\u0026rdquo;,\u0026ldquo;TESTDB\u0026rdquo; )\nprepare a cursor object using cursor() method # cursor = db.cursor()\nPrepare SQL query to DELETE required records # sql = \u0026ldquo;DELETE FROM EMPLOYEE WHERE AGE \u0026gt; \u0026lsquo;%d\u0026rsquo;\u0026rdquo; % (20) try:\nExecute the SQL command # cursor.execute(sql)\nCommit your changes in the database # db.commit() except:\nRollback in case there is any error # db.rollback()\ndisconnect from server # db.close() Selain itu masih ada beberapa operasi sebagai berikut :\nCommit Operation db.commit() Rollback Operation db.rollback() Disconnect Operation db.close() Jika Anda menginginkan dokumentasi yang lebih lengkap dari bahasa pemrograman python, silahkan buka dokumentasi resmi dari Python\n"}),a.add({id:34,href:"/python/tutorial/netwotking/",title:"Networking di dalam Python",description:"Kondisi dalam Python.",content:"Python menyediakan dua tingkat akses ke layanan jaringan. Pada tingkat rendah, Anda dapat mengakses dukungan soket dasar dalam sistem operasi yang mendasarinya, yang memungkinkan Anda untuk mengimplementasikan klien dan server untuk kedua protokol berorientasi koneksi dan tanpa sambungan.\nPython juga memiliki pustaka yang menyediakan akses tingkat lebih tinggi ke protokol jaringan tingkat aplikasi tertentu, seperti FTP, HTTP, dan seterusnya.\nBab ini memberi Anda pemahaman tentang konsep paling terkenal dalam Networking - Socket Programming.\nApa itu Socket? Soket adalah titik akhir dari saluran komunikasi dua arah. Soket dapat berkomunikasi dalam suatu proses, antara proses pada mesin yang sama, atau antara proses di berbagai benua.\nSoket dapat diimplementasikan melalui sejumlah jenis saluran yang berbeda: soket domain Unix, TCP, UDP, dan sebagainya. Pustaka socket menyediakan kelas khusus untuk menangani transportasi umum serta antarmuka umum untuk menangani sisanya.\nModul Socket Untuk membuat soket, Anda harus menggunakan fungsi socket.socket () yang tersedia dalam modul soket, yang memiliki sintaks umum\ns = socket.socket (socket_family, socket_type, protocol=0)\nServer Socket Method Method	Penjelasan s.bind()	This method binds address (hostname, port number pair) to socket. s.listen()	This method sets up and start TCP listener. s.accept()	This passively accept TCP client connection, waiting until connection arrives (blocking). Client Socket Method Method	Penjelasan s.connect()	This method actively initiates TCP server connection. General Method Socket Method	Penjelasan s.recv()	This method receives TCP message s.send()	This method transmits TCP message s.recvfrom()	This method receives UDP message s.sendto()	This method transmits UDP message s.close()	This method closes socket socket.gethostname()	Returns the hostname. #!/usr/bin/python # This is server.py file\nimport socket # Import socket module\ns = socket.socket() # Create a socket object host = socket.gethostname() # Get local machine name port = 12345 # Reserve a port for your service. s.bind((host, port)) # Bind to the port\ns.listen(5) # Now wait for client connection. while True: c, addr = s.accept() # Establish connection with client. print \u0026lsquo;Got connection from\u0026rsquo;, addr c.send(\u0026lsquo;Thank you for connecting\u0026rsquo;) c.close() # Close the connection Server Sederhana Untuk menulis server Internet, kami menggunakan fungsi soket yang tersedia di modul soket untuk membuat objek soket. Objek soket kemudian digunakan untuk memanggil fungsi lain untuk menyiapkan server soket.\nSekarang sebut bind(hostname,port) berfungsi untuk menentukan port untuk layanan Anda pada host yang diberikan.\nSelanjutnya, panggil metode penerimaan objek yang dikembalikan. Metode ini menunggu sampai klien terhubung ke port yang Anda tentukan, dan kemudian mengembalikan objek koneksi yang mewakili koneksi ke klien itu.\nClient Sederhana Mari kita menulis program klien yang sangat sederhana yang membuka koneksi ke port yang diberikan 12345 dan host yang diberikan. Ini sangat sederhana untuk membuat klien soket menggunakan fungsi modul soket Python.\nSocket.connect (hosname, port) membuka koneksi TCP ke hostname pada port. Setelah Anda memiliki soket terbuka, Anda dapat membaca darinya seperti objek IO apa pun. Setelah selesai, jangan lupa untuk menutupnya, karena Anda akan menutup file.\nKode berikut adalah klien yang sangat sederhana yang terhubung ke host dan port yang diberikan, membaca data yang tersedia dari soket, dan kemudian keluar\n#!/usr/bin/python # This is client.py file\nimport socket # Import socket module\ns = socket.socket() # Create a socket object host = socket.gethostname() # Get local machine name port = 12345 # Reserve a port for your service.\ns.connect((host, port)) print s.recv(1024) s.close # Close the socket when done Sekarang jalankan server.py ini di latar belakang dan kemudian jalankan di atas client.py untuk melihat hasilnya.\nJalankan server. python server.py \u0026amp;\nSetelah server berjalan lanjutkan\nJalankan client: python client.py\nHasilnya akan seperti ini : Got connection from (\u0026lsquo;127.0.0.1\u0026rsquo;, 48437) Thank you for connecting\nModul Internet pada Python Berikut tabel daftar beberapa modul penting dalam pemrograman Jaringan / Internet Python.\nProtocol	Common function	Port No	Python module HTTP	Web pages	80	httplib, urllib, xmlrpclib NNTP	Usenet news	119	nntplib FTP	Transfer file	20	ftplib, urllib SMTP	Mengirim email	25	smtplib POP3	Fetching email	110	poplib IMAP4	Fetching email	143	imaplib Telnet	Command lines	23	telnetlib Gopher	Document transfers	70	gopherlib, urllib\n"}),a.add({id:35,href:"/python/tutorial/",title:"Tutorial Python",description:"Blog Roberto Kaban",content:""}),a.add({id:36,href:"/artikel/",title:"Artikel",description:"Berisi artikel yang berhubungan dengan Teknologi, Pemrograman, tips dan trik komputer, Perancangan sistem, Jaringan komputer.",content:"Berisi artikel yang berhubungan dengan Teknologi, Pemrograman, tips dan trik komputer, Perancangan sistem, Jaringan komputer.\n"}),a.add({id:37,href:"/coretanku/",title:"Coretanku",description:"Sebatas coretan, cerita, perjalanan hidup dan pengalaman pribadi yang saya tuliskan di blog ini.",content:"Sebatas coretan, cerita, perjalanan hidup dan pengalaman pribadi yang saya tuliskan di blog ini.\n"}),a.add({id:38,href:"/html/",title:"Tutorial HTML",description:"HTML (HyperText Markup Language) merupakan bahasa markup standar untuk membuat struktur halaman website.",content:"HTML (HyperText Markup Language) merupakan bahasa markup standar untuk membuat struktur halaman website.\n"}),a.add({id:39,href:"/javascript/",title:"Tutorial Javascript",description:"JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.",content:"JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.\n"}),a.add({id:40,href:"/mysql/",title:"Tutorial MySQL",description:"MySQL merupakan sistem manajemen database relasional yang berbasis SQL (Structured Query Language).",content:"MySQL merupakan sistem manajemen database relasional yang berbasis SQL (Structured Query Language).\n"}),a.add({id:41,href:"/php/",title:"Tutorial PHP",description:"PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.",content:"PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.\n"}),a.add({id:42,href:"/python/",title:"Tutorial Python",description:"Python merupakan bahasa pemrograman interpretatif yang multiplatform dan berfokus pada keterbacaan kode.",content:"Python merupakan bahasa pemrograman interpretatif yang multiplatform dan berfokus pada keterbacaan kode.\n"}),a.add({id:43,href:"/vbnet/",title:"Tutorial Vb.Net",description:"Vb.Net merupakan bahasa pemrograman untuk membuat aplikasi yang berbasis sistem operasi Windows Microsoft.",content:"Vb.Net merupakan bahasa pemrograman untuk membuat aplikasi yang berbasis sistem operasi Windows Microsoft.\n"}),search.addEventListener('input',b,!0);function b(){var b,e;const d=5;b=this.value,e=a.search(b,{limit:d,enrich:!0});const c=new Map;for(const a of e.flatMap(a=>a.result)){if(c.has(a.doc.href))continue;c.set(a.doc.href,a.doc)}if(suggestions.innerHTML="",suggestions.classList.remove('d-none'),c.size===0&&b){const a=document.createElement('div');a.innerHTML=`No results for "<strong>${b}</strong>"`,a.classList.add("suggestion__no-results"),suggestions.appendChild(a);return}for(const[h,g]of c){const b=document.createElement('div');suggestions.appendChild(b);const a=document.createElement('a');a.href=h,b.appendChild(a);const e=document.createElement('span');e.textContent=g.title,e.classList.add("suggestion__title"),a.appendChild(e);const f=document.createElement('span');if(f.textContent=g.description,f.classList.add("suggestion__description"),a.appendChild(f),suggestions.appendChild(b),suggestions.childElementCount==d)break}}})()