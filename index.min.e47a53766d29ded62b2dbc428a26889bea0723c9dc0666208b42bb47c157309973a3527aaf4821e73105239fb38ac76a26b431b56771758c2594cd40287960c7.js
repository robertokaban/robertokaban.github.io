var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/html/tutorial/pengenalan/",title:"Pengenalan HTML",description:"HTML (Hypertext Markup Language) merupakan bahasa markup yang digunakan untuk menentukan konten dan struktur halaman web.",content:`Apa itu HTML? # HTML adalah HyperText Markup Language. HTML adalah bahasa markup standard untuk membuat halaman Web. HTML mendeskripsikan struktur halaman Web. HTML terdiri dari serangkaian elemen. Elemen HTML memberi tahu browser cara menampilkan konten. Elemen HTML memberi label potongan konten seperti &ldquo;ini adalah judul&rdquo;, &ldquo;ini adalah paragraf&rdquo;, &ldquo;ini adalah tautan&rdquo;, dll. Penulisan Tag HTML # Elemen dalam dokumen HTML ditunjukkan dengan menggunakan tag. Penulisan tag HTML seperti di bawah ini:
&lt;tag&gt;text&lt;/tag&gt; Beberapa tag memiliki teks tambahan di dalamnya yang memberikan informasi tambahan tentang tag; disebut dengan atribut.
&lt;tag atribut1=&quot;nilai1&quot; atribut2=&quot;nilai2&quot;&gt; text &lt;/tag&gt; Nama tag boleh ditulis dengan huruf kecil, huruf kapital, ataupun kombinasi antara huruf kecil dan huruf kapital.
HTML Editor # Teks editor untuk membuat file HTML diantaranya:
Contoh HTML # &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Page Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;My First Heading&lt;/h1&gt; &lt;p&gt;My first paragraph.&lt;/p&gt; &lt;/body&gt; &lt;/html Penjelasan contoh:
Deklarasi &lt;!DOCTYPE html&gt; mendefinisikan bahwa dokumen ini adalah dokumen HTML5 Elemen &lt;html&gt; adalah elemen root dari halaman HTML Elemen &lt;head&gt; berisi informasi meta tentang halaman HTML Elemen &lt;title&gt; menentukan judul untuk halaman HTML (yang ditampilkan di bilah judul browser atau di tab halaman) Elemen &lt;body&gt; mendefinisikan isi dokumen, dan merupakan wadah untuk semua konten yang terlihat, seperti judul, paragraf, gambar, hyperlink, tabel, daftar, dll. Elemen &lt;h1&gt; mendefinisikan heading besar Elemen &lt;p&gt; mendefinisikan paragraf. Elemen HTML? # Elemen HTML didefinisikan oleh tag awal, beberapa konten, dan tag akhir:
&lt;tagname&gt;Konten ada di sini...&lt;/tagname&gt; Elemen HTML adalah segalanya mulai dari tag awal hingga tag akhir:
&lt;h1&gt;Judul Pertama Saya&lt;/h1&gt; &lt;p&gt;Paragraf pertama saya.&lt;/p&gt; Tag Awal Konten Elemen Tag terakhir 01 &lt;h1&gt; Heading Pertama Saya &lt;/h1&gt; 02 &lt;p&gt; Paragraf Pertama Saya &lt;/p&gt; 03 &lt;br&gt; None None Catatan: Beberapa elemen HTML tidak memiliki konten (seperti elemen &lt;br&gt;). Elemen-elemen ini disebut elemen kosong. Elemen kosong tidak memiliki tag akhir!
Web Browser # Tujuan browser web (Chrome, Edge, Firefox, Safari) adalah untuk membaca dokumen HTML dan menampilkannya dengan benar.
Browser tidak menampilkan tag HTML, tetapi menggunakannya untuk menentukan cara menampilkan dokumen
Sejarah HTML # Sejak awal World Wide Web, ada banyak versi HTML:
Tahun Versi 01 1989 Tim Berners-Lee invented www 02 1991 Tim Berners-Lee invented HTML 03 1993 Dave Raggett drafted HTML+ 04 1995 HTML Working Group defined HTML 2.0 05 1997 W3C Recommendation: HTML 3.2 06 1999 W3C Recommendation: HTML 4.01 07 2000 W3C Recommendation: XHTML 1.0 08 2008 WHATWG HTML5 First Public Draft 09 2012 WHATWG HTML5 Living Standard 10 2014 W3C Recommendation: HTML5 11 2016 W3C Candidate Recommendation: HTML 5.1 12 2017 W3C Recommendation: HTML5.1 2nd Edition 13 2017 W3C Recommendation: HTML5.2 Tutorial ini mengikuti standar HTML5 terbaru.
`}),e.add({id:1,href:"/html/tutorial/editor/",title:"Editor HTML",description:"Anda hanya perlu editor teks sederhana untuk mempelajari HTML.Belajar HTML Menggunakan Notepad atau TextEdit",content:`Editor HTML # Anda hanya perlu editor teks sederhana untuk mempelajari HTML.
Belajar HTML Menggunakan Notepad atau TextEdit
Halaman web dapat dibuat dan dimodifikasi dengan menggunakan editor HTML profesional.
Namun, untuk mempelajari HTML kami merekomendasikan editor teks sederhana seperti Notepad (PC) atau TextEdit (Mac).
Kami percaya bahwa menggunakan editor teks sederhana adalah cara yang baik untuk mempelajari HTML.
Membuat file HTML # Ikuti langkah-langkah di bawah ini untuk membuat halaman web pertama Anda dengan Notepad atau TextEdit.
langkah 1: Buka Notepad (PC) Windows 8 atau lebih baru:
Buka Layar Mulai (simbol jendela di kiri bawah layar Anda). Ketik Notepad.
Windows 7 atau sebelumnya:
Buka Mulai &gt; Program &gt; Aksesori &gt; Notepad Langkah 1: Buka TextEdit (Mac)
Buka Finder &gt; Aplikasi &gt; TextEdit
Ubah juga beberapa preferensi agar aplikasi dapat menyimpan file dengan benar. Di Preferensi&gt; Format&gt; pilih &ldquo;Teks Biasa&rdquo;
Kemudian di bawah &ldquo;Buka dan Simpan&rdquo;, centang kotak yang bertuliskan &ldquo;Tampilkan file HTML sebagai kode HTML alih-alih teks yang diformat&rdquo;.
Kemudian buka dokumen baru untuk menempatkan kode.
Langkah 2: Tulis Beberapa HTML Tulis atau salin kode HTML berikut ke Notepad:
Contoh ke HTMLEditors.html
Langkah 3: Simpan Halaman HTML Simpan file di komputer Anda. Pilih File &gt; Simpan sebagai di menu Notepad.
Beri nama file &ldquo;index.html&rdquo; dan atur pengkodean ke UTF-8 (yang merupakan pengkodean pilihan untuk file HTML).
Tip: Anda dapat menggunakan .htm atau .html sebagai ekstensi file. Tidak ada perbedaan, itu terserah Anda.
Langkah 4: Lihat Halaman HTML di Browser Anda Buka file HTML yang disimpan di browser favorit Anda
seperti dibawah ini :
klik dua kali pada file tersebut, atau klik kanan - dan pilih &ldquo;Buka dengan&rdquo;.
Hasilnya akan terlihat seperti ini:
`}),e.add({id:2,href:"/html/tutorial/dokumen-html/",title:"Dokumen HTML",description:"Dokumen **HTML** harus dimulai dengan deklarasi tipe dokumen `<!DOCTYPE html>`",content:`Dokumen HTML # Dokumen HTML harus dimulai dengan deklarasi tipe dokumen &lt;!DOCTYPE html&gt;
Dokumen HTML harus mempunyai tag html. Dimulai dengan tag pembuka &lt;html&gt; dan diakhiri dengan tag penutup &lt;/html&gt;
Dokumen HTML harus mempunyai tag head. Dimulai dengan tag pembuka &lt;head&gt; dan diakhiri dengan tag penutup &lt;/head&gt;
Dokumen HTML harus mempunyai tag body. Dimulai dengan tag pembuka &lt;body dan di akhiri dengan tag penutup &lt;/body&gt;
Element HTML harus terletak di dalam tag body
Contoh Dokumen HTML:
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Hello World&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!--Masukan Element HTML di dalam tag body --&gt; &lt;h1&gt;Hello World&lt;/h1&gt; &lt;p&gt;Halo Dunia&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Hasil # `}),e.add({id:3,href:"/html/tutorial/elements/",title:"Elemen HTML",description:"bisa dikatakan segalanya mulai dari tag awal hingga tag akhir.",content:`Elemen HTML # Apa itu Elemen dalam HTML ? # Elemen HTML bisa dikatakan segalanya mulai dari tag awal hingga tag akhir. Elemen HTML didefinisikan oleh tag awal. Jika elemen berisi konten lain, itu diakhiri dengan tag penutup, di mana nama elemen didahului oleh garis miring seperti yang ditunjukkan di bawah ini dengan beberapa tag.
Contoh Elemen HTML # &lt;p&gt;Elemen HTML&lt;/p&gt; &lt;div&gt;Ini adalah Elemen HTML&lt;/div&gt; Keterangan:
Konten Tag Pembuka Tag Penutup Paragraf &lt;p&gt; &lt;/p&gt; Divisi &lt;div&gt; &lt;/div&gt; Jadi di sini ada dua elemen HTML yaitu, elemen &lt;p&gt;...&lt;/p&gt; dan elemen &lt;div&gt;...&lt;/div&gt;. Ada beberapa elemen yang tidak memerlukan tag penutup seperti &lt;img&gt;, &lt;br&gt;, &lt;hr&gt;, &lt;input&gt;, dll.
`}),e.add({id:4,href:"/mysql/tutorial/pengenalan/",title:"Pengenalan MySQL",description:"Pengenalan MySQL.",content:`Apa itu MySQL # MySQL adalah sebuah sistem manajemen basis data (database management system/DBMS) relasional yang open source atau gratis dan sangat populer. MySQL dikembangkan oleh perusahaan swasta asal Swedia, MySQL AB, yang kemudian diakuisisi oleh perusahaan raksasa teknologi Oracle pada tahun 2008.
MySQL didesain untuk memudahkan pengguna dalam mengakses, mengelola, dan memanipulasi data dalam sebuah basis data secara efisien dan aman. MySQL menggunakan bahasa SQL (Structured Query Language) untuk mengelola dan mengakses data dalam basis data. Bahasa SQL digunakan untuk membuat, memodifikasi, dan menghapus data dalam basis data MySQL.
MySQL biasanya digunakan untuk membangun aplikasi web dan merupakan komponen penting dalam banyak sistem manajemen konten (content management system/CMS) seperti WordPress dan Drupal. MySQL juga mendukung beberapa fitur seperti transaksi ACID (atomicity, consistency, isolation, dan durability) yang memungkinkan pengguna untuk melakukan transaksi yang kompleks dalam basis data.
MySQL memiliki keunggulan dalam hal keamanan, performa, skalabilitas, dan ketersediaan, sehingga membuatnya menjadi pilihan yang tepat untuk pengembangan aplikasi web dan enterprise. Selain itu, MySQL juga kompatibel dengan berbagai sistem operasi seperti Windows, macOS, Linux, dan BSD, sehingga membuatnya mudah digunakan oleh banyak pengembang aplikasi.
Sejarah MySQL # MySQL didirikan pada tahun 1995 oleh tiga pengembang Swedia, yaitu Michael Widenius, David Axmark, dan Allan Larsson. Mereka awalnya mengembangkan MySQL sebagai proyek open source yang diberi nama &ldquo;Mysql&rdquo; (dengan huruf &ldquo;Y&rdquo; kecil), sebuah database management system untuk keperluan internal perusahaan tempat mereka bekerja.
Pada tahun 1996, MySQL dirilis sebagai perangkat lunak open source untuk umum dengan nama &ldquo;MySQL&rdquo; (dengan huruf &ldquo;Y&rdquo; besar). MySQL menjadi populer di kalangan pengembang web, terutama setelah dibundel dengan bahasa pemrograman skrip server-side PHP pada tahun 2000. Pada tahun 2001, MySQL AB didirikan sebagai perusahaan swasta untuk mengembangkan dan memasarkan produk MySQL secara komersial.
MySQL terus mengalami perkembangan dan inovasi, termasuk fitur dan teknologi baru seperti transaksi, indexing, clustering, dan replicasi. MySQL juga mendukung bahasa pemrograman seperti Java, Perl, Python, Ruby, dan C++, serta memiliki konektivitas dengan berbagai jenis platform dan aplikasi.
Pada tahun 2008, Oracle mengakuisisi MySQL AB dengan nilai transaksi sekitar 1 miliar dolar AS. Setelah diakuisisi, MySQL tetap menjadi perangkat lunak open source, namun sejumlah pengembang dan komunitas teknologi menyatakan kekhawatiran atas masa depan MySQL dalam tangan Oracle.
Pengembangan MySQL terus berlanjut dan sejumlah fork atau cabang pengembangan MySQL seperti MariaDB dan Percona Server juga tersedia sebagai alternatif bagi pengguna yang membutuhkan fitur dan kemampuan lebih dari MySQL. Hingga saat ini, MySQL masih digunakan oleh jutaan pengguna dan menjadi salah satu sistem manajemen basis data paling populer dan andal di dunia.
Keunggulan MySQL # Berikut adalah beberapa keunggulan MySQL:
Open source: MySQL adalah perangkat lunak open source yang dapat diunduh dan digunakan secara gratis. Ini memungkinkan banyak pengembang dan organisasi untuk menggunakannya tanpa harus membayar biaya lisensi yang mahal.
Kinerja yang baik: MySQL terkenal karena kinerjanya yang cepat dan efisien. Dalam banyak tes benchmark, MySQL seringkali menduduki peringkat atas dalam hal kinerja database.
Skalabilitas: MySQL dapat digunakan untuk mengelola basis data yang sangat besar dan kompleks dengan jumlah transaksi yang tinggi. MySQL juga mendukung replikasi dan clustering, yang memungkinkan pengguna untuk membuat database yang lebih besar dan lebih andal.
Ketersediaan: MySQL tersedia untuk berbagai jenis sistem operasi seperti Windows, Linux, macOS, dan BSD, sehingga membuatnya mudah digunakan oleh banyak pengembang aplikasi. MySQL juga memiliki dukungan yang baik dari komunitas pengembang dan tersedia dalam berbagai bahasa.
Keamanan: MySQL menyediakan fitur keamanan yang kuat seperti enkripsi SSL dan autentikasi pengguna yang aman. MySQL juga memungkinkan pengguna untuk menerapkan aturan akses yang ketat dan kontrol akses pengguna.
Dukungan untuk bahasa SQL: MySQL menggunakan bahasa SQL (Structured Query Language) yang populer dan mudah dipelajari. Bahasa SQL dapat digunakan untuk memanipulasi data dalam database, termasuk membuat, mengedit, dan menghapus data.
Integrasi dengan berbagai aplikasi: MySQL kompatibel dengan banyak bahasa pemrograman dan teknologi, seperti PHP, Java, Perl, Python, dan Ruby, serta mendukung berbagai jenis aplikasi dan platform, seperti WordPress, Drupal, dan Joomla.
Secara keseluruhan, MySQL merupakan sebuah sistem manajemen basis data yang handal, cepat, dan fleksibel dengan dukungan yang baik dari komunitas pengembang. Karena itu, MySQL menjadi pilihan yang populer dan andal untuk pengembangan aplikasi web dan enterprise.
Perbedaan MySQL dengan Database lain # Berikut adalah beberapa perbedaan antara MySQL dengan database lain:
Open source: MySQL adalah salah satu dari beberapa database open source yang tersedia secara gratis dan dapat diunduh oleh siapa saja. Hal ini berbeda dengan beberapa database lain seperti Oracle dan Microsoft SQL Server yang memerlukan lisensi berbayar.
Skalabilitas: MySQL dapat digunakan untuk mengelola basis data yang sangat besar dan kompleks dengan jumlah transaksi yang tinggi. MySQL juga mendukung replikasi dan clustering, yang memungkinkan pengguna untuk membuat database yang lebih besar dan lebih andal.
Ketersediaan: MySQL tersedia untuk berbagai jenis sistem operasi seperti Windows, Linux, macOS, dan BSD, sehingga membuatnya mudah digunakan oleh banyak pengembang aplikasi. MySQL juga memiliki dukungan yang baik dari komunitas pengembang dan tersedia dalam berbagai bahasa.
Keamanan: MySQL menyediakan fitur keamanan yang kuat seperti enkripsi SSL dan autentikasi pengguna yang aman. MySQL juga memungkinkan pengguna untuk menerapkan aturan akses yang ketat dan kontrol akses pengguna.
Bahasa SQL: MySQL menggunakan bahasa SQL (Structured Query Language) yang populer dan mudah dipelajari. Bahasa SQL dapat digunakan untuk memanipulasi data dalam database, termasuk membuat, mengedit, dan menghapus data.
Integrasi dengan aplikasi: MySQL kompatibel dengan banyak bahasa pemrograman dan teknologi, seperti PHP, Java, Perl, Python, dan Ruby, serta mendukung berbagai jenis aplikasi dan platform, seperti WordPress, Drupal, dan Joomla.
Beberapa database lain seperti Oracle dan Microsoft SQL Server memiliki beberapa keunggulan dan fitur yang berbeda dibandingkan dengan MySQL. Oleh karena itu, pemilihan database terbaik tergantung pada kebutuhan dan kebutuhan spesifik pengguna.
`}),e.add({id:5,href:"/vbnet/tutorial/pengenalan/",title:"Pengenalan Vb.Net",description:"Pengenalan Vb.Net.",content:`Apa itu Vb.Net # VB.NET adalah bahasa pemrograman berorientasi objek yang dikembangkan oleh Microsoft. VB.NET adalah bahasa pemrograman turunan dari Visual Basic, dan merupakan bagian dari platform .NET Framework. VB.NET digunakan untuk mengembangkan aplikasi desktop dan web, serta aplikasi berbasis jaringan dan aplikasi mobile.
VB.NET dirilis pada tahun 2002 dan terus dikembangkan oleh Microsoft. VB.NET memiliki sintaks yang mudah dipahami dan dipelajari, serta memiliki banyak fitur canggih yang memungkinkan pengembang untuk membangun aplikasi yang kompleks dan kuat.
Beberapa fitur penting dari VB.NET antara lain:
Berorientasi objek: VB.NET adalah bahasa pemrograman berorientasi objek yang memungkinkan pengembang untuk membangun aplikasi dengan struktur yang jelas dan mudah dipelihara.
Integrasi dengan .NET Framework: VB.NET sepenuhnya terintegrasi dengan platform .NET Framework, dan memberikan akses penuh ke semua fitur dan layanan yang disediakan oleh platform tersebut.
Interoperabilitas: VB.NET mendukung interoperabilitas dengan bahasa pemrograman lain di platform .NET Framework, sehingga memungkinkan pengembang untuk mengintegrasikan kode yang ditulis dalam bahasa pemrograman yang berbeda.
Kemudahan pengembangan: VB.NET memiliki sintaks yang mudah dipahami dan dipelajari, serta memiliki banyak pustaka dan kerangka kerja yang tersedia untuk mempercepat pengembangan aplikasi.
Akses database: VB.NET memiliki dukungan yang kuat untuk akses database, dan memungkinkan pengembang untuk mengakses database dengan mudah menggunakan teknologi seperti ADO.NET dan LINQ.
Keunggulan Vb.Net # Berikut adalah beberapa keunggulan dari VB.NET:
Mudah dipelajari: VB.NET dirancang agar mudah dipelajari dan dipahami oleh pemula. Sintaks bahasa yang sederhana dan jelas, serta kemampuan drag-and-drop pada IDE, membuat pengembangan aplikasi dengan VB.NET menjadi lebih cepat dan mudah.
Berorientasi objek: VB.NET adalah bahasa berorientasi objek, yang memungkinkan pengembang untuk membangun aplikasi dengan struktur yang jelas dan mudah dipelihara. Hal ini juga memungkinkan pengembang untuk memanfaatkan konsep seperti polimorfisme, enkapsulasi, dan pewarisan dalam pengembangan aplikasi.
Integrasi dengan .NET Framework: VB.NET sepenuhnya terintegrasi dengan .NET Framework, yang merupakan platform pengembangan aplikasi terkemuka saat ini. Dengan integrasi yang kuat ini, VB.NET dapat mengakses semua fitur dan layanan yang disediakan oleh .NET Framework.
Dukungan database yang kuat: VB.NET memiliki dukungan yang kuat untuk akses database, dengan menggunakan teknologi seperti ADO.NET dan LINQ. Hal ini memudahkan pengembang untuk mengakses database dengan mudah dan efisien.
Lingkungan pengembangan yang lengkap: VB.NET dilengkapi dengan lingkungan pengembangan terintegrasi (IDE) yang lengkap, yaitu Visual Studio. IDE ini dilengkapi dengan banyak fitur seperti debugging, analisis kode, dan pengembangan aplikasi web. Hal ini memudahkan pengembang untuk mengembangkan aplikasi dengan cepat dan efisien.
Kompatibilitas mundur: VB.NET memiliki kemampuan untuk menjalankan kode aplikasi yang ditulis dalam versi Visual Basic sebelumnya, sehingga memungkinkan pengembang untuk memperbarui kode lama dan menggunakannya pada platform yang lebih baru.
Alterlatif selain Vb.Net # Beberapa alternatif selain VB.NET yang dapat digunakan untuk pengembangan aplikasi desktop berbasis Windows antara lain:
C#: C# adalah bahasa pemrograman yang dikembangkan oleh Microsoft dan didesain untuk digunakan dengan platform .NET. Seperti VB.NET, C# juga berorientasi objek dan menyediakan lingkungan pengembangan yang lengkap, yaitu Visual Studio.
Java: Java adalah bahasa pemrograman yang sangat populer untuk pengembangan aplikasi desktop dan web. Dalam pengembangan aplikasi desktop berbasis Windows, Java dapat digunakan dengan memanfaatkan teknologi seperti JavaFX atau Swing.
Python: Python adalah bahasa pemrograman yang populer dan mudah dipelajari. Python dapat digunakan untuk pengembangan aplikasi desktop berbasis Windows dengan memanfaatkan beberapa library seperti PyQt atau wxPython.
Electron: Electron adalah framework open-source yang memungkinkan pengembang untuk membangun aplikasi desktop dengan menggunakan HTML, CSS, dan JavaScript. Electron memungkinkan pengembang untuk menghasilkan aplikasi desktop yang dapat dijalankan pada berbagai platform, termasuk Windows.
Lazarus: Lazarus adalah lingkungan pengembangan aplikasi yang gratis dan open-source, yang mendukung pengembangan aplikasi desktop berbasis Windows dengan bahasa pemrograman Object Pascal. Lazarus juga menyediakan komponen visual yang mirip dengan yang ada pada Delphi.
`}),e.add({id:6,href:"/html/tutorial/attributes/",title:"Atribut HTML",description:"HTML Attribute adalah suatu atribut untuk melengkapi informasi dari suatu elemen HTML",content:`Apa Itu HtML Attribute ? # HTML Attribute adalah suatu atribut untuk melengkapi informasi dari suatu elemen HTML
Semua elemen HTML dapat memiliki Attribute.
Attribute HtML memberikan informasi tambahan terhadap elemen HTML.
Attribute selalu berada diawal tag, seperti:
&lt;a href=&quot;google.com&quot;&gt;Google&lt;/a&gt; Attribute selalu berbapasangan dengan value/nilai, seperti: href=&quot;google.com&quot;
Value/Nilai dari attribute harus selalu dibungkus menggunakan double quote/petik dua (&quot;).
Contoh Penerapan Attribute Pada HTML # href Attribute # href berfungsi untuk menentukan URL halaman yang ingin dituju.
&lt;html&gt; &lt;a href=&quot;Github.com&quot;&gt;Github Website&lt;/a&gt; &lt;/html&gt; src Attribute # src berfungsi untuk menentukan lokasi gambar file yang ingin ditampilkan.
&lt;html&gt; &lt;img src=&quot;attribute.png&quot; /&gt; &lt;/html&gt; Ada dua cara untuk mendefinisikan URL di attribute src
Absolute URL - Memasukan gambar dari hosting eksternal/tidak dalam local, seperti:
&lt;img src=&quot;https://avatars.githubusercontent.com/u/76999048?s=200&amp;v=4&quot; &gt; Relative URL
&lt;img src=&quot;/src/images/avatar.png&quot; &gt; width &amp; height Attribute # width dan height berfungsi untuk menentukan lebar dan tinggi gambar dalam satuan piksel (px).
&lt;img src=&quot;/src/images/avatar.png&quot; width=&quot;32&quot; height=&quot;32&quot; /&gt; alt Attribute # alt berfungsi untuk menggantikan gambar dengan tulisan, jika gambar tidak bisa ditampilkan dengan alasan tertentu.
&lt;img src=&quot;/src/images/avatar.png&quot; alt=&quot;avatar&quot; /&gt; style Attribute # style berfungsi untuk menambahkan gaya/style pada elemen seperti color, font, size, dan lainnya.
&lt;h1 style=&quot;color: green&quot;&gt;Hello World&lt;/h1&gt; lang Attribute # lang berfungsi untuk mendeklarasikan bahasa yang digunakan dalam website, untuk membantu mesin pencari / browser.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;body&gt; Hello World &lt;/body&gt; &lt;/html&gt; title Attribute # title berfungsi sebagai penambah informasi dalam suatu elemen, yang jika dihover akan memunculkan tooltip
&lt;span title=&quot;Komunitas untuk mengelola dan menulis kode&quot;&gt;Bellshade&lt;/span&gt; class Attribute # class berfungsi untuk menunjuk nama class dalam style sheet, dapat digunakan untuk mengakses dan memanipulasi elemen di Javascript.
&lt;div class=&quot;kota&quot;&gt; &lt;p&gt;Jakarta terletak di pulau Jawa, Indonesia.&lt;/p&gt; &lt;/div&gt; id Attribute # id berfungsi untuk menentukan id unik untuk elemen HTML, dapat digunakan untuk menunjuk deklarasi style tertentu dalam style sheet dan juga digunakan untuk mengakses dan memanipulasi elemen dengan id tertentu di Javascript.
&lt;html&gt; &lt;h1 id=&quot;judulSaya&quot;&gt;Judul Saya&lt;/h1&gt; &lt;/html&gt; method Attribute # method berfungsi untuk menentukan cara mengirim data formulir (data formulir dikirim ke halaman yang ditentukan dalam atribut action).
Form-data dapat dikirim sebagai variabel URL (dengan method=&quot;get&quot;) atau sebagai transaksi posting HTTP (dengan method=&ldquo;post&rdquo;).
Catatan tentang GET:
Menambahkan data formulir ke dalam URL dalam pasangan nama/nilai Panjang URL dibatasi (sekitar 3000 karakter) Jangan pernah menggunakan GET untuk mengirim data sensitif! (akan terlihat di URL) Berguna untuk pengiriman formulir di mana pengguna ingin menandai hasilnya GET lebih baik untuk data yang tidak aman, seperti string kueri di Google &lt;form action=&quot;/action_page.php&quot; method=&quot;get&quot;&gt; Nama Depan: &lt;input type=&quot;text&quot; name=&quot;namaDepan&quot; /&gt;&lt;br /&gt; Nama Belakang: &lt;input type=&quot;text&quot; name=&quot;namaBelakang&quot; /&gt;&lt;br /&gt; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt; &lt;/form&gt; Catatan tentang POST:
Menambahkan formulir-data di dalam isi permintaan HTTP (data tidak ditampilkan dalam URL) Tidak memiliki batasan ukuran Pengiriman formulir dengan POST tidak dapat di-bookmark &lt;form action=&quot;/action_page.php&quot; method=&quot;post&quot;&gt; Nama: &lt;input type=&quot;text&quot; name=&quot;nama&quot; /&gt;&lt;br /&gt; Password: &lt;input type=&quot;text&quot; name=&quot;password&quot; /&gt;&lt;br /&gt; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt; &lt;/form&gt; `}),e.add({id:7,href:"/coretanku/akhir-tahun-menyelesaikan-laporan-hibah-pkkm-liga-3-tahun-2024/",title:"Akhir Tahun: Menyelesaikan Laporan Hibah PKKM Liga 3 tahun 2024",description:"Akhir tahun 2024 menjadi momen yang penuh kesibukan dan tanggung jawab bagi kami di Program Studi. Saat orang lain menikmati waktu liburan, saya bersama tim fokus menyelesaikan laporan hibah Program Kompetisi Kampus Merdeka (PKKM) Liga 3. Sebagai Ketua Program Studi, menyelesaikan laporan ini bukan hanya soal kewajiban, tetapi juga bentuk amanah besar yang harus dipertanggungjawabkan dengan baik. Prodi kami menjadi salah satu pemenang hibah PKKM Liga 3 tahun ini.",content:` Akhir tahun 2024 menjadi momen yang penuh kesibukan dan tanggung jawab bagi kami di Program Studi. Saat orang lain menikmati waktu liburan, saya bersama tim fokus menyelesaikan laporan hibah Program Kompetisi Kampus Merdeka (PKKM) Liga 3. Sebagai Ketua Program Studi, menyelesaikan laporan ini bukan hanya soal kewajiban, tetapi juga bentuk amanah besar yang harus dipertanggungjawabkan dengan baik.
Prodi kami (Teknik Informatika S1, Institut Teknologi dan Bisnis Indonesia) menjadi salah satu pemenang hibah PKKM Liga 3 tahun ini, sebuah pencapaian yang memberikan dampak besar bagi perkembangan institusi. Pelaksanaan hibah berjalan lancar, meskipun ada beberapa tantangan dalam penyelesaian laporan. Salah satu pekerjaan yang harus dirampungkan adalah pelaporan kegiatan kewirausahaan yang melibatkan tiga kelompok mahasiswa, laporan kegiatan inovasi pembelajaran, dan penyusunan laporan akhir serta laporan keuangan.
Pelaksanaan Program Sesuai Proposal # Kami berhasil melaksanakan semua kegiatan yang telah direncanakan sesuai proposal tanpa ada pengembalian dana. Setiap anggaran digunakan secara optimal, sesuai dengan tujuan program. Hal ini memberikan kebanggaan tersendiri bagi kami sebagai institusi pendidikan yang bertanggung jawab. Setelah bekerja keras hingga larut malam, akhirnya pada tanggal 27 Desember, laporan selesai disusun dan berhasil upload. Meski pulang ke rumah dan sampai pukul 12 malam, rasa lega dan puas jauh lebih mendominasi.
Manfaat yang Dirasakan oleh Prodi # Hibah ini memberikan dampak positif yang besar bagi program studi. Salah satu pencapaian utama adalah tersusunnya kurikulum berbasis Outcome-Based Education (OBE), yang berorientasi pada hasil pembelajaran terukur. Pendekatan ini memastikan bahwa lulusan memiliki kompetensi yang relevan dengan kebutuhan industri. Selain itu, program ini juga menghasilkan perangkat pembelajaran berbasis Project-Based Learning (PBL) dan Case Study, yang membantu mahasiswa memahami konsep melalui pengalaman praktis dan kasus nyata.
Perubahan ini memberikan nilai tambah yang besar bagi program studi. Dengan kurikulum berbasis OBE dan perangkat pembelajaran yang lebih aplikatif, program studi tidak hanya berorientasi pada teori, tetapi juga pada kemampuan mahasiswa untuk beradaptasi di dunia kerja.
Manfaat bagi Mahasiswa # Bagi mahasiswa, hibah PKKM membuka berbagai peluang untuk mengembangkan diri. Mereka terlibat dalam program-program unggulan, seperti;
KKN Tematik, yang memberikan pengalaman langsung untuk terjun ke masyarakat dan memecahkan masalah nyata. Asistensi Mengajar, di mana mahasiswa berperan aktif dalam membantu proses belajar-mengajar di sekolah-sekolah. Program Kewirausahaan, yang mendorong mahasiswa untuk memulai dan mengelola bisnis kecil sebagai bagian dari pengalaman belajar. Program-program ini tidak hanya memperkaya kemampuan akademik, tetapi juga memberikan keterampilan praktis yang sangat dibutuhkan di dunia kerja. Mahasiswa juga belajar untuk bekerja dalam tim, memecahkan masalah, dan meningkatkan kemampuan komunikasi mereka.
Manfaat bagi Dosen dan Tenaga Kependidikan # Hibah ini juga memberikan manfaat besar bagi dosen dan tenaga kependidikan. Sebanyak lima dosen dan satu tenaga kependidikan dari program studi kami mengikuti berbagai pelatihan dan sertifikasi. Program ini tidak hanya meningkatkan kompetensi mereka dalam bidang akademik dan profesional, tetapi juga memberikan pengakuan resmi atas keahlian mereka. Dengan keterampilan baru yang mereka peroleh, dosen mampu menciptakan metode pembelajaran yang lebih inovatif, sementara tenaga kependidikan dapat memberikan dukungan administratif yang lebih efektif.
Di tengah manfaat besar yang dirasakan, akhir tahun ini tetap menjadi momen yang penuh kerja keras. Menyelesaikan laporan hibah adalah bagian dari tanggung jawab untuk memastikan bahwa semua kegiatan yang telah dijalankan dapat dipertanggungjawabkan dengan baik. Walaupun tenggat waktu pelaporan adalah 31 Desember, kami bersyukur berhasil menyelesaikan semuanya pada 27 Desember.
Proses penyusunan laporan ini menjadi pengingat bahwa kerja keras dan tanggung jawab adalah kunci utama dalam menjaga kepercayaan yang telah diberikan. Hibah PKKM Liga 3 ini tidak hanya memberikan manfaat langsung bagi program studi, mahasiswa, dan dosen, tetapi juga menjadi fondasi untuk pengembangan institusi yang lebih baik di masa depan.
Harapan setelah pelaporan # Dengan selesainya laporan hibah, kami berharap tidak ada kendala dalam proses verifikasi dan evaluasi. Kami yakin bahwa semua kegiatan telah dilaksanakan dengan sungguh-sungguh dan sesuai dengan tujuan program. Semoga ke depan, program seperti ini terus berlanjut dan memberikan lebih banyak manfaat bagi institusi pendidikan di seluruh Indonesia.
Akhir tahun ini ditutup dengan rasa syukur dan kebahagiaan. Meskipun penuh kerja keras, pengalaman ini memberikan kepuasan yang mendalam. Semoga tahun depan menjadi awal yang baik untuk langkah-langkah baru yang lebih besar dan berarti.
Kegiatan Penyusunan Laporan Penyusunan Laporan Sampai Malam Diskusi dengan Perawakilan Tim Dengrafis Serah Terima Pekerjaan dengan Tim Dengrafis `}),e.add({id:8,href:"/coretanku/wisuda-bibik-tengah-faresta/",title:"Wisuda Bibik Tengah Faresta",description:"Tanggal 20 Desember 2024 adalah hari yang sangat berarti bagi Bibik Tengah Faresta (adik istri saya). Di tengah kesibukan saya yang harus menyelesaikan pelaporan hibah PKKM untuk program di prodi kami, saya dan istri memutuskan untuk menyempatkan diri merayakan momen spesial yang sangat penting bagi Bibik Tengah, yang baru saja menyelesaikan pendidikan S1-nya. Ini adalah langkah besar dalam perjalanan hidupnya setelah sebelumnya berhasil menyelesaikan pendidikan D3.",content:` Tanggal 20 Desember 2024 adalah hari yang sangat berarti bagi Bibik Tengah Faresta (adik istri saya). Di tengah kesibukan saya yang harus menyelesaikan pelaporan hibah PKKM untuk program di prodi kami, saya dan istri memutuskan untuk menyempatkan diri merayakan momen spesial yang sangat penting bagi Bibik Tengah, yang baru saja menyelesaikan pendidikan S1-nya. Ini adalah langkah besar dalam perjalanan hidupnya setelah sebelumnya berhasil menyelesaikan pendidikan D3.
Perjalanan Menuju Sukses # Bagi Bibik Tengah, wisuda kali ini bukan hanya sekadar seremoni, tetapi juga pencapaian yang sangat membanggakan. Setelah lulus dari D3, ia melanjutkan pendidikan ke jenjang S1 dan kini berhasil menyelesaikan studi dengan sukses. Dalam keluarga kami, pencapaian ini sangat disyukuri karena menunjukkan kerja keras, tekad, dan perjuangan. Satu hal yang membanggakan adalah bahwa setelah menyelesaikan studinya, Bibik Tengah tidak berhenti untuk berjuang. Ia telah melamar untuk menjadi CPNS dan kini kami semua menantikan pengumuman yang akan keluar pada Januari 2025. Semoga hasilnya positif, dan ia semoga berhasil menjadi bagian dari abdi negara.
Foto Keluarga di Studio dan Makan Bersama # Meskipun saya dan istri tidak bisa hadir langsung dalam acara wisuda, kami tetap berusaha untuk hadir di acara foto keluarga yang diadakan setelah itu. Bibik Tengah sangat menginginkan momen kebersamaan ini sebagai kenang-kenangan spesial di hari wisudanya. Momen tersebut menjadi kesempatan bagi kami untuk berkumpul bersama keluarga besar dan mengabadikan kenangan tersebut dalam sebuah foto keluarga yang akan selalu dikenang.
Kami membawa Faresta yang berusia tiga tahun dan Floyd yang baru berusia enam bulan. Seperti yg di prediksi, tetap seperti biasa, Faresta sulit untuk diam apalagi diajak foto, berbeda dengan Floyd lebih kalem. Suasana di studio yang ramai antrian foto, tambah buat saya kerepotan karena tingkah laku Faresta yang tidak bisa diam.
Setelah sesi foto selesai, kami melanjutkan perayaan dengan makan bersama di Restoran Kampung Kecil, yang terletak di Padang Bulan, tepatnya di Jalan Ngumban Surbakti, dekat dengan Flyover Simpang Pos. Tempat ini suasananya nyaman dan makanan yang lumayan enak, cocok untuk ngumpul keluarga. Tempat ini juga memiliki suasana yang tenang tanpa gangguan.
Momen wisuda ini, sepertinya bukan hanya sekadar seremoni yang merayakan kelulusan, tetapi juga sebuah refleksi tentang pentingnya pendidikan dan perjuangan untuk meraih cita-cita. Bibik Tengah telah melalui berbagai tantangan dan rintangan dalam perjalanan akademiknya, dan hari wisudanya menjadi simbol dari segala usaha dan kerja keras yang telah ia lakukan. Kami semua merasa bangga atas pencapaian ini dan berharap ia terus melangkah maju untuk meraih impian-impian lainnya.
Kami berharap semoga Bibik Tengah bisa berhasil dalam seleksi CPNS yang akan diumumkan pada Januari 2025. Bila ia berhasil lolos, ini akan menjadi langkah besar dalam memulai kariernya, tetapi juga dalam kehidupan pribadi. Kami juga berharap agar ia selalu diberikan kesehatan, keberkahan, dan kebahagiaan dalam setiap langkah yang diambil ke depannya.
Walaupun saya dan istri tidak bisa hadir langsung di tempat wisuda, kami tetap merasa sangat bahagia karena bisa berpartisipasi dalam momen kebersamaan di studio foto dan makan bersama. Momen kebersamaan ini mengingatkan kami akan pentingnya meluangkan waktu untuk keluarga, terutama di tengah kesibukan dan pekerjaan yang kadang menyita waktu.
`}),e.add({id:9,href:"/coretanku/mensyukuri-usia-40-tahun-refleksi-perjalanan-dan-harapan-copy/",title:"Mensyukuri Usia 40 Tahun: Refleksi Perjalanan dan Harapan",description:"Bulan ini, saya genap berusia 40 tahun. Angka 40 ini memiliki arti yang sangat mendalam, bukan hanya sekadar pertambahan usia, tetapi juga perjalanan panjang yang penuh pelajaran dan pengalaman. Saya merasa perlu merenungkan setiap langkah yang telah dijalani hingga mencapai titik ini, sekaligus mensyukuri nikmat dari Yang Maha Kuasa, yang begitu besar dalam hidup saya.",content:` Menginjak Usia 40 Tahun: Sebuah Refleksi # Bulan ini, saya genap berusia 40 tahun. Angka 40 ini memiliki arti yang sangat mendalam, bukan hanya sekadar pertambahan usia, tetapi juga perjalanan panjang yang penuh pelajaran dan pengalaman. Saya merasa perlu merenungkan setiap langkah yang telah dijalani hingga mencapai titik ini, sekaligus mensyukuri nikmat dari Yang Maha Kuasa, yang begitu besar dalam hidup saya.
Perjalanan menuju usia ini tentu bukan hal yang sederhana. Banyak cobaan yang datang, tetapi ada juga banyak kebahagiaan yang membuat langkah ini terasa berarti. Nikmat terbesar yang saya rasakan adalah keberadaan keluarga di sisi saya. Anak-anak yang menjadi kebanggaan serta istri yang selalu mendampingi adalah hadiah terbesar yang tidak pernah berhenti saya syukuri. Kehadiran mereka menguatkan setiap langkah yang saya tempuh, terutama ketika menghadapi berbagai rintangan.
Tantangan dan Peluang # Akhir tahun ini saya juga sedang menjalani salah satu tantangan besar, yaitu melanjutkan studi. Belajar adalah bagian dari hidup yang tidak pernah berhenti. Tugas ini menjadi jalan bagi saya untuk terus berkembang dan memberikan manfaat lebih besar kepada banyak orang. Tentu ada banyak tantangan yang harus dilewati. Waktu sering kali terasa terbatas karena harus membagi perhatian antara keluarga, pekerjaan, dan studi. Meski begitu, semua ini menjadi bagian dari perjalanan yang memberikan banyak pelajaran hidup.
Momen Evaluasi Diri # Menurut saya, usia 40 tahun adalah momen penting untuk melakukan evaluasi terhadap diri sendiri. Ada begitu banyak hal yang telah dicapai, tetapi masih banyak pula yang ingin diwujudkan. Salah satu harapan besar saya adalah diberikan kesehatan. Dengan tubuh yang sehat, setiap tanggung jawab yang ada dapat dijalani dengan lebih baik. Kesehatan juga menjadi kunci untuk tetap dapat menjalani aktivitas sehari-hari bersama keluarga tercinta.
Kesabaran sebagai Kunci Menghadapi Ujian Hidup # Saya juga berharap dapat terus diberikan kesabaran. Hidup sering kali memberikan ujian yang datang tanpa diduga. Kesabaran adalah bekal penting agar setiap tantangan bisa dihadapi dengan bijaksana. Dalam perjalanan ini, saya belajar bahwa kesabaran akan membuka jalan untuk menemukan solusi terbaik, sekaligus membuat hati tetap tenang.
Pendidikan dan Proses Pembelajaran yang Berarti # Studi yang saat ini saya jalani juga menjadi salah satu prioritas besar. Saya berharap segala proses dalam menyelesaikan kuliah ini dapat berjalan dengan lancar. Ada banyak hal yang harus dipelajari, diteliti, dan dipersiapkan. Meski tidak mudah, saya percaya bahwa setiap usaha yang dilakukan akan membuahkan hasil yang baik jika dilakukan dengan sepenuh hati.
Berbagi Manfaat dengan Lingkungan Sekitar # Di sisi lain, saya juga merasa semakin perlu untuk berbagi manfaat dengan orang-orang di sekitar. Selama perjalanan hidup ini, saya mendapatkan begitu banyak pelajaran dan pengalaman yang sangat berharga. Semua itu rasanya akan lebih bermakna jika dapat digunakan untuk membantu orang lain. Sebagai seorang pengajar, saya memiliki kesempatan untuk berkontribusi dalam membentuk generasi muda yang akan menjadi penerus bangsa. Hal ini adalah sebuah tanggung jawab besar yang harus saya jalani dengan sebaik mungkin.
Makna Kebahagiaan yang Sebenarnya # Pada usia ini, saya semakin menyadari bahwa kebahagiaan tidak hanya datang dari apa yang kita terima, tetapi juga dari apa yang kita berikan. Dalam setiap kesempatan, saya ingin terus meningkatkan kualitas diri agar bisa menjadi pribadi yang lebih bermanfaat. Hidup adalah perjalanan untuk terus belajar dan berbuat baik.
Rasa Terima Kasih kepada Orang-Orang Terkasih # Refleksi ini juga tidak lengkap tanpa menyampaikan rasa terima kasih kepada semua orang yang telah memberikan dukungan, baik secara langsung maupun tidak langsung. Keluarga, teman-teman, dan rekan kerja, adik-adik mahasiswa yang telah menjadi bagian dari cerita hidup yang begitu berarti. Kehadiran mereka memberikan warna dan semangat dalam menghadapi setiap tantangan.
Babak Baru di Usia 40 Tahun # Usia 40 tahun adalah babak baru. Saya percaya bahwa perjalanan ini masih panjang, dan setiap langkah ke depan adalah kesempatan untuk menjadi lebih baik. Dengan terus belajar, berusaha, dan bersyukur, saya berharap perjalanan hidup ini dapat memberikan kebahagiaan dan keberkahan, tidak hanya untuk diri saya sendiri, tetapi juga untuk orang-orang di sekitar.
Doa dan Harapan untuk Masa Depan # Akhir kata dalam blog ini, saya memohon kepada Yang Maha Kuasa agar selalu diberikan kekuatan, kesehatan, dan ketabahan untuk menjalani setiap langkah hidup ini. Semoga segala upaya yang dilakukan dapat memberikan hasil terbaik, dan setiap mimpi yang diperjuangkan dapat terwujud dengan cara yang indah.
Selamat Ulang Tahu nntuk diri saya sendiri # Selamat ulang tahun untuk diri saya sendiri.Perjalanan ini masih panjang, dan saya siap melangkah lebih jauh dengan keyakinan dan doa yang terus dipanjatkan. Semoga usia baru ini menjadi awal yang penuh berkah dan kebahagiaan. Amin.
Foto dengan Keluarga Bersama Teman Sekantor Bersama Tim Prodi `}),e.add({id:10,href:"/coretanku/teman-dalam-kehidupan/",title:"Teman dalam Kehidupan",description:"Hidup adalah perjalanan panjang yang dipenuhi dengan berbagai pengalaman dan pelajaran. Salah satu aspek penting dalam perjalanan hidup ini adalah memilih pasangan hidup. Pasangan hidup bukan hanya seseorang yang kita nikahi, melainkan seseorang yang akan menemani kita dalam berbagai fase kehidupan—dari kebahagiaan hingga kesedihan, dari keberhasilan hingga kegagalan.",content:` Hidup dan hubungan kita # Hidup adalah perjalanan panjang yang dipenuhi dengan berbagai pengalaman dan pelajaran. Salah satu aspek penting dalam perjalanan hidup ini adalah memilih pasangan hidup. Pasangan hidup bukan hanya seseorang yang kita nikahi, melainkan seseorang yang akan menemani kita dalam berbagai fase kehidupan—dari kebahagiaan hingga kesedihan, dari keberhasilan hingga kegagalan. Membentuk hubungan yang kokoh dan sehat dengan pasangan hidup membutuhkan pemahaman yang mendalam tentang diri kita sendiri dan orang yang akan kita pilih untuk berbagi hidup bersama.
Kehidupan manusia di dunia ini dapat dibagi menjadi beberapa fase yang sangat berpengaruh dalam pembentukan hubungan kita. Fase pertama adalah hubungan kita dengan orang tua, kemudian dengan saudara, dan akhirnya dengan pasangan hidup kita. Masing-masing hubungan ini memiliki peran yang sangat penting dalam membentuk siapa kita dan bagaimana kita menjalani hidup ini. Dalam perjalanan hidup ini, kita sering kali dihadapkan pada kenyataan bahwa orang tua, saudara, bahkan anak kita suatu hari nanti akan memiliki jalan hidup mereka sendiri. Hanya pasangan hidup yang sejati yang akan bersama kita dalam jangka panjang, menjadi teman sejati dalam setiap fase kehidupan.
Orang Tua dalam Pembentukan Diri # Orang tua memainkan peran yang sangat penting dalam kehidupan setiap individu. Sejak kita dalam kandungan hingga kita dewasa, orang tua adalah orang pertama yang memberikan kasih sayang, perhatian, dan perlindungan. Mereka adalah orang yang pertama kali mengenalkan kita pada dunia dan menjadi panutan kita dalam banyak hal. Orang tua membentuk karakter kita dan memberikan dasar bagi pandangan hidup kita. Cinta mereka adalah cinta yang tanpa syarat, yang tidak bergantung pada apapun selain rasa sayang dan keinginan untuk melihat anaknya berkembang dan bahagia.
Orang tua memiliki peran yang sangat besar dalam hidup kita, kita tidak bisa bergantung pada mereka selamanya. Kehidupan kita sebagai individu tidak akan terlepas dari kenyataan bahwa orang tua kita suatu saat nanti akan meninggalkan kita—baik karena usia lanjut atau keadaan lain yang tak terduga. Ketika itu terjadi, kita akan merasa kehilangan, di sisi lain, kita juga harus menghadapi kenyataan bahwa kita harus berdiri sendiri dan melanjutkan hidup tanpa mereka di sisi kita. Orang tua mengajarkan kita tentang cinta yang tulus dan tanpa syarat, tetapi mereka juga mengajarkan kita tentang pentingnya menjadi mandiri.
Saudara dalam Hidup Kita # Saudara-saudara kita adalah teman pertama dalam hidup kita. Mereka adalah orang yang pertama kali berbagi pengalaman hidup bersama kita. Seiring waktu, kita tumbuh bersama mereka, bermain bersama mereka, dan menghadapi banyak hal bersama. Meskipun kita berbagi banyak kenangan dengan saudara, hubungan ini juga mengalami perubahan seiring berjalannya waktu. Ketika saudara-saudara kita tumbuh dewasa, mereka akan memiliki kehidupan mereka sendiri, pasangan mereka sendiri, dan akhirnya anak-anak mereka sendiri. Perhatian mereka yang dulu sepenuhnya untuk kita, akan terbagi antara keluarga mereka dan kita. Pada titik tertentu, saudara kita akan lebih fokus pada kehidupan mereka sendiri dan kita harus menerima bahwa mereka tidak lagi menjadi bagian yang dominan dalam hidup kita.
Sebagai individu, kita harus belajar melepaskan saudara kita, menghargai perjalanan hidup mereka, dan memahami bahwa hubungan dengan saudara juga mengalami perubahan. Mereka mungkin tidak selalu ada di sisi kita dalam setiap langkah, tetapi mereka tetap menjadi bagian dari kehidupan kita yang tidak bisa tergantikan. Sekali lagi, saudara bukanlah pasangan hidup yang akan mendampingi kita dalam setiap fase hidup. Mereka juga memiliki kehidupan mereka sendiri yang harus mereka jalani.
Anak dalam Hidup Kita # Anak-anak adalah buah hati yang paling berharga dalam hidup kita. Mereka adalah kelanjutan dari diri kita, harapan kita, dan cinta kita. Cinta yang kita rasakan terhadap anak kita sangatlah besar—lebih besar dari apa pun yang pernah kita rasakan sebelumnya. Meskipun cinta kita kepada anak-anak kita begitu besar, kita juga harus menyadari bahwa mereka suatu saat nanti akan tumbuh dewasa, membangun kehidupan mereka sendiri, dan memiliki pasangan hidup mereka sendiri. Sebagai orang tua, kita harus siap untuk melepaskan mereka, meskipun itu adalah salah satu hal yang paling sulit dilakukan dalam hidup.
Anak-anak mengajarkan kita tentang cinta tanpa syarat dan tentang bagaimana kita bisa memberi tanpa mengharapkan balasan. Mereka juga mengajarkan kita bahwa kita harus memberi mereka kebebasan untuk mengejar impian mereka, membangun hidup mereka, dan mengambil tanggung jawab penuh atas kehidupan mereka. Pada saatnya nanti, anak-anak kita akan memilih pasangan hidup mereka, dan kita harus belajar untuk mendukung pilihan mereka, meskipun terkadang kita merasa bahwa kita adalah orang yang paling dekat dengan mereka.
Pasangan Hidup, Teman Sejati dalam Perjalanan Hidup # Di antara semua hubungan yang ada dalam hidup kita, pasangan hidup adalah orang yang akan menemani kita dalam perjalanan paling panjang yang kita jalani. Pasangan hidup adalah orang yang akan berada di sisi kita dalam setiap fase kehidupan, baik saat kita bahagia, saat kita mengalami kesulitan, ataupun saat kita harus menghadapi berbagai tantangan. Memilih pasangan hidup bukan hanya tentang cinta atau ketertarikan fisik semata, tetapi juga tentang memilih seseorang yang bisa kita percayai dan ajak untuk berbagi kehidupan—secara penuh.
Ketika kita memutuskan untuk memilih pasangan hidup, kita harus melakukannya dengan penuh pertimbangan dan kesadaran. Pasangan hidup adalah seseorang yang akan bersama kita hingga akhir hayat, seseorang yang akan membangun rumah tangga bersama kita, menghadapi suka dan duka, serta membesarkan anak-anak bersama kita. Oleh karena itu, memilih pasangan hidup memerlukan pertimbangan yang matang tentang banyak aspek dalam kehidupan kita.
Salah satu faktor utama dalam memilih pasangan hidup adalah kecocokan dalam nilai-nilai dasar yang kita anut. Nilai-nilai ini meliputi pandangan kita tentang agama, pendidikan, keluarga, karier, serta tujuan hidup secara umum. Pasangan hidup yang sejati adalah mereka yang memiliki kesamaan pandangan dan tujuan hidup, karena kecocokan dalam hal ini akan membantu kita melewati tantangan hidup bersama tanpa harus menghadapi konflik besar yang berasal dari perbedaan prinsip.
Kecocokan dalam tujuan hidup juga berhubungan dengan bagaimana kita berencana untuk mengatur masa depan kita bersama. Apakah kita ingin memiliki anak, bagaimana kita mengatur keuangan keluarga, apa yang kita anggap penting dalam membangun sebuah rumah tangga—semua ini harus dipertimbangkan secara mendalam.
Pernikahan adalah bentuk komitmen jangka panjang. Komitmen ini bukan hanya soal kebahagiaan pada saat-saat tertentu, tetapi juga tentang bagaimana kita berbagi hidup dalam waktu yang lama. Memilih pasangan hidup berarti memilih seseorang yang siap untuk berbagi tanggung jawab dalam membangun keluarga, mengatur kehidupan rumah tangga, serta berkomitmen untuk mendukung satu sama lain dalam setiap kondisi—baik itu kebahagiaan, kesulitan, atau perbedaan yang mungkin muncul.
Komitmen ini juga mencakup kesiapan untuk tumbuh bersama, berubah, dan saling menerima perbedaan yang muncul seiring waktu. Kehidupan tidak akan selalu berjalan mulus, tetapi pasangan hidup yang baik adalah seseorang yang bisa kita ajak untuk berkomunikasi, bekerja sama, dan menyelesaikan setiap masalah bersama-sama.
Komunikasi yang baik adalah kunci utama dalam hubungan yang sehat dan harmonis. Pasangan hidup yang ideal adalah seseorang yang bisa kita ajak berkomunikasi secara terbuka, jujur, dan penuh empati. Dalam hubungan yang sehat, kita tidak hanya mendengarkan pasangan kita, tetapi juga benar-benar memahami apa yang mereka rasakan dan berpikir. Kemampuan untuk menjaga komunikasi yang baik sangat penting untuk menghindari kesalahpahaman dan memperkuat ikatan emosional yang ada.
Kemampuan berempati dengan pasangan juga sangat diperlukan. Dalam menghadapi kesulitan hidup, pasangan yang sejati akan selalu berusaha untuk memahami perasaan kita dan memberikan dukungan yang kita butuhkan. Empati adalah kemampuan untuk merasakan apa yang dirasakan pasangan kita, dan ini sangat penting dalam membangun kedekatan emosional yang mendalam.
Kehidupan akan terus berubah. Kita akan menghadapi berbagai perubahan dalam karier, keluarga, atau bahkan dalam diri kita sendiri. Pasangan hidup yang sejati adalah mereka yang dapat tumbuh bersama kita dalam menghadapi perubahan tersebut. Tidak ada yang tetap dalam hidup ini—baik kita maupun pasangan kita akan terus berkembang dan berubah. Pasangan yang ideal adalah seseorang yang bisa menerima perubahan tersebut dan mendukung kita dalam proses pertumbuhan pribadi dan hubungan kita.
Memilih pasangan hidup yang tepat berarti memilih seseorang yang akan tumbuh bersama kita, saling mendukung dalam mengatasi tantangan, dan merayakan setiap keberhasilan bersama. Ini adalah perjalanan bersama yang panjang, penuh dengan liku-liku kehidupan yang memerlukan komitmen, pengertian, dan kepercayaan satu sama lain.
Mencari pasangan hidup sejati adalah perjalanan yang membutuhkan pertimbangan matang. Kehidupan kita melibatkan banyak hubungan—dengan orang tua, saudara, anak-anak, dan teman-teman. Hanya pasangan hidup yang akan menemani kita dalam perjalanan panjang ini. Pasangan hidup bukan hanya teman dalam kebahagiaan, tetapi juga rekan dalam kesulitan dan perubahan. Pilihan yang tepat akan membawa kita pada kehidupan yang lebih bahagia dan bermakna.
`}),e.add({id:11,href:"/coretanku/ngawur-ngidul-dikandung-hidup-dan-mati/",title:"Ngawur ngidul: Dikandung, Hidup dan Mati",description:"Kehidupan manusia dibagi menjadi beberapa tahapan yang sangat mendasar: dari kehidupan dalam kandungan, hidup di dunia, hingga menghadapi kematian. Tampak sebagai jalur alami yang linier, tetapi menyimpan berbagai pertanyaan mendalam tentang hakikat eksistensi, kebebasan, dan bahkan realitas itu sendiri. Menariknya, kita dapat melihat hubungan yang erat antara ketiga tahapan ini dan konsep-konsep dalam dunia fiksi ilmiah seperti yang digambarkan dalam film _The Matrix_ (1999), serta pertanyaan filosofis yang terus berkembang.",content:` Kehidupan manusia dibagi menjadi beberapa tahapan yang sangat mendasar: dari kehidupan dalam kandungan, hidup di dunia, hingga menghadapi kematian. Tampak sebagai jalur alami yang linier, tetapi menyimpan berbagai pertanyaan mendalam tentang hakikat eksistensi, kebebasan, dan bahkan realitas itu sendiri. Menariknya, kita dapat melihat hubungan yang erat antara ketiga tahapan ini dan konsep-konsep dalam dunia fiksi ilmiah seperti yang digambarkan dalam film The Matrix (1999), serta pertanyaan filosofis yang terus berkembang.
Titik Awal yang Tak Disadari # Hidup dalam kandungan adalah tahapan pertama dalam siklus kehidupan manusia. Di sinilah segalanya dimulai: dari pertemuan antara sel telur dan sperma, terbentuklah embrio yang kemudian berkembang menjadi janin. Dalam pandangan ilmiah, ini adalah langkah pertama dari serangkaian perubahan biologis yang akan mempersiapkan individu untuk lahir ke dunia. Namun, pertanyaan filosofis yang mendalam muncul ketika kita mulai merenungkan aspek-aspek lebih dalam dari kehidupan dalam kandungan ini.
Apakah Kita Memilih untuk Lahir? # Ketika berada dalam kandungan, manusia belum memiliki kesadaran penuh akan dunia luar. Kita tidak tahu tentang lingkungan yang akan kita masuki, tidak bisa merasakan atau memilih. Lalu, pertanyaan pun muncul: apakah kita benar-benar memilih untuk dilahirkan, ataukah kita hanya mengikuti jalur yang sudah ditentukan oleh &ldquo;program&rdquo; alam semesta ini? Apakah ada dimensi lebih tinggi dari kehidupan yang menunggu kita setelah kelahiran, atau kita hanya bagian dari suatu entitas yang lebih besar, mirip seperti karakter-karakter dalam The Matrix yang hidup dalam sebuah dunia buatan yang tidak mereka sadari?
Dalam filosofi eksistensialisme, tokoh-tokoh seperti Jean-Paul Sartre berpendapat bahwa kita &ldquo;terlempar&rdquo; ke dunia ini tanpa pilihan. Kita lahir dalam suatu kondisi yang sudah ditentukan, dan dari sana kita harus mencari makna kehidupan kita. Hal ini menciptakan pemahaman bahwa hidup dalam kandungan adalah tahapan pertama yang tidak dapat kita pilih, tetapi merupakan bagian dari sebuah perjalanan yang lebih besar yang harus kita jalani.
Kehidupan dalam Kandungan sebagai &ldquo;Simulasi&rdquo; # Dalam The Matrix, dunia yang dikenal oleh manusia sebenarnya adalah sebuah simulasi yang dikendalikan oleh kecerdasan buatan. Dalam dunia tersebut, manusia hidup dalam dunia maya tanpa menyadarinya. Ini mungkin bisa menjadi metafora yang kuat untuk kehidupan dalam kandungan. Seperti dalam dunia buatan The Matrix, kita berada dalam keadaan tidak sadar, menunggu untuk keluar dan merasakan dunia yang nyata setelah kelahiran. Kita berada dalam simulasi biologis—tubuh ibu adalah dunia maya pertama yang kita alami.
Kehidupan dalam Kandungan sebagai Persiapan # Di banyak tradisi spiritual, kehidupan dalam kandungan dilihat sebagai tahapan persiapan sebelum memasuki dunia fisik. Dalam banyak agama, diyakini bahwa setiap individu memiliki takdir atau tujuan yang lebih tinggi, yang sudah ditentukan jauh sebelum mereka lahir. Seperti dalam ajaran Hindu tentang karma dan samsara, hidup dalam kandungan adalah bagian dari perjalanan lebih besar dalam siklus kehidupan dan reinkarnasi. Proses kelahiran kemudian menjadi cara untuk mengubah bentuk kehidupan dan memasuki dunia baru yang lebih kompleks dan penuh tantangan.
Melakukan Pilihan dalam Dunia yang Terbentuk # Setelah kelahiran, kita memasuki tahapan kehidupan yang lebih kompleks. Di dunia ini, kita tidak hanya belajar untuk bertahan hidup secara fisik, tetapi juga membentuk identitas kita, mengejar tujuan hidup, dan menjalani proses pembelajaran. Seiring waktu, banyak orang merasa terjebak dalam rutinitas, tantangan, dan sistem sosial yang tampaknya sudah ditentukan sebelumnya. Inilah saatnya bagi kita untuk mulai mempertanyakan makna hidup, kebebasan, dan apakah kita benar-benar bebas atau hanya bagian dari sistem yang lebih besar.
Apakah Kita Hanya Terjebak dalam Sistem? # Film The Matrix mengajukan pertanyaan penting: jika dunia ini hanyalah simulasi yang dikendalikan oleh kecerdasan buatan, apakah kita hidup dalam dunia yang juga &ldquo;terprogram&rdquo;? Apakah kita menjalani hidup yang telah ditentukan sebelumnya oleh sistem sosial, budaya, atau bahkan oleh teknologi yang berkembang pesat? Dalam pandangan ini, hidup kita adalah bagian dari &ldquo;program&rdquo; yang lebih besar, di mana kita, seperti karakter-karakter dalam film, berjuang untuk menemukan kenyataan yang lebih tinggi.
Ada elemen dari kehidupan manusia yang sangat terstruktur dan seringkali terasa seperti sebuah program. Sistem pendidikan, pekerjaan, kehidupan sosial, dan bahkan ekspektasi budaya membentuk kehidupan kita dalam banyak cara. Banyak orang merasa terjebak dalam rutinitas yang tampaknya tidak memberikan pilihan atau kebebasan untuk keluar dari jalan yang sudah ada. Ini adalah pertanyaan yang mendalam: apakah kita benar-benar memiliki kebebasan untuk memilih, ataukah kita hanya bergerak dalam dunia yang telah diprogram untuk kita?
Kebebasan dalam Pilihan # Meskipun kita hidup dalam dunia yang sangat dipengaruhi oleh struktur sosial, kita tetap memiliki kebebasan untuk membuat pilihan. Kita dapat memilih jalur kita sendiri, meskipun seringkali terhalang oleh sistem yang ada. Ini adalah kebebasan yang dimiliki oleh karakter Neo dalam The Matrix, yang diberikan pilihan untuk keluar dari dunia simulasi dan menemukan kenyataan yang lebih tinggi. Pilihan itu datang dengan tantangan besar, tetapi juga membuka pintu menuju pemahaman yang lebih dalam tentang realitas dan eksistensi.
Bagi banyak orang, hidup ini adalah tentang mencari makna. Ini adalah pencarian yang tidak selalu mudah, tetapi tetap penting. Pilihan-pilihan yang kita buat dalam hidup—meskipun seringkali dipengaruhi oleh faktor eksternal—masih memberi kita kesempatan untuk menemukan tujuan hidup yang lebih besar. Dalam banyak hal, hidup ini adalah tentang mencari &ldquo;kebenaran&rdquo; dan menemukan kebebasan dalam memilih jalan kita.
Kematian. Apa yang Terjadi Setelahnya? # Kematian adalah bagian yang tak terhindarkan dari siklus kehidupan. Seperti halnya dengan kelahiran dan kehidupan, kematian juga menyimpan banyak misteri. Apakah kematian adalah akhir dari segala sesuatu, ataukah ia hanya transisi menuju bentuk kehidupan yang lebih tinggi? Pandangan ini sangat dipengaruhi oleh perspektif agama, filsafat, dan juga pemikiran tentang teknologi.
Kematian sebagai &ldquo;Reset&rdquo;. Kehidupan Setelah Kehidupan # Di dalam The Matrix, manusia hidup dalam dunia yang terkontrol oleh kecerdasan buatan. Dunia tersebut dapat di-reset atau diganti kapan saja. Ini bisa dianalogikan dengan pandangan tentang kematian sebagai &ldquo;reset&rdquo; atau &ldquo;transisi&rdquo; menuju bentuk kehidupan yang lebih tinggi. Apakah kematian adalah pintu gerbang menuju dunia baru, dunia yang lebih nyata atau pencerahan yang lebih dalam? Dalam banyak pandangan spiritual, kematian tidak dianggap sebagai akhir, melainkan sebagai bagian dari siklus kehidupan yang lebih besar, seperti reinkarnasi dalam ajaran Hindu atau kehidupan setelah mati dalam tradisi agama-agama Abrahamik.
Kematian dalam Perspektif Teknologi # Di dunia teknologi modern, banyak yang mulai mempertanyakan apakah kita benar-benar mati atau apakah ada kemungkinan untuk melanjutkan keberadaan kita dalam bentuk digital. Konsep &ldquo;kehidupan setelah kematian&rdquo; semakin menjadi menarik ketika kita mempertimbangkan kemajuan dalam bidang kecerdasan buatan dan teknologi. Dalam The Matrix, kita melihat bahwa meskipun tubuh manusia mati, kesadaran mereka tetap ada dalam dunia digital yang diciptakan oleh mesin. Ini adalah visi yang lebih futuristik tentang kehidupan setelah kematian, yang mengajukan pertanyaan tentang apakah kita akan dapat hidup selamanya dalam dunia maya atau digital.
Hidup sebagai Perjalanan yang Terprogram dan Pilihan yang Tak Terbatas # Masing-masing tahapan kehidupan membawa kita ke pertanyaan mendalam tentang kebebasan, takdir, dan eksistensi itu sendiri. Dalam banyak hal, hidup ini mirip dengan konsep dunia simulasi dalam The Matrix, di mana kita dipengaruhi oleh sistem besar yang lebih tinggi, namun masih memiliki kebebasan untuk memilih dan mencari makna hidup kita. Kematian, pada gilirannya, dapat menjadi transisi menuju bentuk kehidupan yang lebih tinggi, baik dalam bentuk spiritual atau digital.
Melalui film The Matrix dan berbagai pandangan filosofis, kita diajak untuk merenungkan tentang apa yang kita percayai sebagai kenyataan, serta bagaimana kita menjalani hidup ini dalam konteks yang lebih besar. Kehidupan ini bukan hanya tentang bertahan hidup, tetapi juga tentang mencari tujuan dan makna di dalamnya. Dengan memilih untuk mencari kebenaran, kita mungkin dapat menemukan pencerahan yang lebih tinggi dan merasakan kebebasan sejati dari sistem yang ada.
`}),e.add({id:12,href:"/coretanku/mengikuti-pelatihan-dan-sertifikasi-jaringan-komputer/",title:"Mengikuti Pelatihan dan Sertifikasi Administrator Jaringan Komputer",description:"Pada tanggal 5–7 Agustus 2024, saya bersama rekan, Pak Sumarlin, mengikuti Pelatihan dan Sertifikasi Administrator Jaringan Komputer yang diadakan di Malyabhara Hotel, Yogyakarta. Pelatihan ini diselenggarakan dengan dukungan dana hibah PKKM Liga 3 Tahun 2024 dan bertujuan meningkatkan kompetensi tenaga pengajar dalam bidang teknologi informasi. Kami merasa sangat bersyukur karena pada akhir kegiatan, kami berhasil lulus pelatihan ini dan memperoleh sertifikat kompetensi resmi dari Badan Nasional Sertifikasi Profesi (BNSP).",content:` Pada tanggal 5–7 Agustus 2024, saya bersama rekan, Pak Sumarlin, mengikuti Pelatihan dan Sertifikasi Administrator Jaringan Komputer yang diadakan di Malyabhara Hotel, Yogyakarta. Pelatihan ini diselenggarakan dengan dukungan dana hibah PKKM Liga 3 Tahun 2024 dan bertujuan meningkatkan kompetensi tenaga pengajar dalam bidang teknologi informasi. Kami merasa sangat bersyukur karena pada akhir kegiatan, kami berhasil lulus pelatihan ini dan memperoleh sertifikat kompetensi resmi dari Badan Nasional Sertifikasi Profesi (BNSP).
Pentingnya Sertifikasi Administrator Jaringan Komputer # Perkembangan teknologi informasi di era digital telah mengubah banyak aspek kehidupan, termasuk sektor pendidikan tinggi. Dalam mendukung aktivitas akademik, kehadiran jaringan komputer yang andal merupakan kebutuhan mendasar. Pelatihan dan sertifikasi di bidang administrasi jaringan memberikan pengakuan profesional bahwa tenaga pengajar memiliki keahlian yang terstandar dalam pengelolaan teknologi jaringan.
Bagi dosen, sertifikasi ini menjadi bekal penting dalam menghadapi tantangan pendidikan berbasis teknologi. Pengakuan resmi dari BNSP tidak hanya meningkatkan kredibilitas sebagai pengajar, tetapi juga memperkuat kepercayaan diri dalam mengajar mata kuliah yang berkaitan dengan jaringan komputer. Pada akhirnya, manfaat ini juga dirasakan oleh mahasiswa, yang akan lebih siap bersaing di dunia kerja berbasis teknologi.
Jadwal dan materi # 5 Agustus 2024 # No Jam Kegiatan/Materi 1 08:00 - 08:30 Pembukaan dan Pengenalan Program Sertifikasi 2 08:30 - 09:30 Pengantar Konsep Jaringan dan Topologi 3 09:30 - 10:30 Implementasi dan Konfigurasi Router dan Switch 4 10:30 - 10:45 Istirahat 5 10:45 - 12:00 Konfigurasi IP Addressing dan Subnetting 6 12:00 - 13:00 Istirahat Siang 7 13:00 - 15:00 VLAN dan Trunking 8 15:00 - 16:30 Pengaturan DHCP, DNS, dan NAT 9 16:30 - 17:00 Tinjauan dan Tanya Jawab Hari Pertama (Tugas Take home) 6 Agustus 2024 # No Jam Kegiatan/Materi 1 08:00 - 09:30 Evaluasi Tugas Take Home dan Materi Keamanan Jaringan: Firewall, IDS, dan IPS 2 09:30 - 10:30 VPN dan Enkripsi Data 3 10:30 - 10:45 Istirahat 4 10:45 - 12:00 Manajemen Trafik dan Quality of Service (QoS) 5 12:00 - 13:00 Istirahat Siang 6 13:00 - 15:00 Monitoring Jaringan dengan Tools Network Management 7 15:00 - 16:30 Troubleshooting Jaringan 8 16:30 - 17:00 Tinjauan dan Tanya Jawab Hari Kedua 7 Agustus 2024 # No Jam Kegiatan/Materi 1 08:00 - 09:30 Evaluasi Tugas Take Home dan Backup dan Recovery Jaringan 2 09:30 - 10:30 Dokumentasi Jaringan dan Best Practices 3 10:30 - 10:45 Istirahat 4 10:45 - 12:00 Simulasi dan Ujian Praktik 5 12:00 - 13:00 Istirahat Siang 6 13:00 - 15:00 Evaluasi dan Ujian Teori 7 15:00 - 16:30 Tanya Jawab/Wawancara 8 16:30 - 17:00 Penutupan dan Pengumuman Hasil Sertifikasi Dampak Positif pada Kurikulum dan Kualitas Pengajaran # Dengan adanya sertifikasi ini, kami dapat berkontribusi dalam mengembangkan kurikulum yang lebih relevan dengan kebutuhan industri. Pengetahuan praktis yang diperoleh memungkinkan kami untuk merancang materi ajar yang menggabungkan teori dan aplikasi nyata. Hal ini penting karena industri saat ini tidak hanya membutuhkan lulusan dengan wawasan teoritis, tetapi juga keterampilan praktis yang dapat langsung diterapkan. Kurikulum yang dirancang dengan pendekatan berbasis kompetensi juga membantu mahasiswa memahami kebutuhan dunia kerja. Mereka dapat mempelajari praktik terbaik dalam administrasi jaringan dan mengasah keterampilan teknis yang dibutuhkan dalam profesi mereka.
Mendukung Penelitian dan Keamanan Infrastruktur Jaringan # Selain manfaat dalam pengajaran, pelatihan dan sertifikasi ini membuka peluang besar untuk mendukung riset dan inovasi di bidang teknologi informasi. Pemahaman yang mendalam tentang administrasi jaringan menjadi modal utama untuk terlibat dalam penelitian yang berfokus pada pengelolaan jaringan dan keamanan data.
Dari sisi operasional kampus, kehadiran dosen yang memiliki keterampilan administrasi jaringan juga memberikan nilai tambah dalam menjaga keamanan infrastruktur teknologi. Dengan kompetensi ini, kami lebih siap mengidentifikasi dan mengatasi potensi ancaman siber yang dapat mengganggu aktivitas kampus. Langkah-langkah preventif yang kami terapkan juga akan membantu memastikan jaringan kampus tetap berjalan efisien dan aman.
Sertifikasi BNSP # Sertifikasi ini tidak hanya memberikan pengakuan formal atas kompetensi yang dimiliki, tetapi juga memperluas peluang untuk memberikan kontribusi lebih besar, baik di institusi tempat kami mengajar maupun dalam kolaborasi dengan berbagai pihak, termasuk industri.
Pengalaman mengikuti pelatihan dan sertifikasi Administrator Jaringan Komputer ini memberikan dampak yang sangat besar bagi pengembangan kompetensi kami sebagai tenaga pengajar. Dengan sertifikat yang telah kami peroleh, kami berharap dapat memberikan kontribusi lebih dalam meningkatkan kualitas pembelajaran, pengembangan kurikulum, serta mendukung infrastruktur teknologi di perguruan tinggi.
Langkah ini menjadi bagian penting dari upaya bersama untuk menciptakan ekosistem pendidikan tinggi yang lebih inovatif, relevan, dan tanggap terhadap perkembangan zaman. Semoga manfaat dari kegiatan ini dapat dirasakan oleh mahasiswa, institusi, dan masyarakat luas.
Kegiatan Pelatihan Malam di Jl. Malioboro Deseminasi kepada rekan Dosen di Kampus Medan `}),e.add({id:13,href:"/coretanku/freeze-dan-ovalyn-liburan-sekolah-ke-medan/",title:"Freeze dan Ovalyn Liburan Sekolah ke Medan",description:"Terakhir kami ketemu awal tahun 2019, sekitar 5 tahun yang lalu pas ada liburan akhir tahun. Tahun ini kedua anak saya ini berkunjung lagi ke Medan dan kebetulan memang hari libur sekolah, Freeze sudah naik ke kelas XII dan Ovalyn naik ke kelas VIII. Mungkin agak sedikit aneh ya, kok bisa begitu lama tidak ketemu, tapi itulah dia. Tidak terasa sudah begitu besar, si abang udah lebih tinggi dari saya dan si adek sudah hampir sama tingginya. ",content:` Liburan Sekolah Tahun 2024 # Terakhir kami ketemu awal tahun 2019, sekitar 5 tahun yang lalu pas ada liburan akhir tahun. Tahun ini kedua anak saya ini berkunjung lagi ke Medan dan kebetulan memang hari libur sekolah, Freeze sudah naik ke kelas XII dan Ovalyn naik ke kelas VIII. Mungkin agak sedikit aneh ya, kok bisa begitu lama tidak ketemu, tapi itulah dia. Tidak terasa sudah begitu besar, si abang udah lebih tinggi dari saya dan si adek sudah hampir sama tingginya.
Freeze dan Ovalyn berangkat Jumat malam (5 Juli) dari Padang Sidimpuan ke Medan dan besok paginya (Sabtu) sekitar jam 9 pagi, saya dan Faresta menjemput karena Travelnya hanya mengantar sampai ke Pajak Melati.
Medan: Liburan di rumah # Serasa sedih dan kasihan juga, jarang-jarang mereka berkunjung, pas datang ke Medan malah saya tidak bisa mengajak untuk jalan-jalan. Floyd, Anak saya yang paling kecil baru berumur 2 minggu, jadi tidak memungkinkan untuk diajak jalan keluar, dan mamaknya juga masih masa penyembuhan sehabis melahirkan secara caesar. Selain itu, Faresta juga sangat aktif(lasak, nggak bisa diam) sehingga saya kewalahan untuk menjaga, padahal istri sudah menyarankan untuk mengajak anak-anak jalan bertiga atau berempat, tapi itu dia, saya ampun kalau hanya sendirian menemani Faresta.
Sewaktu Floyd tidur, kami menyempatkan untuk ambil foto keluarga kecil kami, walaupun fotonya harus bergantian.
[Ovalyn, Mamak, Faresta, Freeze] [Ovalyn, Mamak, Faresta, Freeze] [Ovalyn, Mamak, Freeze] [Ovalyn, Saya, Freeze] Dikampung: Pesta Tahunan 2024 # Tahun ini saya tidak dapat menghadiri Pesta Tahunan, berhubung Floyd dan Mamaknya belum memungkinkan untuk melakukan perjalanan ke kampung. Jadinya hanya Frezze dan Ovalyn aja yang mewakili untuk pesta tahunan di kampung.
Freeze dan Ovalyn di kampung bersama Bapak, perjalanan jiarah Tahun ini juga kebetulan bapak tengah (adik bapak saya) pulang dari Jakarta untuk menghadiri pesta tahunan. Jiarah bersama Adik, dan keponakan
Jalan-jalan dengan Bulang # Di kampung, bapak yang mengajak Ovalyn, Freeze dan Bapak Tengah jalan-jalan ke Gundaling(Berastagi), sepertinya mamak/ribu tinggal di rumah, katanya Karo (kakak bapak) juga ikut, tapi mungkin hanya jadi tukang foto 😄.
Pulang ke Padang Sidimpuan # Berhubung hari senin sudah masuk sekolah, hari Sabtu 13 Juli saya mengantar ke stasiun Bus untuk pulang ke Padang Sidimpuan.
`}),e.add({id:14,href:"/pemanfaatan-artificial-intelegence-ai-dalam-bidang-cybersecurity/",title:"Pemanfaatan Artificial Intelegence (AI) dalam bidang Cybersecurity",description:"Dalam era digital yang berkembang pesat, teknologi canggih seperti Industrial Internet of Things (IIoT), sistem mengemudi otonom, dan Internet of Things (IoT) telah menjadi tulang punggung transformasi industri dan gaya hidup modern. IIoT memungkinkan integrasi perangkat pintar dan sensor dalam industri, yang meningkatkan efisiensi operasional dan produktivitas. Peningkatan penggunaan perangkat IIoT juga membawa tantangan signifikan terkait keamanan dan efisiensi operasional karena perangkat ini seringkali menjadi target serangan siber[1]. ",content:`Latar belakang # Dalam era digital yang berkembang pesat, teknologi canggih seperti Industrial Internet of Things (IIoT), sistem mengemudi otonom, dan Internet of Things (IoT) telah menjadi tulang punggung transformasi industri dan gaya hidup modern. IIoT memungkinkan integrasi perangkat pintar dan sensor dalam industri, yang meningkatkan efisiensi operasional dan produktivitas. Peningkatan penggunaan perangkat IIoT juga membawa tantangan signifikan terkait keamanan dan efisiensi operasional karena perangkat ini seringkali menjadi target serangan siber[1]. Sistem mengemudi otonom menjanjikan revolusi dalam transportasi dengan meningkatkan keselamatan dan kenyamanan. Keberhasilan teknologi ini sangat tergantung pada kemampuan mendeteksi dan merespons anomali yang dapat membahayakan keselamatan pengguna[2]. Anomali ini dapat berasal dari berbagai sumber seperti kerusakan sensor atau serangan siber, dan perlu deteksi yang efektif serta penjelasan yang dapat dipahami untuk meningkatkan kepercayaan pengguna terhadap sistem ini.
IoT yang menghubungkan berbagai perangkat sehari-hari ke internet, menciptakan ekosistem yang luas dan heterogen, membuka peluang bagi berbagai jenis serangan seperti DDoS dan eksploitasi kerentanan perangkat[3]. Ekosistem ini menghadapi tantangan besar dalam mendeteksi serangan dengan cepat dan akurat sebelum mereka menyebabkan kerusakan signifikan. Di sisi lain, ancaman phishing yang semakin canggih kini menggunakan teknologi AI untuk menyamar sebagai komunikasi resmi, membuat mereka sulit dideteksi oleh sistem deteksi tradisional maupun oleh manusia[4]. Untuk mengatasi tantangan ini, penerapan teknologi kecerdasan buatan (AI) dalam deteksi dan mitigasi ancaman menjadi semakin penting. Model AI dapat digunakan untuk mendeteksi anomali dan serangan dengan lebih efisien dibandingkan metode tradisional.
Tantangan utama terletak pada bagaimana membuat model ini dapat diandalkan, dapat dijelaskan (explainable), dan mampu beradaptasi dengan ancaman yang terus berkembang[5]. Penelitian dan pengembangan dalam bidang ini telah menghasilkan berbagai solusi yang menjanjikan. Model AI dan machine learning digunakan dalam IIoT untuk mendeteksi anomali operasional dan mengamankan perangkat dari serangan siber[1]. Dalam sistem mengemudi otonom, metode Explainable AI (XAI) dikembangkan untuk tidak hanya mendeteksi anomali tetapi juga memberikan penjelasan yang jelas sehingga meningkatkan kepercayaan pengguna[2]. Dalam ekosistem IoT, AI digunakan untuk mendeteksi serangan dengan akurasi yang lebih tinggi, membantu dalam pengelolaan dan mitigasi ancaman secara efektif[3]. Untuk ancaman phishing, model AI yang canggih dapat menganalisis dan mendeteksi email berbahaya yang sulit diidentifikasi oleh sistem tradisional[4].
Penerapan teknologi AI ini tidak hanya meningkatkan keamanan dan keandalan sistem tetapi juga memberikan wawasan yang lebih mendalam tentang cara kerja ancaman, memungkinkan pengembangan strategi pertahanan yang lebih efektif dan responsif terhadap perubahan dinamis dalam lanskap ancaman siber[5]. Integrasi teknologi AI dalam berbagai bidang ini menunjukkan betapa pentingnya AI dalam menghadapi tantangan modern, baik dalam mengoptimalkan operasi industri, menjaga keselamatan dalam transportasi, maupun melindungi sistem dari ancaman siber yang semakin kompleks.
Metode yang diusulkan # Mengelompokkan sampel berdasarkan kelas label anomali dan hasilkan penjelasan XAI untuk sampel asli yang tidak terganggu. Mengubah fitur peringkat teratas secara bertahap untuk memeriksa apakah kelas prediksi anomali berubah; pertahankan relevansi fitur terganggu sebelumnya. Menganalisis stabilitas lokal dan efisiensi metode XAI seperti SHAP dan LIME di berbagai model AI menggunakan kumpulan data seperti Sensor dan VeRemi .
Mengevaluasi dampak penyetelan hyperparameter pada metrik kinerja model AI seperti Pohon Keputusan, Hutan Acak, dan ADABoost dalam skenario deteksi anomali . Memanfaatkan metode XAI untuk memvisualisasikan pentingnya fitur teratas yang mempengaruhi keputusan model AI, terutama bermanfaat untuk memahami faktor-faktor penting dalam kumpulan data yang terkait dengan kendaraan otonom .
Metode penelitian # Memanfaatkan teknik pembelajaran mesin (ML) untuk mengenali pola dalam data dan memprediksi hasil berdasarkan pelatihan, termasuk model pembelajaran mendalam untuk pola dan tugas data yang kompleks seperti pemrosesan gambar dan pemrosesan bahasa alami. Disamping itu dengan menerapkan algoritma metrik kelengkapan untuk menilai kapasitas teknik Explainable AI (XAI) untuk memberikan penjelasan yang valid untuk semua input model yang mungkin, termasuk kasus sudut, memastikan ketahanan dan akurasi dalam penjelasan.
Evaluasi model ML menggunakan metrik kinerja seperti akurasi, presisi, ingatan, skor F1, dan kehilangan kesalahan kuadrat rata-rata, membandingkan metode seperti Random Forest (RF), Gradient Boosting (GB), dan Support Vector Machine (SVM) untuk sistem deteksi intrusi (IDS) di jaringan IoMT . Kembangkan sistem deteksi intrusi untuk jaringan IoMT menggunakan algoritma pembelajaran mesin, strategi pembelajaran ansambel, pemilihan fitur, dan pertimbangan fitur penting untuk meningkatkan keamanan dan kinerja.
Penggunaan model berbasis Transformer dalam deteksi serangan siber, menggabungkan teknik ML dan DL untuk meningkatkan kinerja deteksi, terutama dalam keamanan siber IoMT, menarik inspirasi dari perkembangan pemrosesan bahasa alami . Mengkategorikan data menggunakan algoritma seperti Latent Dirichlet Allocation (LDA) dan hutan acak untuk mengidentifikasi tema dalam kumpulan data teks, membantu dalam klasifikasi aktor ancaman, peristiwa, taktik, indikator, dan tren geopolitik untuk CTI yang efektif .
Hasil dan pembahasan # Artikel ini merangkum topik tentang pemanfaatan AI dalam bidang Cybersecurity dari lima artikel yang diambil dari jurnal bereputasi. Kelima artikel jurnal, masing-masing penelitian memfokuskan pada berbagai jenis serangan siber yang relevan dengan konteks dan aplikasi spesifik. Penelitian oleh Dini et al.[1] membahas serangan yang ditujukan pada sistem Industrial Internet of Things (IIoT), termasuk serangan DDoS dan malware yang dapat menyebabkan gangguan operasional dan kerugian finansial. Nazat et al[2]. meneliti deteksi anomali pada sistem mengemudi otonom, yang dapat berasal dari kerusakan sensor atau serangan siber yang menargetkan sistem kendali kendaraan. Alevizos dan Dekker[5] fokus pada ancaman siber yang kompleks seperti malware dan phishing dalam konteks pemrosesan intelijen ancaman siber.
AboulEla et al[3]. mengeksplorasi deteksi serangan dalam ekosistem IoT, yang sering mengalami serangan seperti eksploitasi kerentanan perangkat dan serangan DDoS. Eze dan Shamir[4] meneliti serangan phishing berbasis AI yang menggunakan teknologi canggih untuk menghasilkan email berbahaya yang sulit dideteksi.
Untuk menyelesaikan masalah serangan tersebut, berbagai metode digunakan dalam setiap penelitian. Dini et al. menerapkan model machine learning untuk mendeteksi anomali dalam data operasional IIoT dan mengidentifikasi pola serangan. Nazat et al. menggunakan Explainable AI (XAI) untuk meningkatkan deteksi anomali dengan memberikan penjelasan yang dapat dimengerti oleh manusia mengenai keputusan model AI.
Alevizos dan Dekker mengembangkan pipeline berbasis AI untuk mengolah intelijen ancaman siber secara otomatis dan efisien. AboulEla et al. menerapkan algoritma deteksi anomali berbasis machine learning untuk mengidentifikasi pola serangan dalam data IoT. Eze dan Shamir menggunakan model deep learning untuk mendeteksi email phishing berbasis AI dengan tingkat akurasi yang lebih tinggi dibandingkan metode konvensional. Dataset yang digunakan untuk membangun model juga bervariasi.
Dini et al. menggunakan data operasional dari berbagai perangkat IIoT yang mengandung informasi terkait performa dan kejadian anomali. Nazat et al. menggunakan data dari simulasi kendaraan otonom yang mencakup anomali yang disebabkan oleh kerusakan sensor dan serangan siber. Alevizos dan Dekker menggunakan dataset ancaman siber yang terdiri dari log kejadian, laporan serangan, dan metadata dari berbagai sumber keamanan siber. AboulEla et al. mengumpulkan data jaringan dari perangkat IoT yang mengandung informasi tentang pola komunikasi dan serangan. Eze dan Shamir menggunakan kumpulan data email yang mencakup contoh email phishing dan non-phishing yang didapatkan dari kampanye keamanan siber sebelumnya.
Uji coba metode yang diusulkan dilakukan dengan berbagai pendekatan. Dini et al. menguji model mereka dengan menerapkannya pada lingkungan simulasi IIoT untuk mengevaluasi kemampuan deteksi anomali dan respon terhadap serangan. Nazat et al. menguji metode XAI mereka dengan mensimulasikan skenario mengemudi otonom yang mencakup berbagai kondisi anomali untuk menilai kemampuan deteksi dan interpretasi model. Alevizos dan Dekker menguji pipeline mereka dengan menganalisis berbagai dataset ancaman siber secara real-time untuk mengevaluasi efisiensi dan akurasi.
AboulEla et al. melakukan eksperimen dengan menerapkan algoritma deteksi anomali pada data komunikasi perangkat IoT dan mengevaluasi kemampuannya dalam mendeteksi serangan secara cepat dan akurat. Eze dan Shamir menguji model deep learning mereka dengan mengujikan pada dataset email untuk mengukur tingkat deteksi phishing dengan akurasi tinggi.
Data yang dikumpulkan saat uji coba mencakup hasil deteksi anomali, waktu respons, dan tingkat akurasi dari model yang diuji. Dini et al. mengumpulkan data tentang jumlah anomali yang berhasil dideteksi dan respon model terhadap serangan siber. Nazat et al. mengumpulkan data tentang tingkat kesalahan deteksi anomali dan penjelasan yang dihasilkan oleh metode XAI. Alevizos dan Dekker mengumpulkan data tentang jumlah ancaman yang berhasil diidentifikasi dan kecepatan pemrosesan pipeline mereka. AboulEla et al. mengumpulkan data tentang jumlah serangan yang terdeteksi dan pola komunikasi yang mencurigakan dalam jaringan IoT. Eze dan Shamir mengumpulkan data tentang tingkat deteksi phishing dan tingkat false positive dari model mereka.
Kesimpulan dari hasil uji coba menunjukkan bahwa penerapan teknologi AI dan metode deteksi yang diusulkan berhasil meningkatkan efektivitas dan efisiensi dalam mengidentifikasi dan mengatasi ancaman siber. Dini et al. menemukan bahwa model machine learning mereka mampu mendeteksi anomali dengan tingkat akurasi yang tinggi dan memperbaiki respon terhadap serangan siber dalam lingkungan IIoT.
Nazat et al. menyimpulkan bahwa metode XAI mereka memberikan penjelasan yang dapat dipahami yang meningkatkan kepercayaan pengguna terhadap sistem mengemudi otonom dan mengurangi kesalahan deteksi anomali. Alevizos dan Dekker menemukan bahwa pipeline AI mereka meningkatkan kecepatan dan akurasi dalam pemrosesan intelijen ancaman siber, memungkinkan respons yang lebih cepat terhadap ancaman baru.
AboulEla et al. menyimpulkan bahwa algoritma deteksi anomali mereka efektif dalam mendeteksi serangan pada perangkat IoT dan dapat diterapkan dalam berbagai skenario. Eze dan Shamir menemukan bahwa model deep learning mereka secara signifikan meningkatkan tingkat deteksi email phishing dibandingkan metode tradisional, dengan tingkat false positive yang rendah. Perbandingan performa dengan metode lain menunjukkan bahwa solusi yang diusulkan lebih unggul dalam hal akurasi dan kecepatan deteksi.
Dini et al. membandingkan model mereka dengan metode deteksi anomali tradisional dan menemukan bahwa model mereka lebih efektif dalam mengidentifikasi anomali dengan cepat. Nazat et al. menemukan bahwa metode XAI mereka memberikan penjelasan yang lebih baik dibandingkan metode deteksi anomali konvensional, meningkatkan interpretabilitas dan kepercayaan pengguna. Alevizos dan Dekker menunjukkan bahwa pipeline AI mereka lebih cepat dan akurat dalam mengidentifikasi ancaman dibandingkan dengan sistem tradisional.
AboulEla et al. membandingkan algoritma mereka dengan metode deteksi serangan konvensional dan menemukan peningkatan yang signifikan dalam tingkat deteksi serangan pada perangkat IoT. Eze dan Shamir menunjukkan bahwa model deep learning mereka lebih efektif dalam mendeteksi phishing email dibandingkan metode deteksi tradisional yang sering kali gagal mengenali pola phishing yang canggih.
Kesimpulan # Penerapan teknologi kecerdasan buatan (AI) memiliki potensi besar dalam meningkatkan keamanan dan efektivitas sistem yang berbeda, termasuk Industrial Internet of Things (IIoT), sistem mengemudi otonom, intelijen ancaman siber, ekosistem Internet of Things (IoT), dan deteksi phishing berbasis AI.
Masing-masing penelitian menemukan bahwa metode berbasis AI dapat secara signifikan meningkatkan deteksi anomali dan serangan, memberikan respons yang lebih cepat dan lebih akurat dibandingkan dengan metode konvensional. Penerapan model AI memungkinkan identifikasi pola-pola mencurigakan, pengenalan serangan yang lebih canggih, serta peningkatan kemampuan sistem untuk merespons dan mengatasi ancaman secara efektif.
Penelitian-penelitian ini juga menyoroti pentingnya AI dalam memberikan penjelasan yang dapat dimengerti oleh manusia mengenai keputusan yang diambil oleh sistem, dan sangat penting untuk meningkatkan kepercayaan pengguna dan memastikan keselamatan serta keamanan operasional. Implementasi pipeline AI untuk pemrosesan ancaman siber menunjukkan bahwa AI dapat mengelola data dalam jumlah besar secara real-time dan merespons ancaman dengan efisien.
Selain itu, algoritma deteksi anomali berbasis AI dalam ekosistem IoT dan penggunaan model deep learning untuk deteksi phishing menunjukkan kemampuan AI untuk meningkatkan akurasi deteksi ancaman yang semakin kompleks dan canggih, sehingga memberikan landasan yang kuat untuk keamanan digital masa depan.
Daftar Pustaka # P. Dini, L. Diana, A. Elhanashi, and S. Saponara, “Overview of AI-Models and Tools in Embedded IIoT Applications,” Electronics, vol. 13, no. 12, p. 2322, Jun. 2024, doi: 10.3390/electronics13122322. S. Nazat, O. Arreche, and M. Abdallah, “On Evaluating Black-Box Explainable AI Methods for Enhancing Anomaly Detection in Autonomous Driving Systems,” Sensors, vol. 24, no. 11, p. 3515, May 2024, doi: 10.3390/s24113515. S. AboulEla, N. Ibrahim, S. Shehmir, A. Yadav, and R. Kashef, “Navigating the Cyber Threat Landscape: An In-Depth Analysis of Attack Detection within IoT Ecosystems,” AI, vol. 5, no. 2, pp. 704–732, May 2024, doi: 10.3390/ai5020037. C. S. Eze and L. Shamir, “Analysis and Prevention of AI-Based Phishing Email Attacks,” Electronics, vol. 13, no. 10, p. 1839, May 2024, doi: 10.3390/electronics13101839. L. Alevizos and M. Dekker, “Towards an AI-Enhanced Cyber Threat Intelligence Processing Pipeline,” Electronics, vol. 13, no. 11, p. 2021, May 2024, doi: 10.3390/electronics13112021. `}),e.add({id:15,href:"/coretanku/selamat-datang-floyd-czar-kaban/",title:"Selamat Datang Floyd Czar Kaban",description:"Selamat Datang Floyd Czar Kaban, Anak saya yang ke empat, seterusnya nanti akan kami panggil Floyd. Saya memberi nama Floyd Czar Kaban. Floyd berarti memiliki jiwa pemimpin, pembimbing dan bijaksana. Czar=Tsar=kaisar, rajanya dari semua raja, raja dari para pemimpin. Lahir sehat pada Jumat 24 Juni 2024 dengan berat 3 Kg dan Panjang 50 Cm. Kehadiran Floyd membuat Mamak di rumah tetap menjadi yang paling cantik karena hanya dia perempuan 😄.",content:`Floyd Czar Kaban # Selamat Datang Floyd Czar Kaban, Anak saya yang ke empat, seterusnya nanti akan kami panggil Floyd. Saya memberi nama Floyd Czar Kaban. Floyd berarti memiliki jiwa pemimpin, pembimbing dan bijaksana. Czar=Tsar=kaisar, rajanya dari semua raja, raja dari para pemimpin. Lahir sehat pada Jumat 24 Juni 2024 dengan berat 3 Kg dan Panjang 50 Cm. Kehadiran Floyd membuat Mamak di rumah tetap menjadi yang paling cantik karena hanya dia perempuan 😄.
[Foto-fotonya nanti menyusul]
Sebelum Lahir (Istri Hamil Tua) # Kelahiran # Kecemburuan bang Faresta 😄 # `}),e.add({id:16,href:"/edge-computing-dalam-internet-of-thing-iot/",title:"Edge Computing dalam Internet of Thing (IoT)",description:"Penggunaan Internet of Things (IoT), layanan dan aplikasi mobile dalam skenario kompleks seperti Smart City dan Industri 4.0 telah menimbulkan tantangan baru bagi solusi yang berorientasi pada Cloud Computing. Cloud Computing merupakan paradigma komputasi dengan visi sentralisasi sumber daya dengan skema terpusat di mana komputasi dan penyimpanan diterapkan di pusat data jarak jauh. Cloud Computing mengalami keterbatasan signifikan saat berkaitan dengan teknologi yang membutuhkan respons real-time. ",content:`Pendahuluan # Penggunaan Internet of Things (IoT), layanan dan aplikasi mobile dalam skenario kompleks seperti Smart City dan Industri 4.0 telah menimbulkan tantangan baru bagi solusi yang berorientasi pada Cloud Computing. Cloud Computing merupakan paradigma komputasi dengan visi sentralisasi sumber daya dengan skema terpusat di mana komputasi dan penyimpanan diterapkan di pusat data jarak jauh. Cloud Computing mengalami keterbatasan signifikan saat berkaitan dengan teknologi yang membutuhkan respons real-time. Beberapa tahun terakhir, tren baru dalam komputasi sedang berkembang dengan fungsi cloud yang semakin beralih ke jaringan edge. Edge Computing adalah solusi optimal untuk meminimalkan latensi, meningkatkan privasi, dan mengurangi biaya bandwidth dalam skenario berbasis IoT[1]. Edge Computing menghilangkan kebutuhan untuk memproses data di cloud atau sistem terpusat lainnya dengan memproses data terdekat dengan sumbernya. Hal ini mengakibatkan transmisi data yang lebih cepat dan peningkatan kinerja perangkat beserta aplikasi di dalam teknologi Edge Computing.
Edge Computing # Edge Computing adalah platform terbuka terdistribusi dekat dengan benda atau sumber data, mengintegrasikan kemampuan jaringan, penyimpanan, dan aplikasi. Dengan menghadirkan layanan intelijen edge, Edge Computing memenuhi persyaratan utama digitalisasi industri untuk konektivitas tangkas, layanan real-time, optimalisasi data, kecerdasan aplikasi, keamanan, dan perlindungan privasi [1]. Sehingga dapat didefenisikan Edge cloud computing adalah model komputasi yang menempatkan sumber daya komputasi, seperti server, penyimpanan data, dan jaringan, lebih dekat dengan lokasi pengguna akhir atau perangkat IoT (Internet of Things). Konsep ini bertujuan untuk meningkatkan kinerja, mengurangi latensi, dan mengatasi masalah bandwidth dengan mendekatkan sumber daya komputasi ke sumber data atau pengguna akhir.
Keuntungan teknologi Edge # Dengan mengunakan teknologi EDGE dapat meningkatkan berbagai aspek berikut. [1]
Menghemat bandwidth dan sumber daya penyimpanan; untuk memfilter aliran data kebisingan yang berasal dari sumber data berbeda yang diproses oleh node sebelum mengirim data ke Cloud. Kedekatan dan latensi rendah dicapai dengan memproses informasi dekat dengan sumber asalnya. Peningkatan skalabilitas dicapai melalui desentralisasi penyimpanan dan pemrosesan. Node arsitektur Edge menyediakan isolasi dan privasi pada setiap node jaringan. Tantangan Teknologi Egde # Dibalik kelebihan yang dapat diperoleh dari teknologi EDGE, terdapat tantangan yang harus dijawab untuk meningkatkan kinerja teknologi ini diantarnya : [1]
Keterbatasan Sumber Daya. Hal Ini dapat menjadi hambatan dalam menjalankan aplikasi yang membutuhkan sumber daya yang besar atau dalam situasi di mana infrastruktur tepi harus beroperasi dalam kondisi sumber daya terbatas. Kesulitan Manajemen, pengelolan jaringan ini menjadi lebih rumit dibandingkan dengan pusat data sentral terutama jika lokasi tersebut tersebar secara luas. Keterbatasan Koneksi Jaringan, Meskipun jaringan 5G menawarkan potensi konektivitas yang cepat dan rendah latensi, implementasi edge computing masih bergantung pada ketersediaan jaringan yang dapat diandalkan. Keamanan dan Privasi yang dapat meningkatkan risiko karena data diproses di dekat sumbernya. Penanganan yang tidak tepat dari data sensitif atau celah keamanan di perangkat tepi dapat mengakibatkan pelanggaran data yang serius. Interoperabilitas yaitu Kurangnya standar yang konsisten dapat menghambat integrasi dan kolaborasi antara infrastruktur tepi yang berbeda. Biaya Implementasi dan Pemeliharaan jika infrastruktur harus ditempatkan di banyak lokasi yang tersebar dapat menjadi beban tambahan bagi perusahaan. Skalabilitas Terbatas, beberapa implementasi EDGE mungkin menghadapi batasan dalam kemampuan untuk menangani lonjakan lalu lintas atau pertumbuhan yang cepat dalam jumlah perangkat terhubung. Edge Computing dan IoT # Berikut ini adalah beberapa penelitian terbaru tentang teknologi edge computing dalam Internet of Thing (IoT):
1.	An Integrated IoT Sensor-Camera System toward Leveraging Edge Computing for Smart Greenhouse Mushroom Cultivation # Penelitian ini[2] bertujuan untuk meningkatkan efisiensi dalam industri budidaya jamur di rumah kaca dengan memanfaatkan teknologi edge computing. Tujuan utamanya adalah merancang dan mengimplementasikan arsitektur Smart Agriculture Information System (SAIS) untuk budidaya jamur di rumah kaca dengan memanfaatkan teknologi edge computing. Sistem terintegrasi sensor IoT dan kamera yang digunakan untuk memantau parameter lingkungan dan pertumbuhan jamur secara real-time. Penelitian ini menggunakan tiga layer dalam arsitektur SAIS, yaitu device layer, edge layer dan cloud layer. Device layer terdiri dari sensor IoT dan kamera yang terpasang di rumah kaca. Fungsinya adalah untuk mengumpulkan data lingkungan dan pertumbuhan jamur secara real-time. Edge layer berfungsi sebagai pengolahan awal (preprocessing) dan analisis data di lokasi terdekat dengan sumber data.
Tujuannya adalah untuk mengolah dan menganalisis data dari sensor IoT dan kamera sebelum mengirimkannya ke lapisan Cloud. Lapisan ini juga mengintegrasikan mekanisme komunikasi dua arah untuk memisahkan aliran jaringan ke dalam forward domain dan backward domain. Cloud layer berfungsi sebagai pusat penyimpanan dan pemrosesan data yang lebih lanjut setelah data diolah di edge layer. Fungsinya adalah untuk menyimpan data dalam jangka panjang dan melakukan pemrosesan data yang lebih lanjut berdasarkan data yang dikumpulkan dari lapisan Device dan Edge. Gambar 1. Layer dalam Smart Agriculture Information System Dengan menggunakan arsitektur SAIS berlapis dan memanfaatkan teknologi edge computing, memungkinkan pemantauan parameter lingkungan secara real-time untuk pengambilan keputusan berdasarkan data yang terkumpul. Arsitektur SAIS berlapis yang diusulkan dapat diadaptasi untuk berbagai kebutuhan bisnis dalam pertanian cerdas sehingga dapat meningkatkan hasil pertanian dan mengurangi biaya produksi.
2.	Scalable Digital Health (SDH): An IoT-Based Scalable Framework for Remote Patient Monitoring # Pemantauan pasien jarak jauh, terutama bagi lansia dan individu yang memiliki keterbatasan mobilitas, merupakan fokus utama dari penelitian ini. Penelitian ini[3] mengusulkan framework smart digital health yang disebut dengan Scalable Digital Health (SDH). Framework ini mengintegrasikan solusi smart digital health dengan autoscaling edge computing yang peka terhadap latensi dalam pemantauan pasien jarak jauh. Dengan memanfaatkan teknologi IoT, memungkinkan SDH melakukan pelacakan real-time dari parameter kesehatan kritis, seperti suhu tubuh, tekanan darah, dan saturasi oksigen. Metrik vital ini ditransmisikan secara efisien dalam waktu nyata ke penyimpanan cloud AWS melalui arsitektur jaringan berlapis.
Penelitian ini menyediakan aksesibilitas yang lebih baik, efisiensi biaya, dan respons yang cepat terhadap kebutuhan pasien. SDH menggunakan tiga layer fungsional utama, yaitu: Perception layer, Network layer dan Application layer. Perception layer menghubungkan pasien, sensor, dan perangkat IoT untuk mengumpulkan data kesehatan vital menggunakan modul IoT. Data ini kemudian ditransmisikan melalui jaringan ke AWS cloud. Network layer mengelola transmisi data, penyimpanan yang aman, serta pemrosesan dinamis dalam ekosistem cloud.
Gambar 2. Layer dalam Scalable Digital Health Responsivitas ditingkatkan dengan menggunakan Kubernetes Horizontal Pod Autoscaling yang berbasis latensi, sehingga meningkatkan pengalaman pengguna SDH. Application layer menyediakan antarmuka pengguna bagi para profesional medis, bagian klinik, pasien, dan pengasuh untuk mengakses data pasien, merespons dengan cepat, dan berinteraksi dengan sistem. Dengan terus mengembangkan solusi perawatan kesehatan terintegrasi seperti SDH, perawatan yang berpusat pada pasien dapat melampaui batasan geografis, memudahkan pasien dan penyedia layanan kesehatan.
3.	Progressive Adoption of RINA in IoT Networks: Enhancing Scalability and Network Management via SDN Integration # Penelitian ini[4] membahas tentang pengembangan dan penerapan RINA (Recursive InterNetwork Architecture) dalam jaringan IoT. RINA adalah sebuah arsitektur jaringan yang bersifat clean slate yang menyediakan kerangka kerja yang skalabel, aman, dan fleksibel. Di dalam konteks Internet of Things (IoT), banyak tantangan yang dihadapi terutama dalam manajemen jaringan dan skalabilitas. Untuk mengatasinya, penelitian ini mengeksplorasi RINA dengan teknologi SDN (Software Defined Networking). Integrasi ini diharapkan dapat menurunkan hambatan dalam adopsi RINA dalam lingkungan IoT.
Dalam implementasi RINA, edge computing memungkinkan data dari perangkat IoT untuk diproses dan dianalisis di lokasi yang sama, sebelum dikirim ke pusat data atau cloud. Arsitektur yang diusulkan mengikuti arsitektur generik SDN yang berbasis pada tiga lapisan, yaitu Application layer, Control layer dan Infrastructure layer. Lapisan kontrol, dan lapisan infrastruktur untuk memfasilitasi adopsi RINA dalam jaringan SDN. Infrastructure layer untuk manajemen perangkat RINA (perangkat IoT berbasis RINA, gateway IoT berbasis RINA dan EdgeNodes berbasis RINA).
Gambar 3. Arsitektur RINA Hasil dari penelitian ini menunjukkan bahwa integrasi RINA dan SDN, dengan mempertimbangkan prinsip-prinsip edge computing, berhasil mengatasi beberapa tantangan utama dalam implementasi IoT, seperti manajemen jaringan yang kompleks dan skalabilitas yang kurang. Dengan integrasi ini, jaringan IoT dapat menjadi lebih efisien, aman, dan responsif terhadap kebutuhan aplikasi yang beragam.
4.	Deep Learning-Inspired IoT-IDS Mechanism for Edge Computing Environments # Teknologi IoT telah menjadi fokus penelitian yang signifikan dalam penerapan teknik Deep Learning (DL) untuk mendeteksi serangan cyber. Infrastruktur yang kritis harus dapat mendeteksi secara cepat serangan cyber di dekat perangkat edge untuk mencegah gangguan layanan. Pendekatan DL unggul dalam deteksi serangan sehingga menjadi alternatif yang layak untuk digunakan dalam deteksi intrusi. Solusi Intrusion Detection System(IDS) IoT berbasis DL yang diusulkan pada penelitian ini[5] memiliki kemampuan dari segi skalabilitas dalam menghadapi volume data IoT yang besar, sehingga menjadikannya salah satu cara yang dapat di implementasikan dalan teknologi IoT dan edge computing. Pada Gambar 4 menunjukkan infrastruktur berbasis edge-cloud yang diusulkan untuk memantau lalu lintas IoT.
Akses data, praprocessing, identifikasi atribut, pelatihan, validasi, dan pengujian dilakukan dengan bantuan model deteksi intrusi IoT yang telah dilatih menggunakan teknik DL. Kerangka kerja yang diusulkan terdiri dari tiga komponen utama yaitu: perangkat IoT, edge layer, dan cloud layer. Perangkat IoT beroperasi dan berkomunikasi pada tingkat dasar. Di lapisan edge, alat seperti TCP mengumpulkan lalu lintas jaringan mentah dari perangkat IoT tersebut. Selanjutnya, paket data diubah menjadi data deret waktu pada tahap praprocessing. Pelatihan, pengujian, dan validasi dilakukan berdasarkan partisi dataset berdasarkan timestamp. Selain itu, pendekatan yang diusulkan menggunakan metodologi pemilihan atribut untuk mengurangi ukuran dataset sebelum mengirimkannya ke cloud untuk pelatihan. Dataset kemudian disusutkan dengan seleksi atribut di lapisan edge sebelum ditransfer ke cloud.
Gambar 4. Intrusion Detection System (IDS) berbasis ML Hasil dari penelitian ini, menemukan bahwa IDS berbasis DL berhasil mengenali pola serangan secara cepat terhadap perangkat IoT. Meskipun demikian, penerapan IDS berbasis DL di edge IoT menghadapi hambatan seperti volume data IoT yang besar dan kebutuhan komputasi DL yang tinggi.
5.	Global Resource Scheduling for Distributed Edge Computing # Penelitian ini[6] membahas tentang penjadwalan sumber daya dalam edge computing. Sistem lalu lintas dan pemantauan dalam IoT memerlukan penjadwalan dan migrasi sumber daya yang efektif. Dalam mengatasi tantangan ini, penjadwalan sumber daya harus mempertimbangkan biaya yang terkait dengan penjadwalan, dengan tujuan mengidentifikasi strategi optimal di antara berbagai solusi yang layak. Berbagai skenario aplikasi memperkenalkan tujuan optimasi yang beragam, termasuk pertimbangan seperti biaya, keterlambatan transmisi (latensi), dan konsumsi energi.
Penelitian ini memberikan kontribusi khususnya pemodelan matematis dalam hal penjadwalan dengan mendefinisikan masalah penjadwalan sumber daya global untuk edge computing. Penelitian ini mengusulkan strategi solusi heuristik berdasarkan algoritma Ant Colony Algorithm (ACO) dengan optimasi menggunakan parameter Particle Swarm Optimization (PSO). Algoritma penjadwalan pada penelitian ini memiliki kemampuan untuk mencapai hasil yang mendekati optimal dengan jumlah iterasi yang berkurang.
Kesimpulan # IoT dan edge computing digunakan di berbagai bidang seperti kesehatan dan pertanian. Dalam sektor kesehatan, diperkenalkannya framework untuk pemantauan pasien jarak jauh berbasis IoT menunjukkan potensi besar dari integrasi ini. Di bidang pertanian, integrasi IoT dan edge computing digunakan untuk meningkatkan produksi jamur dalam rumah kaca cerdas. Dari sisi arsitektur, adopsi arsitektur RINA dengan SDN menjadi alternatif untuk meningkatkan skalabilitas jaringan IoT.
Sistem keamanan yang ditingkatkan menggunakan teknik Deep Learning memberikan pendekatan yang efektif untuk deteksi serangan dalam lingkungan edge computing. Selain itu, penjadwalan sumber daya edge computing yang efisien sangat penting, seperti yang ditunjukkan dalam penelitian tentang penjadwalan sumber daya global untuk edge computing yang terdistribusi.
Daftar Pustaka # I. Sittón-Candanedo, R. S. Alonso, J. M. Corchado, S. Rodríguez-González, and R. Casado-Vara, “A review of edge computing reference architectures and a new global edge proposal,” Future Generation Computer Systems, vol. 99, pp. 278–294, Oct. 2019, doi: 10.1016/j.future.2019.04.016.
H. H. Nguyen, D.-Y. Shin, W.-S. Jung, T.-Y. Kim, and D.-H. Lee, “An Integrated IoT Sensor-Camera System toward Leveraging Edge Computing for Smart Greenhouse Mushroom Cultivation,” Agriculture, vol. 14, no. 3, p. 489, Mar. 2024, doi: 10.3390/agriculture14030489.
H. Alasmary, “ScalableDigitalHealth (SDH): An IoT-Based Scalable Framework for Remote Patient Monitoring,” Sensors, vol. 24, no. 4, p. 1346, Feb. 2024, doi: 10.3390/s24041346.
D. Sarabia-Jácome, S. Giménez-Antón, A. Liatifis, E. Grasa, M. Catalán, and D. Pliatsios, “Progressive Adoption of RINA in IoT Networks: Enhancing Scalability and Network Management via SDN Integration,” Applied Sciences, vol. 14, no. 6, p. 2300, Mar. 2024, doi: 10.3390/app14062300.
A. Aldaej, T. A. Ahanger, and I. Ullah, “Deep Learning-Inspired IoT-IDS Mechanism for Edge Computing Environments,” Sensors, vol. 23, no. 24, p. 9869, Dec. 2023, doi: 10.3390/s23249869.
A. Tan, Y. Li, Y. Wang, and Y. Yang, “Global Resource Scheduling for Distributed Edge Computing,” Applied Sciences, vol. 13, no. 22, p. 12490, Nov. 2023, doi: 10.3390/app132212490.
`}),e.add({id:17,href:"/mobile-ad-hoc-network-manet-protokol-dan-aplikasinya/",title:"Mobile Ad hoc Network (MANET): Protokol dan Aplikasinya",description:"Mobile Ad hoc Network (MANET) adalah jenis jaringan nirkabel yang terdiri dari sekelompok perangkat mobile yang dapat berkomunikasi satu sama lain tanpa perlu infrastruktur jaringan tetap, seperti router atau access point. Perangkat dalam MANET dapat bergerak bebas dan secara dinamis membentuk jaringan sementara. Manet memiliki karakteristik seperti Infrastruktur yang otonom, Skalabilitas jaringan dan kemampuan node dan variasi tautan.",content:`Mobile Ad hoc Network (MANET) # Mobile Ad hoc Network (MANET) adalah jenis jaringan nirkabel yang terdiri dari sekelompok perangkat mobile yang dapat berkomunikasi satu sama lain tanpa perlu infrastruktur jaringan tetap, seperti router atau access point. Perangkat dalam MANET dapat bergerak bebas dan secara dinamis membentuk jaringan sementara. Manet memiliki karakteristik seperti Infrastruktur yang otonom, Skalabilitas jaringan dan kemampuan node dan variasi tautan.
Karakterisitik Manet # Tanpa infrastruktur dan otonom MANET tidak bergantung pada infrastruktur terpusat atau mapan. Setiap node dapat berperan sebagai router atau menghasilkan data untuk transmisi Skalabilitas Jaringan Algoritma umum untuk manajemen jaringan ditujukan untuk beroperasi pada jaringan Wi-Fi tetap atau kecil. Jaringan besar menimbulkan banyak tantangan seperti skalabilitas, pengalamatan, manajemen lokasi, perutean, keamanan, interoperabilitas, dan bandwidth yang tinggi Kemampuan Node dan Variasi Tautan Setiap node lebih antarmuka radio, bekerja pada pita frekuensi berbeda dan memiliki kemampuan transmisi/penerimaan berbeda mengakibatkan hubungan asimetris dalam kemampuan node Masalah utama dalam MANET adalah setiap node berfungsi sebagai router dan perangkat akhir Tantangan dalam Manet # Topologi yang fleksibel Node dapat berpindah secara acak Topologi jaringan yang biasanya memiliki banyak hop dapat berpindah secara spontan dan cepat pada waktu yang tidak terduga, dan dapat terdiri dari koneksi dua arah dan satu arah Route Sulit untuk merutekan paket antar node. Mayoritas protokol menggunakan perutean reaktif. Pergerakan acak dari node pada jaringan berarti perutean multi-cast menjadi masalah lain karena Multi Casting Tree tidak lagi statis. Ada beberapa rute hop antar node yang lebih kompleks daripada komunikasi satu hop. Jenis-jenis Manet # Vehicular Ad hoc Network (VANET)
VANET merupakan jenis jaringan MANET yang memungkinkan komunikasi antar kendaraan atau perangkat keselamatan yang ada di pinggir jalan. VANET bertujuan agar memastikan semua kendaraan menjadi lancar dan aman di jalan.
Smart Phone Ad hoc Network (SPAN)
Digunakan di seluruh perangkat telepon seluler dengan membuat jaringan peer-to-peer melalui bantuan Teknologi Wi-Fi dan Bluetooth
Internet based Mobile Ad hoc Network (iMANET)
Menghubungkan node seluler dan menetapkan rute yang didistribusikan secara otomatis berdasarkan konsep protokol jaringan seperti User Datagram Protocol (UDP), Transmission Control Protocol (TCP), Internet Protocol (IP) dan Routing Information Protocol.
Hub-Spoke MANET
Jaringan yang dibentuk dari beberapa sub MANET yang dihubungkan dalam VPN hub-spoke agar jaringan terdistribusi secara geografis.
Military MANET
Menekankan pada kecepatan data, request secara realtime, routing yang cepat selama perangkat bergerak, keamanan yang tinggi, dan adanya jangkauan radio yang digunakan pada perangkat militer
Flying Ad hoc Network (FANET)
digunakan pada kendaraan udara tak berawak (umumnya dikenal sebagai drone)
Isu Keamanan dalam Manet # Tidak ada Batasan yg ditentukan sebelumnya
Tidak memiliki batas fisik tetap dan node beroperasi dalam lingkungan yang dinamis. Serangan seperti peniruan identitas dan DoS sulit dideteksi karena koneksi nirkabel bisa terputus secara acak.
Tidak ada sistem operasi pusat
Tanpa sistem kendali terpusat, masalah keamanan meningkat. Serangan sulit dideteksi karena kendali didistribusikan ke setiap node, dan sulit mengidentifikasi node yang dipercaya karena kurangnya perlindungan.
Penyusup di dalam jaringan
Node seluler rentan terhadap serangan karena sulit mendeteksi node yang tidak diinginkan dan memantau aktivitas yang mencurigakan. Akibatnya berupa pencurian informasi dan serangan berbahaya, terutama pada transfer data sensitif antar node. Serangan seperti man-in-the-middle mudah diatur karena banyaknya titik akses dalam jaringan.
Keterbatasan sumber energi
Node di MANET rentan terhadap serangan DoS yang menyebabkan pengurasan daya baterai dengan membanjiri node target dengan lalu lintas atau meminta layanan komputasi berat.
Perbandingan Protokol Routing # Parameters Proactive protocols Reactive protocols Hybrid and nature-inspired protocols Skema Routing Penggunaan tabel routing dan memerlukan pemeliharaan melalui pembaruan periodik dari tetangga Sesuai permintaan; rute dihitung hanya saat diperlukan Kombinasi kedua model berbasis tabel dan sesuai permintaan untuk memberikan skema routing yang lebih baik Aksesibilitas Rute Rute selalu tersedia; diperbarui secara otomatis saat node bergabung dengan jaringan Rute dihitung sesuai kebutuhan transmisi; diidentifikasi saat komunikasi diperlukan Ketersediaan routing bergantung pada lokasi node sumber dan tujuan di zona-zona Kualitas Layanan (QoS) QoS dijamin karena rute terdefinisi dengan baik dalam tabel routing; paket mengikuti rute yang sama QoS tidak dijamin; tidak ada rute khusus yang ditetapkan untuk perjalanan paket QoS dijamin di dalam zona-zona; rute diketahui dan disimpan dalam tabel routing, tetapi tidak dijamin untuk komunikasi antar-zona Overhead Lebih banyak overhead karena pembaruan periodik untuk pemeliharaan tabel routing Lebih sedikit overhead dibandingkan dengan proaktif; tidak perlu pembaruan periodik Overhead ada karena node hanya menyimpan tabel routing untuk node tetangga Dukungan Mobilitas Memerlukan pembaruan periodik untuk mendeteksi tetangga dan pembaruan tabel routing; komunikasi tersedia kapan saja Memerlukan pemeliharaan rute untuk mendeteksi perubahan topologi jaringan Kombinasi pembaruan periodik dan pemeliharaan rute; pembaruan periodik di dalam zona-zona dan pemeliharaan rute untuk komunikasi antar-zona Skalabilitas Terbatas pada sekitar 100 node; skalabilitas sulit karena komunikasi yang meningkat saat penambahan node Lebih dari 100 node mungkin; rute diidentifikasi hanya saat diperlukan untuk komunikasi Lebih dari 1000 node mungkin; kombinasi routing proaktif dan reaktif memungkinkan skalabilitas yang lebih besar Keterlambatan Latensi rute rendah karena rute sudah tersedia dalam tabel routing untuk setiap komunikasi antar node Latensi rute tinggi karena node harus menemukan rute terlebih dahulu dan kemudian melanjutkan transmisi. Semakin panjang rutenya, semakin tinggi latensinya Penyimpanan Data Kapasitas penyimpanan lebih tinggi diperlukan untuk memelihara tabel routing yang terbaru tergantung pada jumlah rute yang dibutuhkan. Untuk pemeliharaan rute, tergantung sepenuhnya pada apakah ada kerusakan rute. Semakin besar zona, semakin tinggi penyimpanan yang diperlukan untuk menyimpan tabel routing Pembaruan Rute Pembaruan periodik selalu diperlukan untuk memelihara tabel routing; setiap node meminta informasi untuk mengkonfirmasi keberadaan node di jaringan Dalam skenario ini, pembaruan periodik tidak diperlukan karena node tidak menyimpan tabel routing. Pembaruan periodik digunakan hanya di dalam zona-zona; setiap node di dalam setiap zona berkomunikasi dengan tetangganya untuk memperbarui tabel routing Informasi Routing Ini adalah pendekatan paling dasar di mana setiap node memelihara tabel routing untuk merutekan paket dari sumber ke tujuan Karena rute ditentukan sesuai permintaan, tidak perlu menyimpan informasi routing untuk node berkomunikasi Informasi routing disimpan dalam tabel routing untuk setiap node di setiap zona. Tidak ada rute yang tersedia dalam tabel routing untuk berkomunikasi di luar zona Kontrol Data Plane Lalu lintas kontrol lebih tinggi daripada reaktif karena lebih banyak lalu lintas dalam jaringan proaktif untuk pembaruan tabel routing Lalu lintas kontrol biasanya rendah tetapi meningkat dengan mobilitas rute aktif. Untuk hibrida, lebih rendah dari proaktif dan reaktif karena lebih banyak lalu lintas di setiap zona tetapi tidak di antar zona. Konsep Routing Sebagian besar adalah routing datar karena semua node dalam jaringan memiliki peran dan fungsionalitas yang sama Juga sebagian besar datar karena peran dan fungsionalitas yang sama dari setiap node dalam jaringan Skema routing hierarkis diadopsi. Ada node dengan peran yang berbeda. Sebagian besar node melakukan komunikasi intra-zona sementara beberapa node melakukan komunikasi antar zona. Konsumsi Bandwidth Kebutuhan bandwidth lebih tinggi karena pembaruan periodik untuk pemeliharaan tabel routing Konsumsi bandwidth rendah karena transfer data terjadi hanya saat diperlukan untuk komunikasi. Tidak ada paket ekstra yang melakukan perjalanan secara periodik dibandingkan dengan proaktif Kebutuhan bandwidth sedang karena paket ekstra dikirim hanya di setiap zona untuk memperbarui tabel routing; tidak ada komunikasi antar zona untuk memperbarui. Konsumsi Daya Kebutuhan daya tinggi karena setiap kali node harus mengirim paket ekstra untuk memperbarui tabel routing secara periodik. Kebutuhan daya rendah karena tidak perlu mengirim paket ekstra untuk memperbarui tabel routing. Konsumsi daya diperlukan hanya saat ada kebutuhan untuk komunikasi. Kebutuhan daya sedang karena pembaruan periodik dilakukan hanya di dalam setiap zona untuk node tetangga. Aplikasi Manet # Jaringan Sensor
Jaringan sensor terdiri dari sensor-sensor kecil yang mengumpulkan informasi lingkungan seperti tekanan, suhu, dan emisi gas. Contohnya adalah penggunaan sensor-sensor ini dalam aplikasi pemantauan cuaca atau kualitas udara di kota-kota. Setiap sensor memiliki keterbatasan kapasitas dan harus saling bergantung untuk mengirimkan data ke pusat pengolahan informasi. Sebagai contoh, dalam pemantauan lingkungan, sensor-sensor ini dapat digunakan untuk memantau polusi udara di area perkotaan. Dukungan teknologi Internet of Things (IoT) dan kecerdasan buatan (AI) semakin meningkatkan popularitas jaringan sensor dalam berbagai aplikasi, termasuk pertanian pintar. Topologi jaringan sensor dapat berubah secara dinamis dengan bergabungnya sensor-sensor baru, memungkinkan adaptasi terhadap perubahan lingkungan secara real-time. Manajemen Bencana
MANET digunakan dalam operasi penyelamatan darurat, seperti saat tim penyelamat merespons gempa bumi atau banjir. Penyelamat dapat membentuk jaringan ad-hoc dengan menggunakan peralatan sederhana, seperti smartphone atau radio komunikasi portabel. Contohnya, ketika terjadi gempa bumi, tim penyelamat dapat menggunakan MANET untuk berkoordinasi dan memberikan bantuan kepada korban di area terdampak. Selain itu, jaringan sosial seperti Facebook dan Twitter juga dapat digunakan untuk menyebarkan informasi penting kepada masyarakat luas selama keadaan darurat. Dengan bantuan MANET, penyelamat dapat dengan cepat mengirimkan informasi vital kepada pusat komando dan mendapatkan bantuan tambahan dari sumber daya eksternal. Melalui penggunaan teknologi komunikasi modern seperti MANET, upaya penyelamatan dapat ditingkatkan efisiensinya dalam situasi darurat. Militer
Jaringan ad-hoc memungkinkan militer untuk membentuk jaringan informasi antara kendaraan, prajurit, dan markas menggunakan infrastruktur jaringan yang ada di lokasi. Di masa depan, militer akan menuju model Network-Centric Warfare (NCW), di mana kekuatan komunikasi jaringan dan pertukaran pengetahuan menjadi fokus utama. Contoh dari hal ini adalah penggunaan jaringan ad-hoc oleh pasukan militer di medan perang untuk berbagi informasi secara real-time dan memperkuat koordinasi antarunit. Model NCW memungkinkan akses ke jaringan yang mirip dengan akses internet, untuk mendukung komunikasi yang efektif kapan pun dan di mana pun. Bluetooth dan Jaringan Area Personal (PAN)
Bluetooth dan Jaringan Area Personal (PAN) adalah jaringan lokal kecil di mana node-node terhubung ke perangkat tertentu, seperti laptop atau ponsel. Contoh: Sebuah kantor yang menggunakan PAN untuk menghubungkan komputer-komputer di sekitar area kerja. MANET jarak pendek, seperti Bluetooth, dapat menyederhanakan koneksi dengan perangkat bergerak. Contoh: Menghubungkan headset Bluetooth dengan ponsel saat berjalan-jalan. Operasi daya rendah sangat penting terutama dalam populasi yang padat dan besar. Contoh: Headset Bluetooth yang dirancang untuk menghemat daya agar tahan lama dalam penggunaan sehari-hari. Penting untuk mengoptimalkan ukuran perangkat, jumlah siklus CPU, bandwidth nirkabel, dan kapasitas baterai. Contoh: Ponsel cerdas yang menggunakan teknologi Bluetooth Low Energy (BLE) untuk menghemat daya dan memperpanjang masa pakai baterai. Pendidikan
MANET memperkuat interaksi dalam pendidikan dengan jaringan Ad-Hoc untuk pertukaran informasi antara siswa dan guru. Digunakan di kelas, ruang rapat virtual, dan sinyal nirkabel di kampus universitas. Memungkinkan berbagi materi pelajaran secara real-time di dalam ruang kuliah. Cakupan jaringan dapat diperluas tanpa perlu menambah titik akses baru. Koneksi perangkat seluler meningkatkan akses ke sumber daya pendidikan, seperti perpustakaan universitas. Kesimpulan # Paper ini menjelaskan protokol routing MANET yang dibagi menjadi proaktif, reaktif, hibrida, dan terinspirasi alam.
Protokol proaktif berusaha mengelola rute terus-menerus, namun dapat menghasilkan overhead yang tidak perlu.
Protokol reaktif menemukan rute hanya saat diperlukan, tetapi dapat menyebabkan lalu lintas yang besar jika jaringan berubah sering.
Protokol hibrida menggabungkan fitur terbaik dari proaktif dan reaktif, sering menjadi pilihan terbaik untuk MANET.
Masalah utama dalam MANET meliputi kesulitan dalam transmisi yang aman dan perluasan bandwidth untuk komunikasi nirkabel. Protokol multicast telah diusulkan sebagai solusi untuk beberapa masalah tersebut.
Referensi # D. Ramphull, A. Mungur, S. Armoogum and S. Pudaruth, &ldquo;A Review of Mobile Ad hoc NETwork (MANET) Protocols and their Applications,&rdquo; 2021 5th International Conference on Intelligent Computing and Control Systems (ICICCS), Madurai, India, 2021, pp. 204-211, doi: 10.1109/ICICCS51141.2021.9432258.
`}),e.add({id:18,href:"/coretanku/ulang-tahun-2023/",title:"Ulang Tahun 2023",description:"Perayaan ulang merupakan ungkapan terima kasih dan penghargaan atas segala anugrah berupa kesehatan yang dimiliki, kesempatan yang diberikan, serta momen-momen berharga yang telah dialami selama setahun terakhir. Sudah selayaknya kita merenungkan pencapaian, pengalaman, serta pelajaran yang diperoleh sepanjang perjalanan setahun ini. Terima kasih untuk Istriku, Faresta, Adik-adik Mahasiswa yang sudah ikut merayakan ulang tahun saya kali ini.",content:`Ulang tahun 2023 # Perayaan ulang merupakan ungkapan terima kasih dan penghargaan atas segala anugrah berupa kesehatan yang dimiliki, kesempatan yang diberikan, serta momen-momen berharga yang telah dialami selama setahun terakhir. Sudah selayaknya kita merenungkan pencapaian, pengalaman, serta pelajaran yang diperoleh sepanjang perjalanan setahun ini. Terima kasih untuk Istriku, Faresta, Adik-adik Mahasiswa yang sudah ikut merayakan ulang tahun saya kali ini.
Bersama Istri dan Faresta # Bersama Anak TI S1 Medan Kelas A # Bersama Anak SI S1 Medan # Bersama Anak TI S1 Tandem dan HMTI # Bersama Anak TI S1 Medan Kelas B # `}),e.add({id:19,href:"/coretanku/seminar-2023-keamanan-data-pribadi-dalam-berinteraksi-di-dunia-digital/",title:"Seminar 2023: Keamanan Data Pribadi dalam Berinteraksi di Dunia Digital",description:"Penggunaan perangkat digital seperti smartphone, laptop, dan tablet telah menjadi bagian tak terpisahkan dari kehidupan kita sehari- hari. Perangkat digital ini umumnya digunakan untuk pekerjaan, pembelajaran online, hiburan, dan berbagai aktivitas lainnya. Berdasarkan data dari WeAreSocial per januari 2023, perangkat digital di indonesia yang terkoneksi ke internet itu adalah 353,8 juta, jumlah ini melebihi total penduduk indonesia sendiri yaitu 276,4 juta.",content:`Seminar Keamanan Data Pribadi dalam Berinteraksi di Dunia Digital # Institut Teknologi dan Bisnis Indonesia (ITB Indonesia) menyelenggarakan Seminar Nasional bekerjasama dengan Bank Mandiri. Seminar ini diselenggarakan selama enam hari mulai dari tanggal 6 sampai 13 Desember 2023 di Mandiri University Jl Kutilang No. 44 Sei Sikambing B Medan.
Pada kegiatan seminar ini saya ditugaskan dari kampus untuk presentasi pada hari pertama (6 Desember 2023) di Sesi II (pukul 13.00 s/d 16.00). Informasi yang saya dapat dari kampus, bahwa peserta kegiatan adalah mahasiswa dari berbagai prodi, bukan &lsquo;murni&rsquo; latar belakang komputer, sehingga menurut saya topik umum dan berhubungan dengan Teknologi mungkin sangat dibutuhkan.
Selain itu, jumlah pengguna perangkat digital yang terkoneksi ke jaringan internet di indonesia meningkat secara signifikan dari tahun ke tahun. Penggunaan perangkat digital seperti smartphone, laptop, dan tablet telah menjadi bagian tak terpisahkan dari kehidupan sehari- hari. Perangkat digital ini umumnya digunakan untuk pekerjaan, belajar, hiburan, dan berbagai aktivitas lainnya. Berdasarkan data dari WeAreSocial per januari 2023, perangkat digital di indonesia yang terkoneksi ke internet itu adalah 353,8 juta, jumlah ini melebihi total penduduk indonesia sendiri yaitu 276,4 juta. Masih berdasarkan data diatas, 77% penduduk indonesia saat ini sudah menggunakan layanan internet. Media sosial memiliki peran utama dalam interaksi sosial untuk terhubung dengan teman, keluarga, dan komunitas, serta berbagi pengalaman dan informasi melalui platform seperti Facebook, Instagram, Twitter, dll. Waktu yang dihabiskan pengguna di sosial media juga dapat dibilang sangat tinggi, setiap pengguna itu menghabiskan waktu 14 hingga 29 jam per bulan menggunakan aplikasi sosial media. Potensi Ancaman terhadap Data Pribadi # Salah satu ancaman bagi para pengguna teknologi digital, yaitu keamanan data pribadi yang dimiliki oleh masing-masing pengguna. Hal ini sejalan dengan maraknya pemanfaatan berbagai bentuk kemajuan teknologi membuat data pribadi seseorang menjadi lebih mudah untuk didapatkan di dunia maya. Ketidaktelitian pengguna yang sengaja mengunggah data dan penyalahgunaan data oleh berbagai oknum yang tidak bertanggung jawab menjadi pemicunya. Hal ini yang kemudian menjadi sebuah keharusan bagi masyarakat di era digital untuk lebih menjaga berbagai informasi mengenai data pribadi sebagai sebuah aset yang sangat berharga.
Bagaimana ini dapat terjadi? # Terdapat berbagai ancaman terhadap data pribadi, seperti Pencurian Identitas (Identity Theft), Penipuan Finansial, Pembobolan Akun Online, Pemalsuan Dokumen, Pembelian Barang dan Jasa ilegal, Pencucian Uang, dan sebagainya. Beberapa cara umum yang sering digunakan termasuk pengelabuan melalui pengiriman email palsu atau pesan yang terlihat asli dari media sosial yang digunakan, organisasi, atau institusi yang membuat pesan tersebut tampak seolah-olah memerlukan respons segera karena ancaman penutupan atau penyusupan akun.
Pesan-pesan palsu ini biasanya mengandung tautan ke halaman web atau aplikasi. Tindakan seperti menggunakan software bajakan, membuka lampiran email, atau mengklik jendela pop-up dapat secara diam-diam memasang perangkat lunak berbahaya di perangkat, yang memungkinkan pencuri untuk mengumpulkan kata sandi atau nomor akun kita. Oversharing atau berbagi terlalu banyak informasi pribadi melalui media sosial, seperti foto, video, postingan, dan detail pribadi lainnya, juga dapat memudahkan pencuri untuk menemukan dan menyalahgunakan informasi pribadi kita untuk kegiatan negatif.
Perlindungan Data Pribadi # Proteksi Akun, Gunakan kata sandi yang berbeda untuk berbagai akun. Password: min 8, kombinasi huruf (besar, kecil), karakter dan angka agar. Lakukan pergantian pass secara berkala. Hindari Konektivitas Jaringan Public, Tidak semua Wi-Fi publik dapat terjamin dengan baik keamanannya. Untuk itu, sebaiknya meminimalisir penggunaan Wi-Fi publik dari sembarang tempat. Hindari Software Bajakan, Gunakan perangkat lunak (software) yang legal dan update berkala. Tidak update secara berkala, dapat membuat potensi terbukanya celah keamanan dalam software. Berhati-hati terhadap tautan mencurigakan, Berhati-hati terhadap tautan/link mencurigakan yang disebar melalui pesan dan email, Jangan mengklik tautan yang dirasa asing dengan sembarangan
Untuk memastikan perlindungan yang lebih baik terhadap keamanan data pribadi, ada beberapa langkah sederhana yang dapat dilakukan. Pertama, proteksi akun yang efektif dengan menggunakan kata sandi yang berbeda untuk setiap akun yang kita miliki. Pastikan kata sandi terdiri dari minimal 8 karakter, termasuk kombinasi huruf besar, kecil, karakter khusus, dan angka, serta secara rutin mengubah kata sandi agar lebih aman.
Selain itu, hindari konektivitas ke jaringan Wi-Fi publik yang tidak dapat terjamin keamanannya. Kurangi penggunaan Wi-Fi publik dari lokasi sembarang untuk mengurangi risiko terhadap serangan atau akses yang tidak sah. Penting juga untuk menggunakan perangkat lunak yang legal dan selalu diupdate. Software yang tidak di update secara berkala dapat membuka celah keamanan yang dapat dimanfaatkan oleh pihak yang tidak bertanggung jawab.
Terakhir, berhati-hatilah terhadap tautan atau link yang mencurigakan yang mungkin tersebar melalui pesan dan email. Hindari mengklik tautan yang terlihat asing atau tidak dikenal secara sembarangan, karena hal ini dapat membahayakan keamanan data pribadi Anda. Dengan menerapkan langkah-langkah ini, Anda dapat meningkatkan perlindungan terhadap data pribadi Anda di era digital saat ini.
Foto-foto kegiatan # Banner Seminar Datang Ontime, menunggu sesi. Foto lain menyusul&hellip;
Penutup # Konektivitas internet memungkinkan individu untuk terhubung dengan dunia di manapun dan kapanpun. Koneksi seluler (mobile) dan Wi-Fi membuat komunikasi lebih mudah dilakukan. Kita harus selalu waspada akan Keamanan Data Pribadi dalam Berinteraksi di Dunia Digital.
Link materi # Download Materi
`}),e.add({id:20,href:"/ringkasan-10-jurnal-dengan-topik-cybercrime-kejahatan-dunia-maya/",title:"Ringkasan 10 Jurnal dengan topik Cybercrime (Kejahatan dunia maya)",description:"Cybercrime merupakan  kejahatan yang dilakukan secara online atau melalui jaringan internet. Cybercrime mencakup serangkaian aktivitas kriminal yang melibatkan penggunaan teknologi informasi sebgai media utama untuk melakukan kejahatan. Tindakan Cybercrime beragam, seperti pencurian identitas, penipuan online, peretasan (hacking), penyebaran malware (perangkat lunak berbahaya), pencurian data, hingga kegiatan ilegal lainnya yang dilakukan melalui internet.",content:`Pengantar # Cybercrime merupakan kegiatan kejahatan yang dilakukan secara online atau melalui jaringan internet. Cybercrime mencakup serangkaian aktivitas kriminal yang melibatkan penggunaan teknologi informasi atau komputer sebagai alat utama untuk melakukan kejahatan. Cybercrime bisa beragam, mulai dari pencurian identitas, penipuan online, peretasan (hacking), penyebaran malware (perangkat lunak berbahaya), pencurian data, hingga kegiatan ilegal lainnya yang dilakukan melalui internet atau jaringan komputer.
Artikel ini merupakan tugas perkuliahan saya, kebetulan dapat tugas untuk mencari dan meringkas 10 jurnal, saya posting di sini siapa tau nanti ada teman-teman yang butuh untuk dijadikan referensi.
1. Measuring Cybercrime as a Service (CaaS) Offerings in a Cybercrime Forum # Penelitian ini(Akyazi, 2021) membahas tentang pengukuran penawaran dan permintaan Cybercrime as a Service (CaaS) di sebuah forum kejahatan dunia maya (Cybercrime). CaaS merupakan model bisnis di Cybercrime yang memberikan layanan seperti perangkat lunak berbahaya, akses ilegal ke sistem, atau layanan penipuan, ditawarkan untuk disewakan atau dijual kepada pelaku kejahatan dunia maya lainnya. Dalam konteks forum kejahatan dunia maya, CaaS dapat mencakup berbagai jenis layanan, mulai dari botnet as a service, layanan eskalasi reputasi, hingga layanan hosting yang aman untuk kegiatan kriminal. Forum kejahatan dunia maya menyediakan platform di mana penawaran dan permintaan untuk layanan kejahatan dunia maya dapat dipublikasikan dan ditemukan oleh para pelaku kejahatan. Penelitian ini menggunakan teknik-teknik seperti analisis sentimen berbasis deep learning, analisis jaringan sosial, k-means clustering, dan pemrosesan bahasa alami, serta pengklasifikasi SVM (Support Vector Machine) untuk melacak evolusi pertukaran mata uang di komunitas forum kejahatan dunia maya. Penelitian ini juga menggunakan pendekatan Linear SVM dan heuristik untuk mengidentifikasi pertanyaan-pertanyaan yang relevan. Metode-metode ini digunakan untuk mengumpulkan data tentang penawaran CaaS dan menganalisis dinamika penawaran tersebut di forum kejahatan dunia maya. Hasil dari penelitian ini menyampaikan bahwa jenis CaaS yang paling umum adalah bot/botnet as a service, reputation escalation as a service, dan traffic as a service. Model pembelajaran mesin seperti LinearSVC, Logistic Regression, dan XGBoost dapat digunakan untuk mengklasifikasikan jenis CaaS, penawaran dan permintaan, serta informasi kontak dan tautan perdagangan eksternal dengan akurasi yang baik. Hasil penelitian ini memberikan wawasan tentang jenis dan prevalensi penawaran CaaS di forum kejahatan dunia maya, serta memberikan informasi tentang dinamika penawaran CaaS di forum tersebut. Hal ini dapat membantu upaya penegakan hukum dan keamanan siber untuk memahami dan mengatasi ancaman kejahatan dunia maya yang berkaitan dengan CaaS.
2. The measurement, intensity and determinants of fear of cybercrime: A systematic review # Penelitian ini (Brands &amp; Van Doorn, 2022) merupakan tinjauan sistematis terhadap studi tentang pengukuran, intensitas, dan penentu ketakutan akan kejahatan dunia maya. Dijabarkan berbagai jenis kejahatan dunia maya dan respons emosional seperti ketakutan, kekhawatiran, dan kecemasan. Penelitian ini juga membahas pentingnya menggunakan istilah dan pengukuran yang tepat dalam mempelajari perasaan dan emosi yang terkait dengan ancaman kejahatan dunia maya secara subjektif. Sebagian besar studi mengambil sampel dari populasi umum suatu negara atau segmen tertentu dari populasi umum, seperti mahasiswa atau remaja. Selain itu, dipaparkan juga berbagai perbedaan kualitas studi yang disertakan dalam tinjauan sistematis. Dalam penelitian ini dibahas juga perbedaan dalam pendekatan dan pengukuran ketakutan akan kejahatan dunia maya yang dilakukan oleh studi-studi yang dianalisis. Terdapat studi yang secara eksklusif mengukur emosi ketakutan, kekhawatiran, atau kecemasan, sementara ada pula studi-studi yang menggabungkan beberapa emosi tersebut dalam satu pertanyaan atau dengan menggunakan pertanyaan-pertanyaan terpisah. Diberikan juga contoh-contoh hasil studi terkait ketakutan akan kejahatan dunia maya, seperti pengukuran kecemasan peretasan berdasarkan skala GAD-7 dalam sampel populasi Amerika dan Korea.
3. Threats and Corrective Measures for IoT Security with Observance of Cybercrime: A Survey # Penelitian ini(Rani et al., 2021) membahas tentang forensik Internet of Things (IoT) dan tantangan yang terkait dengan analisis forensik untuk data yang dihasilkan oleh berbagai jenis perangkat yang terhubung ke IoT. Penelitian ini mengidentifikasi bahwa banyak perangkat wearable yang digunakan untuk kesehatan dan kebugaran dapat pula menjadi sumber bukti dalam penyelidikan kejahatan, karena perangkat tersebut secara pasif menyimpan data terkait aktivitas pengguna. Penulis menegaskan bahwa data yang diekstraksi dari perangkat-perangkat ini dapat sangat pribadi bagi para pengguna. Oleh sebab itu, diperlukan perhatian khusus terhadap keamanan data tersebut. Peneliti juga menyoroti bahwa sebagian besar sistem IoT tidak diterapkan dengan langkah-langkah keamanan standard sehingga berpotensi menimbulkan risiko yang tinggi. Hal ini menunjukkan perlunya teknik yang lebih canggih untuk memastikan keamanan data di era pertumbuhan perangkat IoT. Penelitian ini juga memperkenalkan berbagai teknologi dan pendekatan baru untuk pengumpulan bukti digital dalam lingkungan IoT, termasuk teknik analisis digital untuk data yang tersimpan dalam memori sistem, serta teknologi kontraksi data dan analisis parsial otomatis untuk penanganan data bukti digital dalam volume besar yang dihasilkan oleh perangkat IoT. Penelitian juga membahas beberapa platform dan kerangka kerja investigasi forensik yang dikembangkan untuk lingkungan smart home, kendaraan terhubung melalui internet (IoV), dan kendaraan otonom dalam lingkungan smart city.
4. Scenario Analysis of Improving the Effectiveness of Cybercrime Investigation Management Problems # Penelitian ini(Schul’tz et al., 2021) membahas tentang pentingnya meningkatkan sistem penegakan hukum untuk mengatasi kejahatan cyber dengan efektif di tengah pesatnya perkembangan ekonomi digital. Analisis skenario digunakan untuk mempelajari tantangan dalam menciptakan lembaga investigasi tunggal dan dampak kejahatan cyber terhadap keamanan publik. Hasil penelitian ini menunjukkan bahwa tren saat ini dalam perkembangan masyarakat dan negara membutuhkan transformasi yang memadai dalam struktur sistem penegakan hukum untuk menghadapi risiko dan ancaman yang muncul. Sebagian besar tindakan ilegal yang mengancam keamanan publik dan dilakukan melalui teknologi informasi dapat dibagi menjadi dua kelompok, yaitu: tindakan yang berkaitan dengan interaksi manusia dengan teknologi, dan tindakan yang berkaitan dengan interaksi antar manusia yang terselenggara dengan bantuan sarana teknologi. Saat ini, kelompok kedua merupakan ancaman terbesar bagi keamanan individu, masyarakat, dan negara. Dalam hal ini, penulis menyampaikan perlunya peningkatan prinsip, metode, fungsi, dan teknologi sistem penegakan hukum dalam menghadapi ancaman baru terhadap keamanan publik yang muncul seiring dengan perkembangan masyarakat informasi. Penelitian ini mengadopsi pendekatan pemodelan proses-proses pengembangan situasi di berbagai ranah seperti politik, hukum, sosial-politik, sosial-ekonomi, dan informasi. Dengan menggabungkan berbagai faktor yang mempengaruhi, penelitian ini menyajikan analisis yang komprehensif mengenai permasalahan pembentukan lembaga investigasi tunggal dan meningkatkan efektivitas penanganan kejahatan cyber.
5. High tech crime, high intellectual crime? Comparing the intellectual capabilities of cybercriminals, traditional criminals and non-criminals # Penelitian ini(Schiks et al., 2022) bertujuan untuk mengeksplorasi hubungan antara skor ujian CITO dan kejahatan cyber di Belanda. Ujian CITO adalah ujian standar untuk siswa sekolah dasar di Belanda yang diambil sekitar usia 12 tahun dan berkorelasi tinggi dengan skor IQ. Penelitian ini menggunakan data dari Statistics Netherlands tentang catatan kriminal dan skor ujian CITO. Data ini mencakup informasi tentang semua warga Belanda dari beberapa sumber, yang dapat dihubungkan melalui nomor identifikasi anonim. Catatan kriminal mencakup semua kasus kriminal yang terdaftar oleh kantor jaksa Belanda antara 2001 dan 2018. Pada tahun-tahun tersebut, 1161 individu setidaknya sekali diproses karena computer trespassing, yang didefinisikan oleh hukum Belanda sebagai mendapatkan akses tidak sah ke sistem terkomputerisasi. Data ini tidak memberikan informasi tentang hasil dari kasus kriminal tersebut, hanya menunjukkan bahwa orang-orang yang terdaftar adalah tersangka kejahatan. Hasil penelitian menunjukkan bahwa cybercriminals yang melakukan computer trespassing memiliki skor ujian CITO yang signifikan lebih tinggi dibandingkan traditional criminals, namun tidak ada perbedaan signifikan dengan non-criminals. Hal ini menunjukkan bahwa cybercriminals memiliki kemampuan intelektual yang lebih tinggi daripada traditional criminals, namun tidak lebih tinggi daripada non-criminals. Penelitian ini menyoroti pentingnya memahami hubungan antara kemampuan intelektual dan kejahatan cyber untuk pengembangan intervensi dan strategi pencegahan. Validasi hasil penelitian dengan dataset yang lebih besar dapat membantu memperkuat temuan penelitian ini dan memperluas pemahaman kita tentang hubungan antara kemampuan intelektual dan kejahatan cyber.
6. Conceptualizing Cybercrime: Definitions, Typologies and Taxonomies # Penelitian ini(Phillips et al., 2022) berisi tinjauan literatur yang komprehensif untuk mengidentifikasi definisi, tipologi, dan taksonomi terkait kejahatan dunia maya. Dilakukan eksplorasi berbagai definisi yang digunakan oleh akademisi dan organisasi, serta mengidentifikasi tipologi dan taksonomi kejahatan dunia maya yang dikembangkan baik oleh akademisi maupun organisasi . Penelitian ini juga mencoba untuk mengatasi ketidaksepakatan yang ada mengenai definisi kejahatan dunia maya dengan melakukan pendekatan yang sistematis dan parameteris. Hasil penelitian ini memiliki implikasi penting dalam memahami, mengatasi, dan memerangi kejahatan dunia maya. Para peneliti menemukan bahwa kejahatan dunia maya memiliki definisi yang ambigu dan beragam, serta tipologi dan taksonomi yang berbeda-beda. Penelitian ini menyarankan perlunya pengembangan sistem klasifikasi yang kokoh dan komprehensif untuk memahami dan mengatasi kejahatan dunia maya. Selain itu, penelitian ini juga menyampaikan pentingnya mempertimbangkan dimensi perilaku dan definisi dalam memahami kejahatan dunia maya. Implikasi dari penelitian ini adalah bahwa kebijakan, praktik, dan penelitian di masa depan harus mempertimbangkan keragaman definisi, tipologi, dan taksonomi kejahatan dunia maya, serta memperhatikan dimensi perilaku dan definisi dalam memahami fenomena ini. Penelitian ini juga memberikan rekomendasi untuk mengembangkan pemahaman kolektif mengenai fenomena kejahatan dunia maya dan menuju pengembangan sistem klasifikasi yang kokoh dan komprehensif di masa depan .
7. Comprehensive Review of Cybercrime Detection Techniques # Penelitian ini(Al-Khater et al., 2020) membahas isu khusus tentang teknik deteksi kejahatan siber (cybercrime detection techniques). Penelitian ini memberikan tinjauan komprehensif tentang teknik-teknik deteksi kejahatan siber yang ada saat ini, termasuk teknik-teknik yang menggunakan kecerdasan buatan, big data, dan teknik-teknik lainnya. Penelitian ini juga membahas tantangan dan kendala dalam deteksi kejahatan siber serta memberikan rekomendasi untuk pengembangan teknik-teknik deteksi kejahatan siber yang lebih efektif dan efisien. Penelitian ini mencakup berbagai pendekatan, mulai dari penggunaan kecerdasan buatan (artificial intelligence) seperti deep reinforcement learning (DRL) dan time evolving deep reinforcement learning (TDRL), hingga teknik biometrik, kriptografi, dan data mining. Penelitian ini juga memberikan rekomendasi untuk pengembangan teknik-teknik deteksi kejahatan siber yang lebih efektif dan efisien, seperti penggunaan teknik-teknik kecerdasan buatan dan big data. Tantangan dan kendala dalam deteksi kejahatan siber juga dijabarkan, seperti keterbatasan dalam ketersediaan dataset dan kerahasiaan data. Penelitian ini dapat menjadi acuan bagi para peneliti dan praktisi keamanan siber untuk mengembangkan teknik-teknik deteksi kejahatan siber yang lebih baik dan efektif.
8. The Role of Blockchain Technology in Augmenting Supply Chain Resilience to Cybercrime # Penelitian ini(Bayramova et al., 2021) membahas tentang peran teknologi blockchain dalam meningkatkan keamanan blockchain terhadap kejahatan siber. Peneliti menggunakan pendekatan meta-analisis dan grounded theory untuk menganalisis literatur yang ada dan menghasilkan kerangka teoritis baru. Pendekatan meta-analisis digunakan untuk mengumpulkan dan menganalisis data dari berbagai sumber literatur yang ada, sedangkan grounded theory digunakan untuk mengembangkan teori baru dari data yang ditemukan. Digunakan juga teknik scientometric analysis dan software tools seperti VOS viewer dan NVivo untuk menganalisis data secara kuantitatif dan kualitatif. Penelitian ini mengidentifikasi beberapa aplikasi blockchain yang dapat meningkatkan kemanan blockchain terhadap kejahatan siber, seperti sistem pelacakan, kontrak pintar, dan teknologi buku besar terdistribusi. Dijabarkan juga beberapa tantangan dan hambatan dalam mengadopsi teknologi blockchain, seperti biaya implementasi, masalah interoperabilitas, dan kurangnya pemahaman tentang teknologi blockchain. Penelitian ini memberikan panduan praktis bagi organisasi yang ingin meningkatkan ketahanan rantai pasok mereka melalui penggunaan teknologi blockchain, seperti memilih aplikasi blockchain yang sesuai dengan kebutuhan, mempertimbangkan biaya dan manfaat, dan memperhatikan faktor keamanan dan privasi.
9. Measuring the level of cyber-security awareness for cybercrime in Saudi Arabia # Penelitian ini(Alzubaidi, 2021) membahas tingkat kesadaran keamanan informasi terkait kejahatan dunia maya di Arab Saudi. Metode penelitian yang digunakan meliputi survei online dan pengumpulan data melalui situs web universitas serta aplikasi WhatsApp. Hasil survei mencakup berbagai aspek kesadaran keamanan informasi, seperti penggunaan kata sandi, ancaman, pembaruan perangkat lunak, pencadangan data, pelaporan insiden, serta perilaku dalam menghadapi kejahatan dunia maya. Digunakan survei online dengan 1230 partisipan dari berbagai wilayah di Arab Saudi. Data dikumpulkan melalui situs web universitas dan aplikasi WhatsApp, dengan tujuan untuk mencakup partisipan yang aktif menggunakan teknologi dengan latar belakang dan usia yang beragam. Hasil survey menunjukkan bahwa sebagian responden menggunakan Wi-Fi publik untuk mengakses internet, menggunakan informasi pribadi untuk membuat kata sandi, dan memiliki tingkat kesadaran yang rendah terhadap serangan phishing. Sebagian kecil dari responden yang melaporkan kejahatan dunia maya yang mereka alami, yang mencerminkan tingkat kesadaran yang rendah terkait pelaporan insiden kejahatan dunia maya. Implikasi dari temuan ini adalah perlunya upaya untuk meningkatkan kesadaran dan praktik keamanan informasi di Arab Saudi, dengan memberikan rekomendasi berdasarkan analisis hasil survei. Hasil penelitian memiliki implikasi penting untuk meningkatkan kesadaran dan praktik keamanan informasi terkait kejahatan dunia maya di Arab Saudi.
10. Cybercrime threat intelligence: A systematic multi-vocal literature review # Penelitian ini(Cascavilla et al., 2021) merupakan sebuah tinjauan literatur multi-vokal sistematis yang menyediakan gambaran tentang teknik dan indikator untuk deteksi kejahatan cyber, termasuk investigasi berbasis mesin dan deep learning dan kegiatan rekayasa di berbagai tingkat analisis. Penelitian ini menawarkan taksonomi dari metode yang ada, gambaran tentang aktivitas kriminal yang dapat dideteksi, dan gambaran tentang indikator dan parameter risiko untuk membantu dalam rekayasa dan manajemen solusi intelijen .Dibahas juga teknik dan pendekatan yang memungkinkan penegak hukum untuk menjelajahi sumber online secara anonim dan sejauh mana fenomena ini dipahami dan diatasi dalam literatur. Penelitian ini juga menyoroti tren terbaru dalam bidang intelijen ancaman cyber, termasuk peningkatan penggunaan pembelajaran mesin/Kecerdasan Buatan untuk memprediksi serangan yang mungkin terjadi. Penelitian ini menghasilkan temuan kunci terkait dengan intelijen ancaman cyber, termasuk taksonomi metode deteksi kejahatan cyber, gambaran indikator dan parameter risiko, pentingnya penggunaan pembelajaran mesin dan kecerdasan buatan, serta analisis topik untuk mengidentifikasi konsep ancaman yang paling relevan. Penelitian ini memberikan wawasan berharga tentang teknik, pendekatan, dan tantangan terkait dengan intelijen ancaman cyber, serta memberikan arah bagi penelitian dan pengembangan teknologi ke depan.
REFERENSI # Akyazi, U. (2021). Measuring Cybercrime as a Service (CaaS) Offerings in a Cybercrime Forum. Al-Khater, W. A., Al-Maadeed, S., Ahmed, A. A., Sadiq, A. S., &amp; Khan, M. K. (2020). Comprehensive Review of Cybercrime - Detection Techniques. IEEE Access, 8, 137293–137311. https://doi.org/10.1109/ACCESS.2020.3011259 Alzubaidi, A. (2021). Measuring the level of cyber-security awareness for cybercrime in Saudi Arabia. Heliyon, 7(1), e06016. https://doi.org/10.1016/j.heliyon.2021.e06016 Bayramova, A., Edwards, D. J., &amp; Roberts, C. (2021). The Role of Blockchain Technology in Augmenting Supply Chain Resilience to Cybercrime. Buildings, 11(7), 283. https://doi.org/10.3390/buildings11070283 Brands, J., &amp; Van Doorn, J. (2022). The measurement, intensity and determinants of fear of cybercrime: A systematic review. Computers in Human Behavior, 127, 107082. https://doi.org/10.1016/j.chb.2021.107082 Cascavilla, G., Tamburri, D. A., &amp; Van Den Heuvel, W.-J. (2021). Cybercrime threat intelligence: A systematic multi-vocal literature review. Computers &amp; Security, 105, 102258. https://doi.org/10.1016/j.cose.2021.102258 Phillips, K., Davidson, J. C., Farr, R. R., Burkhardt, C., Caneppele, S., &amp; Aiken, M. P. (2022). Conceptualizing Cybercrime: Definitions, Typologies and Taxonomies. Forensic Sciences, 2(2), 379–398. https://doi.org/10.3390/forensicsci2020028 Rani, S., Kataria, A., Sharma, V., Ghosh, S., Karar, V., Lee, K., &amp; Choi, C. (2021). Threats and Corrective Measures for IoT Security with Observance of Cybercrime: A Survey. Wireless Communications and Mobile Computing, 2021, 1–30. https://doi.org/10.1155/2021/5579148 Schiks, J. A. M., Van De Weijer, S. G. A., &amp; Leukfeldt, E. R. (2022). High tech crime, high intellectual crime? Comparing the intellectual capabilities of cybercriminals, traditional criminals and non-criminals. Computers in Human Behavior, 126, 106985. https://doi.org/10.1016/j.chb.2021.106985 Schul’tz, V. L., Kul’ba, V. V., Shelkov, A. B., &amp; Bogatyryova, L. V. (2021). Scenario Analysis of Improving the Effectiveness of Cybercrime Investigation Management Problems. IFAC-PapersOnLine, 54(13), 155–160. https://doi.org/10.1016/j.ifacol.2021.10.437 `}),e.add({id:21,href:"/ngrok-mengenal-ngrok-instalasi-dan-konfigurasi/",title:"Ngrok: Mengenal Ngrok, Instalasi dan Konfigurasi ",description:"Ngrok adalah alat tunnelling (tunneling tool) yang digunakan untuk membuat saluran aman antara dua titik akhir (endpoints) melalui internet atau jaringan lokal. Alat ini memungkinkan kita untuk memberikan akses ke server atau layanan yang berjalan di komputer lokal kita ke internet, bahkan jika komputer tersebut berada di belakang firewall atau jaringan NAT (Network Address Translation).",content:`Apa itu NGROK # Ngrok merupakan sebuah tools mungkin tepatnya layanan yang memungkinkan kita untuk melakukan tunnelling (tunneling tool) untuk membuat koneksi yang aman antara dua titik (endpoints) melalui internet atau jaringan lokal. Dengan Ngrok kita dapat memberikan akses di komputer lokal kedalam jaringan internet.
Ngrok sering digunakan oleh programmer khususnya pengembang website untuk demo dan pengujian website yang dibangun. Contoh sederhananya, kita sedang membuat website di komputer lokal dan sebelum upload ke internet, kita ingin menampilkan hasil terlebih dahulu ke client yang memesan website. Sebenarnya kita dapat upload ke server online (demo) di internet, tetapi akan membutuhkan waktu memindahkan semua gile. Disini Ngrok dapat menjembatani hal tersebut tanpa harus upload file ke internet, kita cukup konfigurasi Ngrok di komputer local dan memberikan alamatnya website ke clien. Alamat website yang diakses client akan langsung terhubung ke webserver ataupun komputer local kita.
Fitur dalam Ngrok # Untuk lebih jelasnya, berikut ini beberapa fitur yang dapat kita gunakan dengan Ngrok:
Port Forwarding # Kita dapat mengarahkan koneksi yang masuk ke alamat Ngrok ke port tertentu pada komputer lokal kita, sehingga aplikasi yang berjalan pada port tersebut dapat diakses dari luar.
Share Lokalhost # Ngrok memungkinkan kita melakukan demo aplikasi yang berjalan di localhost dengan pihak lain, cukup dengan memberikan URL Ngrok yang unik.
Pengujian dan Debugging # Kita dapat menggunakan Ngrok untuk melakukan pengujian dan debugging aplikasi web secara eksternal tanpa perlu mendeploy aplikasi ke server production yang live di internet.
Callback Webhook # Ngrok dapat digunakan untuk membuat koneksi yang aman untuk menerima callback dari layanan pihak ketiga yang memerlukan akses ke server kita.
Environment Sharing # Kita juga dapat berbagi lingkungan pengembangan dengan pihak lain, sehingga memungkinkan kolaborasi yang lebih mudah dalam pengembangan perangkat lunak.
Daftar # Untuk dapat menggunakan layanan Ngrok, silakan daftar terlebih dahulu akun di website resminya di https://ngrok.com
Konfigurasi di komputer local (macOs) # Download terlebih dahulu Ngrok, dapat menggunakan brew dan ketikkan printah di command prompt
brew install ngrok/ngrok/ngrok Atau dapat juga download manual dan ekstrak file archive, kemudian pindahkan file Ngrok ke direktori /usr/local/bin
sudo cp ngrok /usr/local/bin Konfigurasi Ngrok dengan memberikan authentikasi untuk mengakses komputer lokcal kita dengan mengisikan token yang diberikan oleh Ngrok
ngrok config add-authtoken ISIKAN_TOKEN_YANG_DIBERIKAN_NGROK Jalankan service Ngrok dengan perintah
ngrok http 80 `}),e.add({id:22,href:"/coretanku/memotivasi-diri-sendiri/",title:"Momotivasi Diri Sendiri",description:"Memotivasi diri sendiri menjadi keterampilan penting untuk mencapai tujuan dan menjalani hidup secara lebih baik. Memotivasi diri merupakan kemampuan untuk menemukan energi, maupun dorongan, dan tekad dari diri sendiri yang diperlukan untuk mencapai tujuan dan menjalani kehidupan yang lebih memuaskan.",content:`Apa itu Memotivasi Diri Sendiri? # Latar belakang ketika kita yang memerlukan motivasi diri bisa sangat beragam, tergantung pada situasi dan fase hidup yang sedang dialami. Perubahan hidup yang signifikan seperti krisis keuangan, perubahan hubungan, atau perubahan pekerjaan juga dapat memerlukan dorongan motivasi terhadap diri sendiri. Krisis keuangan yang datang secara tiba-tiba diluar perkiraan dapat mendorong seseorang untuk merencanakan keuangan yang lebih baik atau mencari peluang karier baru. Perceraian atau konflik hubungan dapat memicu dorongan untuk memperbaiki hubungan atau merencanakan perubahan dalam kehidupan pribadi.
Tentu saja, keinginan untuk berkembang secara pribadi dan mencapai potensi maksimal juga dapat menjadi faktor yang memicu dorongan untuk memotivasi diri sendiri. Beberapa individu secara alami tertarik pada pertumbuhan pribadi, yang mendorong mereka untuk terus memotivasi diri untuk belajar, berkembang, dan mencapai hal-hal baru dalam kehidupan mereka.
Memotivasi diri sendiri melibatkan kesadaran akan tujuan dan nilai-nilai pribadi, pembuatan rencana tindakan yang konkret, serta memiliki sikap mental yang positif untuk mengatasi hambatan dan rintangan yang mungkin muncul dalam perjalanan mencapai tujuan.
Memotivasi diri sendiri menjadi keterampilan penting untuk mencapai tujuan dan menjalani hidup secara lebih baik. Memotivasi diri merupakan kemampuan untuk menemukan energi, maupun dorongan, dan tekad dari diri sendiri yang diperlukan untuk mencapai tujuan dan menjalani kehidupan yang lebih memuaskan.
Memotivasi diri sendiri melibatkan usaha dari dalam diri kita tanpa bergantung pada faktor eksternal seperti pujian, hadiah, atau tekanan dari orang lain. Memotivasi diri adalah bagaimana membangkitkan dan memelihara dorongan semangat diri dengan kesadaran atas tujuan serta kemampuan untuk mengatasi hambatan (kegagalan).
Berikut ini adalah langkah-langkah agar dapat membantu kita dalam memotivasi diri sendiri.
Tetapkan Tujuan yang Jelas # Tentukan apa yang ingin dicapai, tujuan yang jelas memberikan fokus dan arah dalam hidup. Menentukan tujuan hidup merupakan proses yang sangat pribadi. Untuk memulainya, kita perlu merenung tentang apa yang benar-benar kita nikmati dalam hidup, apa yang memberikan kebahagiaan, dan apa yang kita nilai sebagai prinsip-prinsip paling penting dalam hidup. Kita harus mengidentifikasi nilai-nilai yang kita pegang teguh dan pertimbangkan bagaimana kita dapat mewujudkannya dalam tujuan jangka pendek dan jangka panjang. Dalam mendefinisikan tujuan sebgaiknya menggunakan prinsip SMART (spesifik, terukur, dapat dicapai, relevan, dan memiliki batas waktu).
Penting juga untuk memperhatikan minat dan bakat kita, karena ini dapat membantu kita menemukan arah yang tepat. Juga, jangan ragu untuk berbicara dengan orang-orang terdekat, seperti teman, keluarga, atau mentor, karena mereka dapat memberikan wawasan berharga. Setelah kita merumuskan tujuan hidup, kita bisa membuat rencana tindakan yang konkret untuk mencapainya, dan ingatlah bahwa tujuan hidup adalah sesuatu yang dapat berkembang seiring waktu. Yang terpenting, tujuan hidup harus memberikan makna dan arah dalam kehidupan kita.
Buat Rencana Tindakan # Setelah memiliki tujuan, buatlah rencana tindakan yang spesifik untuk mencapainya. Bagi tujuan menjadi langkah-langkah yang lebih kecil dan lebih mudah dikelola. Membuat rencana tindakan adalah langkah penting dalam mencapai tujuan hidup. Selanjutnya, pecah tujuan besar kita menjadi langkah-langkah kecil yang lebih mudah dikelola, lalu tetapkan tanggal tenggat waktu untuk setiap langkah ini. Identifikasi sumber daya dan dukungan yang dibutuhkan untuk mencapai tujuan, seperti sumber daya finansial, bahan bacaan, pelatihan, atau dukungan sosial.
Pertimbangkan juga hambatan potensial yang mungkin muncul dan carilah cara untuk mengatasi mereka. Selalu evaluasi kemajuan secara berkala dan, jika perlu, revisi rencana agar tetap relevan. Yang paling penting, kita harus berkomitmen untuk mengikuti rencana tindakan dan tetap konsisten, dengan disiplin dan ketekunan sebagai kunci. Selalu monitor perkembangan dan catat pencapaian, memberi diri sendiri dorongan dan penghargaan setiap kali mencapai langkah dalam rencana. Ingat, rencana tindakan adalah alat fleksibel yang membantu memberikan struktur dan fokus dalam mencapai tujuan hidup.
Temukan Inspirasi # Untuk menemukan inspirasi, penting untuk menjalin koneksi dengan dunia sekitar. Luangkan waktu untuk merenung dan memahami minat, gairah, dan identifikasi apa yang benar-benar membuat kita bersemangat. Baca buku, jelajahi seni, eksplorasi alam, atau bergaul dengan orang-orang yang berbeda. Jangan ragu untuk mencoba hal-hal baru, karena seringkali inspirasi muncul dari keberanian untuk keluar dari zona nyaman.
Berbicaralah dengan orang-orang yang kita hormati dan mintalah pandangan mereka tentang apa yang menginspirasi mereka. Inspirasi bisa datang dari refleksi yang mendalam dan kesadaran diri. Ingatlah bahwa inspirasi bisa datang dari berbagai sumber, dan kadang-kadang ditemukan di tempat-tempat yang paling tidak terduga, tetapi dengan menjaga pikiran dan hati terbuka.
Atur Prioritas # Tentukan apa yang paling penting dan beri prioritas pada hal tersebut. Ini membantu untuk fokus pada hal-hal yang benar-benar relevan dengan tujuan. Mengatur prioritas adalah keterampilan yang sangat penting dalam mengelola waktu dan sumber daya kita secara efisien. Pertama-tama, penting untuk memiliki pemahaman yang jelas tentang tujuan kita dalam hidup, baik yang bersifat jangka pendek maupun jangka panjang, karena hal ini akan membimbing kita dalam menentukan prioritas. Selanjutnya, kita perlu membuat daftar lengkap dari semua tugas, kewajiban, proyek, dan tanggung jawab yang ada dalam hidup kita, mencakup pekerjaan, keluarga, pendidikan, dan aktivitas sosial.
Dalam mengevaluasi prioritas, kita harus mempertimbangkan pentingnya setiap tugas atau kewajiban dalam mencapai tujuan kita. Apakah tugas tersebut memiliki dampak besar pada tujuan kita ataukah lebih bersifat rutin? Juga, perhatikan urgensi dan batas waktu yang terkait dengan setiap tugas, karena ini dapat mempengaruhi urutan prioritas. Dengan pemahaman yang mendalam tentang tujuan, pentingnya, dan urgensi, kita dapat dengan lebih bijak mengelola waktu dan sumber daya kita.
Belajar dari Kegagalan # Jangan takut untuk gagal. Setiap kegagalan adalah pelajaran yang berharga. Cobalah untuk belajar dari kesalahan dan terus maju. Belajar dari kegagalan adalah kunci untuk pertumbuhan pribadi dan profesional yang berkelanjutan. Pertama-tama, penting untuk menerima bahwa kegagalan adalah bagian alami dari kehidupan dan proses belajar. Saat menghadapi kegagalan, pertama-tama kita perlu meresapi dan merenunginya tanpa menyalahkan diri sendiri. Setelah itu, kita bisa mengidentifikasi penyebab kegagalan dan mencoba memahaminya. Ini dapat membantu kita menghindari kesalahan serupa di masa depan.
Selanjutnya, cobalah untuk melihat kegagalan sebagai kesempatan untuk tumbuh dan berkembang. Pertimbangkan apa yang dapat dipelajari dari pengalaman tersebut dan bagaimana kita bisa menjadi lebih kuat, lebih bijak, atau lebih terampil sebagai hasilnya. Terakhir, tetaplah berani untuk mencoba lagi. Kegagalan bukan akhir dari cerita, sebaliknya, itu hanyalah salah satu bab yang membawa kita lebih dekat ke kesuksesan. Dengan sikap belajar yang positif dan ketekunan, kegagalan dapat menjadi batu loncatan menuju pencapaian yang lebih besar dalam hidup.
Jaga Keseimbangan # Jagalah keseimbangan antara pekerjaan, waktu untuk diri sendiri, dan waktu untuk bersantai. Keseimbangan ini membantu menjaga tingkat energi dan motivas. Menjaga keseimbangan dalam kehidupan adalah penting untuk kesejahteraan fisik dan mental. Untuk mencapainya, pertama-tama, tetapkan prioritas yang jelas. Identifikasi aspek-aspek penting dalam hidup kita, seperti pekerjaan, keluarga, kesehatan, dan waktu untuk diri sendiri, lalu alokasikan waktu dan perhatian sesuai kebutuhan masing-masing. Juga, pelajari untuk mengatur batas-batas yang sehat. Terimalah bahwa kita tidak bisa melakukan segalanya, dan terkadang, kita harus mengatakan &ldquo;tidak&rdquo; agar kita dapat menjaga keseimbangan.
Penting juga untuk merawat kesehatan fisik dan mental dengan tidur yang cukup, olahraga, makan dengan baik, dan praktik-relaksasi. Jangan lupa untuk menghabiskan waktu berkualitas bersama orang-orang yang di cintai dan luangkan waktu untuk mengejar hobi atau aktivitas yang memberi kebahagiaan. Kesadaran diri adalah kunci; teruslah mengevaluasi dan menyesuaikan keseimbangan sesuai dengan perubahan dalam kehidupan. Dengan mengakui kebutuhan sendiri dan menjaga keseimbangan yang sehat antara berbagai aspek hidup, kita dapat menciptakan kehidupan yang lebih memuaskan dan berkelanjutan.
Rutinitas yang Sehat # Menjaga kesehatan fisik dan mental sangat penting. Diet seimbang, tidur yang cukup, dan olahraga dapat meningkatkan energi dan motivasi kita. Untuk menjaga rutinitas yang sehat, disiplin dan konsistensi sangat penting. Pertama, buat jadwal harian atau mingguan yang mencakup waktu untuk tidur yang cukup, makan seimbang, olahraga, dan waktu istirahat. Tetapkan rutinitas tidur yang konsisten untuk memastikan mendapatkan istirahat yang cukup. Selain itu, tetapkan target waktu untuk makan dengan seimbang dan hindari makanan cepat saji atau makanan tinggi gula yang tidak sehat. Selanjutnya, jadwalkan waktu untuk berolahraga secara teratur, sesuaikan dengan preferensi kita, apakah itu jogging, yoga, atau bersepeda.
Jangan lupa menyertakan waktu untuk pekerjaan dan kegiatan sosial serta untuk diri sendiri. Penting juga untuk menghindari over-scheduling diri. Untuk menjaga rutinitas yang sehat, berkomitmen untuk menjalankannya dengan disiplin dan tetap mengikuti jadwal yang telah kita buat, serta selalu menyesuaikannya sesuai kebutuhan. Rutinitas yang sehat membantu kita menjaga kesehatan fisik dan mental, dan ini akan memberikan dampak positif pada kualitas hidup secara keseluruhan.
Buat Reward Sederhana # Berikan hadiah pada diri sendiri ketika mencapai tonggak-tonggak penting dalam mencapai sebuah tujuan. Ini bisa menjadi cara yang efektif untuk memotivasi diri. Membuat reward sederhana adalah cara efektif untuk memberikan penghargaan pada diri sendiri dan memotivasi diri untuk mencapai tujuan atau menyelesaikan tugas. Pertama, identifikasi pencapaian, apakah itu menyelesaikan proyek, atau mencapai target tertentu. Kemudian, pilih reward yang sesuai dengan pencapaian tersebut. Ini bisa berupa sesuatu yang ingin dinikmati, seperti menonton film favorit, berjalan-jalan di taman, membeli camilan kesukaan, atau menikmati waktu luang dengan hobi favorit.
Pastikan reward tersebut sesuai dengan ukuran pencapaian, sehingga semakin besar pencapaian, semakin besar pula reward yang kita dapatkan. Jadwalkan reward ini sebelumnya sebagai insentif, dan setelah mencapai tujuan, nikmatilah reward tersebut. Reward sederhana memberikan motivasi tambahan dan bisa membuat kita merasa terpenuhi setelah mencapai tujuan atau menyelesaikan tugas.
Jangan Menunggu Motivasi Muncul Sendiri # Terkadang, motivasi datang setelah kita mulai bertindak. Jadi, jangan menunggu hingga merasa termotivasi sepenuhnya. Mulailah bertindak, dan motivasi akan mengikuti. Jangan menunggu motivasi muncul dengan sendirinya adalah prinsip penting dalam mengatasi rasa malas atau ketidakberanian dalam mencapai tujuan. Kadang-kadang kita berharap bahwa kita akan merasa termotivasi secara alami sebelum kita mulai bekerja, namun kenyataannya, motivasi seringkali muncul sebagai hasil dari tindakan yang kita ambil. Untuk mengatasi keengganan atau kurangnya motivasi, mulailah dengan mengambil tindakan kecil.
Lakukan langkah-langkah awal meskipun mungkin merasa malas atau tidak termotivasi. Ketika kita mulai bergerak, seringkali kita akan menemukan bahwa motivasi muncul secara alami. Selain itu, buatlah rutinitas dan disiplin sebagai teman. Jangan bergantung pada perasaan semata, karena perasaan dapat berubah-ubah. Membangun kebiasaan dan menjalankannya secara teratur dapat membantu mencapai tujuan, bahkan ketika motivasi sedang rendah. Ingat, tindakan adalah katalisator untuk motivasi, dan dengan tindakan yang konsisten, kita dapat mencapai banyak hal bahkan ketika motivasi tidak selalu hadir.
Kesimpulan # Untuk dapat memotivasi diri sendiri, maka perlu memiliki visi yang jelas tentang tujuan kita, memecahnya menjadi langkah-langkah yang dapat diukur, dan menjaga fokus pada kemajuan. Mengatur lingkungan kita untuk mendukung produktivitas, merawat diri dengan baik, dan mendapatkan dukungan dari orang-orang terdekat adalah faktor-faktor penting dalam menjaga motivasi. Ingatlah bahwa motivasi tidak selalu muncul secara alami, tetapi seringkali merupakan hasil dari tindakan yang kita ambil. Dengan komitmen, disiplin, dan dorongan positif, kita dapat memotivasi diri sendiri untuk mencapai tujuan dan meraih kesuksesan dalam hidup.
`}),e.add({id:23,href:"/coretanku/predoctoral-bootcamp-usu-2023/",title:"Predoctoral Bootcamp USU 2023",description:"Memasuki semester tiga, sepertinya perkuliahan program doktoral ini akan lebih menyita waktu. Dalam kurikulum, target yang harus diselesaikan mahasiswa pada semester ini terdiri dari perkuliahan (dua matakuliah) prakualifikasi dan satu publikasi internasional dalam bentuk prosiding. Mahasiswa yang memasuki semester tiga juga diwajibkan untuk mengikuti Bootcamp yang difasilitasi oleh kampus.",content:`Predoctoral Bootcamp USU untuk angkatan 2022 # Tidak terasa sudah memasuki semester tiga, sepertinya pada semester ini perkuliahan program doktoral ini akan lebih menyita waktu. Dalam kurikulum, target yang harus diselesaikan mahasiswa pada semester ini terdiri dari perkuliahan (dua matakuliah) prakualifikasi dan satu publikasi internasional dalam bentuk prosiding.
Mahasiswa yang memasuki semester tiga juga diwajibkan untuk mengikuti Bootcamp yang difasilitasi oleh kampus. Sertifikat keikutsertaan dalam Bootcamp adalah salah satu syarat untuk mengikuti prakualifikasi. Di acara Bootcamp, kita dibekali pengetahuan dan juga membuka wawasan dalam hal menulis proposal Disertasi, mulai dari pencarian jurnal referensi sesuai topik penelitian, tata cara penulisan proposal (karya ilmiah) hingga bagaimana kiat untuk publikasi dan menyelesaikan studi tepat waktu.
Bootcamp untuk angkatan 2022, dilaksanakan pada hari Kamis, tanggal 25 Agustus 2023, pukul 08.30 s/d 18.00 di Hotel Sultan Darussalam Medan dibuka langsung oleh bapak Dr. Mohammad Andri Budiman, S.T., M.Comp.Sc., M.E.M selaku wakil Dekan I Fakultas Ilmu Komputer dan Teknologi Informasi USU. Narasumber yang memberikan materi adalah Prof.Zainal Arifin Hasibuan, MLS., Ph.D (Ketua Majelis Akreditasi LAM Infokom), Prof.Dr.Poltak Sihombing, M.Kom (Ketua Program Studi S3 Ilkom USU) dan Prof. Dr. Herman Mawengkang (Guru Besar USU). Kegiatan diskusi dipandu oleh Moderator yang juga Sekretaris prodi S3 Ilkom USU Assoc.Prof.Dr.Syahril Efendi, S.Si., M.IT.
Foto-foto kegiatan # Banner Kegiatan Bootcamp 2023 Foto bersama Peserta dan Narasumber. Foto bersama teman-teman sekelas (1). Foto bersama teman-teman sekelas (2). Sertifikat Peserta Penutup # Bagi saya pribadi, acara ini sangat bermanfaat dan sangat membuka wawasan khususnya tentang penulisan Disertasi dan publikasi. Sesi diskusi dengan narasumber, senior dan para alumni juga memberikan pegetahuan bagaimana cara agar studi dapat selesai tepat waktu. Materi Prof. Poltak `}),e.add({id:24,href:"/hooh-index-start-at-0/",title:"Ho'oh: Index Start at 0",description:"Penggunaan index dalam bahasa pemrograman adalah salah satu konsep dasar yang sangat penting karena ini memungkinkan kita untuk mengakses, mengelola, dan memanipulasi data dalam struktur data seperti array, list, dan berbagai jenis koleksi data lainnya. Index dimulai dari 0 adalah aturan yang sangat umum dalam pemrograman, terutama dalam bahasa pemrograman seperti C, C++, Java, Python, Php dan banyak bahasa lainnya. ",content:`Index dalam bahasa pemrograman # Penggunaan index dalam bahasa pemrograman adalah salah satu konsep dasar yang sangat penting karena ini memungkinkan kita untuk mengakses, mengelola, dan memanipulasi data dalam struktur data seperti array, list, dan berbagai jenis koleksi data lainnya. Index dimulai dari 0 adalah aturan yang sangat umum dalam pemrograman, terutama dalam bahasa pemrograman seperti C, C++, Java, Python, Php dan banyak bahasa pemrograman lainnya.
Tetapi harus kita ingat juga, bahwa tidak semua bahasa pemrograman mengadopsi index dimulai dari 0. Beberapa bahasa pemrograman seperti MATLAB dan R memulai index dari 1, sementara itu bahasa pemrograman lain seperti Lua memungkinkan kita untuk memilih memulai index dari 0 atau 1.
Alasan historis dan teknis index start at 0 # Aturan penggunaan index ini mungkin kelihatan sederhana, tetapi sangat mempengaruhi bagaimana programmer berinteraksi dengan data dalam program, dan berkontribusi pada desain bahasa pemrograman dan compiller. Pilihan untuk memulai index dari 0 atau 1 sering kali bergantung pada desain bahasa dan preferensi komunitas pada programmer. Terdapat beberapa alasan historis dan teknis mengapa index dimulai dari 0, diantaranya adalah sebagai berikut:
Kemudahan Perhitungan # Dimulainya index dari 0 mempermudah perhitungan dan akses ke elemen-elemen dalam struktur data. Dengan index 0, elemen pertama dalam array atau list selalu dapat diakses dengan menghitung index yang sesuai dengan posisi fisik elemen tersebut. Ini mengurangi potensi kesalahan perhitungan dan membuat kode lebih intuitif.
Konsistensi dengan Aritmetika Pointer # Dalam banyak bahasa pemrograman seperti C dan C++, array digunakan dalam pengelolaan memori, dan index array sebenarnya mirip dengan alamat memori. Dengan memulai index dari 0, index array berhubungan langsung dengan alamat memori, sehingga operasi pointer dan akses ke elemen array menjadi lebih konsisten.
Sejarah Bahasa Pemrograman # Bahasa C yang merupakan cikal bakal dalam beberapa bahasa pemrograman, menggunakan index yang dimulai dari 0. Banyak bahasa pemrograman yang mengadopsi aturan ini untuk konsistensi dan mengakomodasi para programmer yang sudah terbiasa dengan index yang dimulai dari 0.
Mengapa menggunakan Index # Seperti yang saya sampaikan sebelumnya, penggunaan index ini adalah konsep penting yang digunakan untuk mengakses, mengelola, dan memanipulasi data dalam struktur data seperti array, list, dan koleksi data lainnya (database). Berikut ini adalah beberapa alasan mengapa index digunakan dalam bahasa pemrograman:
1. Akses Data # Index memungkinkan kita untuk secara efisien mengakses elemen-elemen dalam struktur data. Dengan menggunakan index, kita dapat merujuk ke elemen tertentu untuk melakukan proses perulangan, pengurutan, pencarian, pengelompokan atau pengolahan data secara massal sehingga kita dapat melakukan operasi secara berulang pada setiap elemen dalam struktur data..
2. Manajemen Memori # Dalam bahasa pemrograman yang lebih rendah, seperti C dan C++, index array memiliki kaitan langsung dengan alamat memori, sehingga pengelolaan memori menjadi lebih efisien.
3. Program lebih Terstruktur # Penggunaan index memungkinkan kita untuk membuat program yang terstruktur dengan cara yang lebih teratur dan mudah dipahami. Ini membantu programmer dan orang lain untuk membaca dan memahami kode.
4. Konsistensi # Penggunaan index dari 0 (seperti dalam banyak bahasa pemrograman) atau 1 (seperti dalam beberapa bahasa lain) adalah aturan yang memungkinkan konsistensi dalam paradigma pemrograman. Aturan ini membantu menghindari kebingungan dan kesalahan dalam membuat prgram.
Contoh Penggunaan Index # Berikut ini contoh penggunaan index dalam bahasa pemrograman, disini yang saya contohkan menggunakan Python.
1. Penggunaan Index dalam List # # Membuat sebuah list (daftar) dari nama-nama buah buah = [&quot;apel&quot;, &quot;mangga&quot;, &quot;jeruk&quot;, &quot;pisang&quot;] # Mengakses elemen pertama (index 0) buah_pertama = buah[0] print(&quot;Buah pertama:&quot;, buah_pertama) # Output: Buah pertama: apel # Menggunakan loop untuk mencetak semua buah for i in range(len(buah)): print(&quot;Buah ke-&quot;, i, &quot;:&quot;, buah[i]) 2. Penggunaan Index dalam String # # Membuat sebuah string (teks) teks = &quot;Halo, dunia!&quot; # Mengakses karakter pertama (index 0) karakter_pertama = teks[0] print(&quot;Karakter pertama:&quot;, karakter_pertama) # Output: Karakter pertama: H 3. Penggunaan Index dalam Tuple # # Membuat sebuah tuple dari angka angka = (10, 20, 30, 40, 50) # Mengakses elemen ketiga (index 2) elemen_ketiga = angka[2] print(&quot;Elemen ketiga:&quot;, elemen_ketiga) # Output: Elemen ketiga: 30 4. Mengganti Nilai dengan Index # # Membuat list dengan nama-nama buah buah = [&quot;apel&quot;, &quot;mangga&quot;, &quot;jeruk&quot;, &quot;pisang&quot;] # Mengganti nilai dengan index buah[1] = &quot;stroberi&quot; # Mencetak list buah setelah perubahan print(&quot;Buah setelah perubahan:&quot;, buah) Kesimpulan # Penggunaan index dalam bahasa pemrograman adalah suatu konsep yang sangat penting dan umum. index memungkinkan programmer untuk mengakses, mengelola, dan memanipulasi data dalam berbagai struktur data seperti array, list, dan koleksi lainnya. Ini memungkinkan pengguna untuk dengan mudah mengakses elemen individu dalam struktur data dan mengatur tugas-tugas seperti pengulangan, pengurutan, dan pencarian dengan efisien. Aturan penggunaan index, seperti dimulai dari 0 atau 1, membantu menciptakan konsistensi dalam paradigma pemrograman, menghindari kesalahan perhitungan, dan membuat kode lebih mudah dibaca dan dimengerti.
`}),e.add({id:25,href:"/coretanku/selamat-ulang-tahun-ke-2-untuk-faresta/",title:"Selamat Ulang Tahun yang ke-2 untuk Faresta",description:"Selamat Ulang Tahun untuk Faresta Rskel Kaban yang ke-2. Tidak ada perayaan khusus, saya juga cuma membelikan kue dan hadiah mainan bola basket beserta jaring dan papan puzzle susun huruf. Tapi ulang tahun ke-2 ini begitu berkesan karena Fares sakit seminggu sebelum ulang tahun, panas demam tinggi.",content:`Ulang tahun yang ke-2 # Selamat ulang yang ke-2 Tahun untuk Faresta Rskel Kaban. Tidak ada perayaan khusus, paling tidak kita makan kue tar sama ya Nak. Perayaannya juga cuma kita bertiga.
Mamaknya belikan baju kaos Ulang Tahun pertama # Ulang tahun Faresta yang pertama kami rayakan di tempat (warung) mertua. Ulang tahun Faresta yang pertama kami rayakan di tempat (warung) mertua., beserta bibik2nya. Kelahiran # Kalau cerita kelahiran agak panjang, mungkin kapan-kapan saya isikan Ikut merayakan # Foto-foto ketika ulang tahun saya, sepertinya semangat kali ikut merayakan, sampai berserak semua roti dan makanan. Foto perayaan ulang tahun saya 2022 Foto perayaan ulang tahun saya 2022 `}),e.add({id:26,href:"/coretanku/ni-shi-wo-weiyi-de-zhizhuo/",title:"Nǐ shì wǒ wéiyī de zhízhuó: Kau adalah satu-satunya yang ku inginkan(pedulikan)",description:'Mungkin karena lagi galau atau gimana ya, tapi secara tidak sengaja saya iseng dengerin lagu lama mandarin yang berjudul `Nǐ shì wǒ wéiyī de zhízhuó`, lagu ini menyampaikan bahwa mencintai pasangan adalah janji yang takkan pernah berubah, dan merupakan satu-satunya yang diinginkan dan mampu memberikan kebahagiaan."',content:`Degerin lagu # Otak kita terbagi menjadi dua bagian utama yaitu otak kiri dan otak kanan. Otak kiri cenderung terlibat dalam hal pemrosesan logis dan analisis, sementara otak kanan lebih fokus dalam hal pemrosesan emosi, pola visual dan aspek kreatifitas. Saat kita mendengarkan lagu, otak kanan kita akan aktif bekerja dalam memahami dan merasakan aspek emosional dari musik.
Otak kanan berperan dalam memproses dan merasakan emosi yang tersirat dalam nada dan irama musik. Hal ini yang membuat mengapa kita dapat merasakan kesedihan, kegembiraan, atau ketenangan ketika mendengarkan lagu yang sesuai dengan perasaan kita.
Mungkin karena lagi galau atau gimana ya, tapi secara tidak sengaja saya iseng dengerin lagu lama mandarin yang berjudul Nǐ shì wǒ wéiyī de zhízhuó, lagu ini menyampaikan bahwa mencintai pasangan adalah janji yang takkan pernah berubah, dan merupakan satu-satunya yang diinginkan dan mampu memberikan kebahagiaan. Jika suatu saat pasangan lupa atau berubah, itu karena kelelahan atau kehilangan kesadaran. Dan jika harus pergi, itu demi menghindari menyusahkan pasangan.
Lirik Nǐ shì wǒ wéiyī de zhízhuó # Nǐ shì wǒ wéiyī de zhízhuó
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Nǐ shì wǒ yīshēng de jìtuō
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Rúguǒ wǒ wàngle zěnme ài nǐ
Nà yīdìng shì wǒ shīyì hūnmí
Rúguǒ wǒ yǒu tiān túrán lí qù
Nà yīdìng shì bùxiǎng tuōlèi nǐ
Rúguǒ nǐ wàngle huí jiā de lù
Wǒ yuàn zuò xīngxīng péi nǐ kàngù
Rúguǒ nǐ gūdān yèlǐ wú zhù
Huà zuò mèng yǔ nǐ zhāo zhāo mù mù
Nǐ shì wǒ wéiyī de zhízhuó
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Nǐ shì wǒ yīshēng de jìtuō
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Nǐ shì wǒ wéiyī de zhízhuó
Shǒuhù nǐ shì wǒ de kuàilè
Nǐ shì wǒ yīshēng de jìtuō
Ai nǐ shì bù biàn de chéngnuò
♫Music♫
Rúguǒ nǐ wàngle huí jiā de lù
Wǒ yuàn zuò xīngxīng péi nǐ kàngù
Rúguǒ nǐ gūdān yèlǐ wú zhù
Huà zuò mèng yǔ nǐ zhāo zhāo mù mù
Nǐ shì wǒ wéiyī de zhízhuó
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Nǐ shì wǒ yīshēng de jìtuō
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Nǐ shì wǒ wéiyī de zhízhuó
Shǒuhù nǐ shì wǒ de kuàilè
Nǐ shì wǒ yīshēng de jìtuō
Ai nǐ shì bù biàn de chéngnuò
Nǐ shì wǒ wéiyī de zhízhuó
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Nǐ shì wǒ yīshēng de jìtuō
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Nǐ shì wǒ wéiyī de zhízhuó
Shǒuhù nǐ shì wǒ de kuàilè
Nǐ shì wǒ yīshēng de jìtuō
Ai nǐ shì bù biàn de chéngnuò
Lirik Bahasa Indonesia: Nǐ shì wǒ wéiyī de zhízhuó # Kau adalah satu-satunya yang ku inginkan(pedulikan)
Hanya kau yang bisa membuatku bahagia
Kaulah yang seumur hidup ini ku percayakan
Meskipun harus berkorban untukmu
Jika aku lupa bagaimana mencintaimu
Itu pasti karena aku pingsan(hilang kesadaran)
Jika suatu hari aku tiba-tiba pergi
Itu pasti karena aku tidak ingin menyusahkanmu
Jika kau lupa jalan kembali ke rumah
Aku bersedia menjadi bintang yang peduli dan menemanimu
Jika kau kesepian tidak berdaya dimalam hari
Aku akan menjelma menjadi mimpi yang menemanimu siang dan malam
Kau adalah satu-satunya yang ku inginkan(pedulikan)
Hanya kau yang bisa membuatku bahagia
Kaulah yang seumur hidup ini ku percayakan
Meskipun harus berkorban untukmu
Kau adalah satu-satunya yang ku inginkan(pedulikan)
Menjagamu adalah kebahagiaanku
Kaulah yang seumur hidup ini ku percayakan
Mencintaimu adalah janji yang tidak akan berubah
♫Music♫
Jika kau lupa jalan kembali ke rumah
Aku bersedia menjadi bintang yang peduli dan menemanimu
Jika kau kesepian tidak berdaya dimalam hari
Aku akan menjelma menjadi mimpi yang menemanimu siang dan malam
Kau adalah satu-satunya yang ku inginkan(pedulikan)
Hanya kau yang bisa membuatku bahagia
Kaulah yang seumur hidup ini ku percayakan
Meskipun harus berkorban untukmu
Kau adalah satu-satunya yang ku inginkan(pedulikan)
Menjagamu adalah kebahagiaanku
Kaulah yang seumur hidup ini ku percayakan
Mencintaimu adalah janji yang tidak akan berubah
Kau adalah satu-satunya yang ku inginkan(pedulikan)
Hanya kau yang bisa membuatku bahagia
Kaulah yang seumur hidup ini ku percayakan
Meskipun harus berkorban untukmu
Kau adalah satu-satunya yang ku inginkan(pedulikan)
Menjagamu adalah kebahagiaanku
Kaulah yang seumur hidup ini ku percayakan
Mencintaimu adalah janji yang tidak akan berubah
Mandarin, Inggris, Indonesia: Nǐ shì wǒ wéiyī de zhízhuó # 你是我唯一的执着
Nǐ shì wǒ wéiyī de zhízhuó
You are the only one I want(to care about)
Kau adalah satu-satunya yang ku inginkan(pedulikan)
只有你能让我快乐
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Only you can make me happy
Hanya kau yang bisa membuatku bahagia
你是我一生的寄托
Nǐ shì wǒ yīshēng de jìtuō
You are the one I have entrusted my whole life
Kaulah yang seumur hidup ini ku percayakan
就算为你赴汤蹈火
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Even if I have to sacrifice for you
Meskipun harus berkorban untukmu
如果我忘了怎么爱你
Rúguǒ wǒ wàngle zěnme ài nǐ
If I forget how to love you
Jika aku lupa bagaimana mencintaimu
那一定是我失忆昏迷
Nà yīdìng shì wǒ shīyì hūnmí
That&rsquo;s because I lost consciousness
Itu pasti karena aku pingsan(hilang kesadaran)
如果我有天突然离去
Rúguǒ wǒ yǒu tiān túrán lí qù
If I leave suddenly one day
Jika suatu hari aku tiba-tiba pergi
那一定是不想拖累你
Nà yīdìng shì bùxiǎng tuōlèi nǐ
It must be because I don&rsquo;t want to bother you
Itu pasti karena aku tidak ingin menyusahkanmu
如果你忘了回家的路
Rúguǒ nǐ wàngle huí jiā de lù
If you forget your way home
Jika kau lupa jalan kembali ke rumah
我愿做星星陪你看顾
Wǒ yuàn zuò xīngxīng péi nǐ kàngù
I would like to be a star and accompany you
Aku bersedia menjadi bintang yang peduli dan menemanimu
如果你孤单夜里无助
Rúguǒ nǐ gūdān yèlǐ wú zhù
If you are lonely and helpless in the night
Jika kau kesepian tidak berdaya dimalam hari
化作梦与你朝朝暮暮
Huà zuò mèng yǔ nǐ zhāo zhāo mù mù
I will transform into a dream that accompanies you day and night
Aku akan menjelma menjadi mimpi yang menemanimu siang dan malam
你是我唯一的执着
Nǐ shì wǒ wéiyī de zhízhuó
You are the only one I want(to care about)
Kau adalah satu-satunya yang ku inginkan(pedulikan)
只有你能让我快乐
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Only you can make me happy
Hanya kau yang bisa membuatku bahagia
你是我一生的寄托
Nǐ shì wǒ yīshēng de jìtuō
You are the one I have entrusted my whole life
Kaulah yang seumur hidup ini ku percayakan
就算为你赴汤蹈火
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Even if I have to sacrifice for you
Meskipun harus berkorban untukmu
你是我唯一的执着
Nǐ shì wǒ wéiyī de zhízhuó
You are the only one I want(to care about)
Kau adalah satu-satunya yang ku inginkan(pedulikan)
守护你是我的快乐
Shǒuhù nǐ shì wǒ de kuàilè
Guarding you is my pleasure
Menjagamu adalah kebahagiaanku
你是我一生的寄托
Nǐ shì wǒ yīshēng de jìtuō
You are the one I have entrusted my whole life
Kaulah yang seumur hidup ini ku percayakan
爱你是不变的承诺
Ai nǐ shì bù biàn de chéngnuò
Loving you is a promise that will not change
Mencintaimu adalah janji yang tidak akan berubah
♫Music♫
如果你忘了回家的路
Rúguǒ nǐ wàngle huí jiā de lù
If you forget your way home
Jika kau lupa jalan kembali ke rumah
我愿做星星陪你看顾
Wǒ yuàn zuò xīngxīng péi nǐ kàngù
I would like to be a star and accompany you
Aku bersedia menjadi bintang yang peduli dan menemanimu
如果你孤单夜里无助
Rúguǒ nǐ gūdān yèlǐ wú zhù
If you are lonely and helpless in the night
Jika kau kesepian tidak berdaya dimalam hari
化作梦与你朝朝暮暮
Huà zuò mèng yǔ nǐ zhāo zhāo mù mù
I will transform into a dream that accompanies you day and night
Aku akan menjelma menjadi mimpi yang menemanimu siang dan malam
你是我唯一的执着
Nǐ shì wǒ wéiyī de zhízhuó
You are the only one I want(to care about)
Kau adalah satu-satunya yang ku inginkan(pedulikan)
只有你能让我快乐
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Only you can make me happy
Hanya kau yang bisa membuatku bahagia
你是我一生的寄托
Nǐ shì wǒ yīshēng de jìtuō
You are the one I have entrusted my whole life
Kaulah yang seumur hidup ini ku percayakan
就算为你赴汤蹈火
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Even if I have to sacrifice for you
Meskipun harus berkorban untukmu
你是我唯一的执着
Nǐ shì wǒ wéiyī de zhízhuó
You are the only one I want(to care about)
Kau adalah satu-satunya yang ku inginkan(pedulikan)
守护你是我的快乐
Shǒuhù nǐ shì wǒ de kuàilè
Guarding you is my pleasure
Menjagamu adalah kebahagiaanku
你是我一生的寄托
Nǐ shì wǒ yīshēng de jìtuō
You are the one I have entrusted my whole life
Kaulah yang seumur hidup ini ku percayakan
爱你是不变的承诺
Ai nǐ shì bù biàn de chéngnuò
Loving you is a promise that will not change
Mencintaimu adalah janji yang tidak akan berubah
你是我唯一的执着
Nǐ shì wǒ wéiyī de zhízhuó
You are the only one I want(to care about)
Kau adalah satu-satunya yang ku inginkan(pedulikan)
只有你能让我快乐
Zhǐyǒu nǐ néng ràng wǒ kuàilè
Only you can make me happy
Hanya kau yang bisa membuatku bahagia
你是我一生的寄托
Nǐ shì wǒ yīshēng de jìtuō
You are the one I have entrusted my whole life
Kaulah yang seumur hidup ini ku percayakan
就算为你赴汤蹈火
Jiùsuàn wèi nǐ fùtāng dǎohuǒ
Even if I have to sacrifice for you
Meskipun harus berkorban untukmu
你是我唯一的执着
Nǐ shì wǒ wéiyī de zhízhuó
You are the only one I want(to care about)
Kau adalah satu-satunya yang ku inginkan(pedulikan)
守护你是我的快乐
Shǒuhù nǐ shì wǒ de kuàilè
Guarding you is my pleasure
Menjagamu adalah kebahagiaanku
你是我一生的寄托
Nǐ shì wǒ yīshēng de jìtuō
You are the one I have entrusted my whole life
Kaulah yang seumur hidup ini ku percayakan
爱你是不变的承诺
Ai nǐ shì bù biàn de chéngnuò
Loving you is a promise that will not change
Mencintaimu adalah janji yang tidak akan berubah
Karaoke: Nǐ shì wǒ wéiyī de zhízhuó # Video Bermain Wahana (1) `}),e.add({id:27,href:"/coretanku/pesta-tahunan-2023/",title:"Kerja Tahun (Karo): Pesta Tahunan 2023",description:"Dalam tradisi suku Karo terdapat perayaan yang namanya Kerja Tahun (Pesta Tahunan) atau disebut juga Merdang Merdem. Kerja Tahun merupakan suatu pesta yang dilakukan secara turun temurun oleh suku Karo dengan tujuan menjaga ketentraman dan keseimbangan bermasyarakat serta membangun komunikasi dengan keluarga yang sudah lama tidak bertemu. Kali ini, Pesta tahunan di kampung saya dilaksanakan pada tanggal 7 dan 8 Juli 2023.",content:`Medan - Berastagi # Dalam tradisi suku Karo terdapat perayaan yang namanya Kerja Tahun (Pesta Tahunan) atau disebut juga Merdang Merdem. Kerja Tahun merupakan suatu pesta yang dilakukan secara turun temurun oleh suku Karo dengan tujuan menjaga ketentraman dan keseimbangan bermasyarakat serta membangun komunikasi dengan keluarga yang sudah lama tidak bertemu. Kampung dan asal orang tua saya di Desa Bintang Meriah, Kecamatan Kutabuluh Simole, Kabupaten Karo, Sumut. Kali ini, Pesta tahunan di kampung saya dilaksanakan pada Jumat - Sabtu, tanggal 7 dan 8 Juli 2023. Berhubung jumat masih belum hari libur, kami berangkatnya sore hari dari Medan.
Sebetulnya dari awal saya sedikit ragu perjalanan sore Medan - Berastagi karena bersamaan dengan kegiatan Pesta Mejuah-juah, dan pasti jalan macat, tetapi mau gimana lagi, nggak mungkin pas pesta tahunan tidak hadir. Syukurnya dugaan saya keliru, jalanan lancar hingga ke Berastagi.
Berastagi - Kampung # Perjalanan Berastagi ke kampung, saya langsung dari Jl. Udara Berastagi, tidak melewati Kabanjahe. Pada desa Simpang Empat (Ndokum Siroga), bisanya saya lurus saja, tetapi karena jalanan mulai dari desa Tiga Pancur Rusak parah, saya mengamibl jalur ke arah Lau Kawar dan nantinya belok kiri di simpangan ke desa Berastepu, Selanjutnya tinggal lurus langsung ke kampung :-).
Jiarah ke Makam Keluarga # Tahun ini sedikit berbeda dengan tahun sebelumnya. Tahun-tahun sebelumnya biasanya saya jiarah hanya sendiri atau sesuai waktu sampai di kampung. Tahun ini kami jiarah ramai beserta keluarga besar karena dalam keluarga ada yang meninggal dalam tahun yang sama dengan pesta tahunan. Dalam orang karo ada istilah &lsquo;Rendem&rsquo; yang artinya masih masa berduka karena ada anggota keluarga kita yang meninggal dalam kurun waktu setahun. Anggota keluarga kita tidak dapat ikut dalam pesta tahunan. Kami kehilangan Mamak Tengah (Istri dari adik bapak saya).
Foto Jiarah, mengantar Bunga. Jiarah Ke Makam Keluarga dari Mamak # Biasanya kalau pulang kampung, saya akan jiarah ke tempat Kakek (Bulang) dan Nenek dari Mamak (iting) terlebih dahulu di Desa Mardingding, Kecamatan Tiganderket, tetapi karena kali ini sudah malam maka langsung saja pulang ke kampung. Kami Jiarah ketika perjalanan mau pulang ke medan. Saya lupa foto sewaktu jiarah, tetapi saya tidak pernah lupa untuk singgah jiarah setiap pulang ke kampung.
Perjalanan Kampung - Medan # Setelah Jiarah di Makam keluarga dari mamak, kami melanjutkan perjalanan ke Medan. Kalau perjalanan ke kampung saya hanya bertiga dengan istri dan anak, perjalanan pulang kami berlima dengan mertua. Tidak lupa singgah sebentar di Penatapen Berastagi dan melanjutkan makan malam di Daerah sibolangit (lupa foto juga :-) ). `}),e.add({id:28,href:"/coretanku/berpartisipasi-dalam-menyukseskan-ujian-cat-ppk-kpud-karo/",title:"Berpartisipasi dalam menyukseskan ujian CAT PPK KPUD Karo",description:"Ujian CAT (Computer Assisted Test) dilaksakanan oleh Komisi Pemilihan Umum Daerah (KPUD) seluruh Indonesia untuk menyeleksi calon Panitia Pemilihan Kecamatan (PPK). Di kabupaten Karo, kebetulan KPUD Karo bekerjasama dengan Kampus Institut Teknologi dan Bisnis Indonesia Kabanjahe.",content:`Pengantar # Ujian CAT (Computer Assignment Test) dilaksakanan oleh Komisi Pemilihan Umum Daerah (KPUD) seluruh Indonesia untuk menyeleksi calon Panitia Pemilihan Kecamatan (PPK). Di kabupaten Karo, kebetulan KPUD Karo bekerjasama dengan Kampus Institut Teknologi dan Bisnis Indonesia Kabanjahe untuk support penyelenggaran CAT khususnya dalam instalasi jaringan dan aplikasi.
Ujian CAT di kab. Karo dilaksanakan selama dua hari yaitu 6 - 7 Desember 2022, dengan lima gelombang setiap harinya. Setiap gelombang memiliki durasi waktu ujian selama 90 menit.
Agenda kegiatan ini dapat di bilang mendadak, kami mendapatkan informasi dan meninjau kelengkapan lokasi ujian pada hari Jumat 2 desember 2022. Saya dan seorang teman ditugaskan kampus untuk memastikan kegiatan ini berjalan dengan lancar. Dari kebutuhan dan penjelasan yang disampaikan pihak KPU kab. Karo, saya berpikir proses instalasi jaringan dan aplikasi tidak rumit, dan memang betul.
Ujian akan dilaksanakan di SMP Negeri 1 Kabanjahe dengan menggunakan fasilitas lab komputer sekolah tersebut. Dari pemantauan ke lokasi ujian dan arahan untuk minimal spesifikasi komputer sudah memadai.
Ujian akan dilaksanakan dalam jaringan LAN (Local), dan terkoneksi ke satu server. Dari spesifikasi yang dibutuhkan pada saat brief secara online, Komputer server minimal memiliki RAM 8GB, Core i5 dan koneksi kabel LAN 100Mbps atau 1Gps dari client. Komputer pada lokasi tes sudah memiliki spesifikasi tersebut, dan jumlah client juga sudah mencukupi (40 client).
Sistem digunakan berbasis web, dengan framework PHP (laravel) dan MySQL/MariaDB sebagai database. Tim dari KPU juga menyarankan intalasi pake XAMPP (software bundle Apache, MariaDB) untuk menjalankan Aplikasi.
Berdasarkan ujicoba pada H-1 sebelum kegiatan dengan menggunakan soal dummy hasilnya lancar, (soal real dikirim 3 jam sebelum pelaksanaan).
Kegiatan Hari pertama # Ketika sudah setting sesi dan peserta ujian, sesi 1 dan sesi 2 bisa di bilang lancar dengan peserta sekitar 35 orang per sesi. Pada sesi 3, performance server sudah menurun sehingga berakibat sedikit lambat juga pada client, tau sendirilah servernya sekolah adalah PC sever, bukan server yang sebenarnya🙂.
Kegiatan Hari kedua # Hari kedua, kami menggunakan 2 PC server yang mengelola 20 client setiap servernya, dan hasilnya lancar.
`}),e.add({id:29,href:"/mengenal-composer-dependency-manager-php/",title:"Mengenal Composer: Dependency Manager PHP",description:"Pada sebuah proyek aplikasi yang besar tentunya membutuhkan banyak library, dan umumnya setiap library ketergantungan dengan library yang lain. Instalasi library secara manual akan merepotkan dan membutuhkan waktu. Oleh karena itu, kita membutuhkan dependency manager yaitu Composer.",content:`Apa itu Composer? # Pada sebuah proyek aplikasi yang besar tentunya membutuhkan banyak library, dan umumnya setiap library ketergantungan dengan library yang lain. Instalasi library secara manual akan merepotkan dan membutuhkan waktu. Oleh karena itu, kita membutuhkan dependency manager yaitu Composer. Composer adalah dependency manager untuk PHP, yaitu sebuah tools yang digunakan untuk memudahkan kita dalam mengelola library PHP yang digunakan pada aplikasi kita beserta dependensinya.
Sebagai gambaran, misalnya kita memiliki suatu aplikasi yang membutuhkan library Reporting untuk generate dan menampilkan laporan. Library reporting yang kita butuhkan tersebut tidak berdiri sendiri, tetapi membutuhkan library lain, sebut saja FPDF (untuk generate dokumen berformat PDF) dan PHPExcell (untuk generate dokumen berformat spreadsheet). Dengan menggunakan composer, kita cukup menjalankan perintah untuk melakukan instalasi library reporting saja, selanjutnya composer akan secara otomatis melakukan instalasi library lain yang dibutuhkan oleh library tersebut.
Composer bukanlah teknologi atau terobosan baru. Beberapa bahasa pemrograman atau tools lain sudah menggunakan cara yang relatif sama dengan cara kerja Composer. Jika anda adalah pengguna Linux maka tentu hal ini sudah tidak asing lagi, misalnya pada distro Fedora terdapat Yum atau pada distro Ubuntu terdapat peritnah apt-get, apa yang dilakukan oleh Composer mirip dengan perintah yum dan apt-get untuk melakukan instalasi atau memperbaharui suatu aplikasi. Selain bahasa pemrograman PHP, sebut saja NodeJs juga telah menggunakan tools NPM yang cara kerjanya seperti composer untuk instalasi library-nya.
Apakah harus menggunakan Composer dalam pengembangan Aplikasi berbasis PHP? # Pengembangan aplikasi berbasis PHP tidaklah mutlak harus menggunakan Composer, hanya saja pada saat ini Composer telah menjadi bagian dari standar pengembangan aplikasi berbasis PHP. Banyak library PHP yang memang sejak awal didesain untuk mendukung Composer sehingga tidak ada panduan untuk menginstalnya secara manual lagi, tentu hal ini akan merepotkan kita jika kita memaksakan diri untuk tidak menggunakannya. Di samping itu, umumnya framework PHP modern menggunakan dan mendukung Composer.
Bagaimana cara kerja Composer? # Cara kerja Composer dapat dilihat seperti gambar berikut:
Keterangan:
Mula-mula Composer membaca daftar library yang ingin kita instal yang mana daftar tersebut telah kita definisikan terlebih dahulu. Composer mengecek apakah di lokal komputer (cache) telah ada versi yang dimaksud. Jika di lokal komputer kita ada versi tersebut maka Composer akan mengecek lagi apakah library dimaksud membutuhkan dependensi dengan library lain atau tidak. Jika library tersebut membutuhkan library lain, maka Composer akan mencoba melakukan instalasi atau menyalin library dependensi tersebut. Kemudian setelah itu, Composer akan memasang library utamanya ke current direktori. Apabila di lokal komputer tidak terdapat library dan dependensi dimaksud, maka Composer akan menghubungi server yang dalam hal ini adalah packagist.org (default). ✔︎ Catatan: Packagist (PHP package archivist) yaitu sebuah server repository yang menyimpan daftar URL dari library-library PHP seluruh dunia. Adapun kode library tersebut disimpan pada hosting lain. Sebagai contoh, framework Laravel hosting kodenya di https://github.com
Setelah menemukan paket dimaksud maka kemudian Composer mengunduhnya dan memasangnya pada current directory. Di samping itu, Composer juga menyimpan paket tersebut pada cache komputer kita. Sehingga jika suatu saat kita akan menginstalnya lagi maka Composer cukup mengambil dari lokal komputer tanpa perlu men-download dari server lagi. kurang lebih seperti itu kira-kira cara kerja Composer. Oleh karena Composer terhubung ke server internet, maka kita perlu koneksi internet yang memadai untuk bisa menggunakan Composer dengan baik. Mengapa menggunakan Composer? # Intinya adalah untuk mempermudah kita. Seperti yang saya sampaikan pada awal tadi, Composer akan memudahkan kita dalam memasang suatu library PHP beserta dependensinya. Kita sebenarnya bisa saja memasang library library-library tersebut secara manual satu per satu kemudian mengkonfigurasinya. Namun, selain memakan waktu dan tidak efisien, cara manual ini juga sudah mulai ditinggalkan, yang mana saat ini banyak library PHP yang merekomendasikan untuk instalasi menggunakan Composer tanpa ada dokumentasi atau penjelasan tentang bagaimana cara melakukan instalasinya secara manual.
Pada sebuah proyek aplikasi yang besar, dengan banyak library yang digunakan, maka memasang dengan cara manual tentu akan sangat merepotkan dan membutuhkan waktu yang lama. Jadi di samping memudahkan, Composer juga akan membuat pekerjaan kita lebih efektif dan efisien.
Kesimpulan # Sebagai satu-satunya PHP dependency manager, saat ini Composer sudah menjadi bagian yang sangat penting dalam pengembangan aplikasi berbasis PHP, baik karena kemudahan maupun efisiensinya. Oleh karena itu, sebaikanya jika kita bergelut dalam bidang pemrograman, khususnya PHP maka penggunaan composer sangat di sarankan. Untuk download composer silakan langsung ke https://getcomposer.org, silakan baca panduan penggunaan composer di https://getcomposer.org/book.pdf.
`}),e.add({id:30,href:"/filsafat-sebagai-ibu-kandung-ilmu-pengetahuan/",title:"Filsafat sebagai 'Ibu kandung' Ilmu Pengetahuan",description:"Filsafat telah mengandung benih-benih pemikiran keilmuan, melahirkan bayi-bayi ilmu, menyusui, dan membina tumbuh kembang ilmu pengetahuan  menjadi cabang dan ranting-ranting keilmuan, serta filsafat juga telah mendewasakan ilmu sebagai ilmu hingga mandiri.",content:`Filsafat Sebagai Ibu dari ilmu pengetahuan # Filsafat merupakan ibu dari ilmu pengetahuan atau the mother of sciences. Disebut sebagai ibu dari ilmu pengetahuan karena dari awal filsafat sudah melewati proses layaknya seorang ibu yang mengandung, melahirkan, menyusui dan mendewasakan ilmu pengetahuan.
Filsafat telah mengandung benih-benih pemikiran keilmuan, melahirkan bayi-bayi ilmu, menyusui, dan membina tumbuh kembang ilmu pengetahuan menjadi cabang dan ranting-ranting keilmuan, serta filsafat juga telah mendewasakan ilmu sebagai ilmu hingga mandiri. Mandiri dalam arti kata sudah menjadi cabang ilmu baru.
1. Ibu yang Mengandung # Filsafat adalah ibu yang mengandung benih-benih pemikiran keilmuan. Layaknya seorang ibu yang mengandung, sejak dari dalam kandungan calon bayi ilmu sudah dibina sehingga nantinya terarah, matang dan siap untuk dilahirkan.
Sejak dalam kandungan filsafat selalu mengembangkan gagasan- gagasannya, memelihara benih-benih ilmu di dalam kandungannya serta membina benih-benih pemikiran itu menjadi bayi keilmuan yang nantinya siap dilahirkan
2. Ibu yang Melahirkan # Filsafat adalah ibu yang melahirkan bayi–bayi ilmu pengetahuan. Proses kelahiran ilmu baru dari filsafat bebeda dengan kelahiran bayi pada umumnya. Filsafat adalah ibu ilmu pengetahuan sehingga dapat melahirkan sendiri tanpa bantuan pihak lain.
Filsafat membidani sendiri proses kelahiran bayi ilmu, membentuk cabang-cabang keilmuan baru, meluncurkan pemikiran keilmuan yang mempengaruhi sejarah keilmuan sehingga hal ini akan membentuk hubungan bathiniah (ibu dan anak kandung)
3. Ibu Kandung yang Menyusui # Filsafat adalah ibu kandung yang menyusui bayi ilmu. Filsafat memberikan gizi pemikiran dalam berbagai proses ujian-ujian kritis, dan melakukan kritik serta penyempurnaan yang akan mematangkan bayi ilmu. Sebagai ibu kandung, filsafat tidak memperlakukan bayi ilmu sebagai budak, tetapi terus memotivasi tumbuh kembang ilmu secara otonom.
Dalam hal ini, filsafat sudah Membangun, membuka dan membentangkan penemuan-penemuannya dalam bentuk ilmu baru yang siap untuk diuji secara logis dengan metode validasi keilmuan secara kritis. Sebagai ibu kandung, filsafat tetap mengasah pertumbuhan ilmu dalam proses komunikasi antar lintas ilmu. Jadi dapat di bilang, filsafat tetap mengarahkan ilmu yang baru agar tidak salah dalam hal berinteraksi dengan cabang/ranting ilmu yang lain.
Filsafat tetap memlihara perkembangan ilmu baru agar dapat tumbuh secara sehat, tidak keliru atau sesat pikir.
4. Ibu yang Mendewasakan # Filsafat sebagai ibu kandung yang ibu yang mendewasakan ilmu. Filsafat tidak membelenggu ilmu hanya sebatas jangkauannya, namun memberikan kebebasan untuk berkembang. Filsafat Mendorong kemandirian ilmu-ilmu agar mampu berkembang dan menghasilkan pemikiran yang khas.
Dengan demikian, secara langsung, filsafat telah berperan mendewasakan kelahiran benih- benih pemikiran, pengetahuan, dan keilmuan secara global sehingga mempengaruhi segala aspek kehidupan manusia. Prinsip Filosofis dalam kegiatan keilmuan # Sebagai induk ilmu, filsafat ingin menunjukkan sebuah hal mendasar dalam mencari pemikiran keilmuan. Bagi filsafat, manusia yang dasarnya adalah sebagai homo sapiens (mahluk yg berpikir), selalu tahu akan ketidak tahuannya. Hal ini secara otomatis membuat pengetahuan yang semakin banyak akan menghasilkan ketidaktahuan yang semakin besar pula. Manusia akan terus menggali ketidak tahuan tersebut.
Dengan menggali misteri ketidaktahuan tersebut, manusia telah menciptakan penemuan-penemuan, inovasi-inovasi, manusia juga sudah menyelesaikan berbagai masalah-masalah kehidupan, tetapi ini juga menimbulkan permasalahan dan ketakutan-ketakutan yang baru di masa mendatang.
Contoh sederhana, manusia dgn terus berpikir seperti kodratnya sebagai mahluk yg berpikir, berhasil membuat reactor nuklir yang membantu kelangsungan hidup manusia, tetapi mengalami ketakutan (akan punah) jika disalahgunakan dalam bentuk bom nuklir. Contoh lainnya, perkembangan internet beserta fasilitas-fasilitas yang ada di dalamnya, membantu manusia dari segala bidang (transportasi, komunikasi, ecommerce, transaksi perbankan, model asset/pembayaran berbasis blockchain, dlsb.).
Satu sisi membantu, sisi lain menimbulkan ketakutan. Berita beberapa hari lalu saya baca, google di tuntut negara bagian Arizona terkait kebijakan penggunaan lokasi pengguna, tanpa mengaktifkan lokasi perangkat, google mencatat lokasi pengguna. Saya pribadi, fitur google map saja sudah menakutkan, kita di beri secara gratis, dgn lokasi yg presisi (gambar, koordinat) bagaimana yg tidak di bagi-bagikan (di simpan google?)
Oleh karena itu, manusia harus mengenali dirinya sendiri (Gnoti Seauton). Diri sendirilah mengenal kekuatan dan kelemahannya sendiri, dan tidak akan membiarkan diri dikuasai oleh kejahatan, baik akibat kebodohan atau karena kepintaran yang tidak terarah dan sesat. Dalam hal ini, filsafat ingin menunjukkan bahwa pikiran itu selalu punya empat dimensi yang saling berkaitan, yaitu
pikiran yang aktif untuk terus mengembangkan pengetahuan untuk membangun kehidupan menjadi lebih baik pemikiran yang kreatif untuk mengolah pengetahuan dalam bentuk fakta menjadi permasalahan dan menyediakan solusi penyelesaian. pemikiran yang kritis untuk membangun kesadaran diri dan kemampuan nalar dalam menilai dan mempertanyakan berbagai kemungkinan dalam hidup pemikiran yang kontemplatif untuk mengontrol pikiran itu sendiri sehingga tidak terjebak dalam kesesatan. Makna Mempelajari Filsafat # Dalam tugas keilmuan, filsafat memberikan makna yang penting bagi manusia, salah satunya yaitu membuat manusia akan lebih menjadi manusia. Dengan belajar filsafat maka manusia akan membangun dirinya atas dasar tanggung jawab kemanusiaannya untuk menemukan jati dirinya yang khas.
Manusia dituntun menemukan solusi permasalahan hidup melalui proses yang mendalam untuk mencapai penemuan yang bijaksana. Manusia akan menilai secara lebih objektif dan matang dalam berpikir tentang manusia itu sendiri, sifat dalam dirinya secara jasmani dan kerohanian, dan juga dunia sekitar beserta segala isinya.
Belajar filsafat juga akan melatih manusia untuk memandang dengan luas dari berbagai sisi. Manusia akan terhindar dari kesesatan dan sifat akusentris yang hanya menempatkan diri sebatas objek bagi dirinya sendiri. Manusia akan lebih terbuka untuk mengembangkan pikiran secara luas dan kritis dengan membekali diri melalui pencarian berbagai sumber-sumber ilmu pengetahuan.
Filsafat juga membimbing kreativitas dan kemandirian manusia untuk mengatasi segala permasalahan dalam hidup.
Manusia dilatih untuk berpikir secara mandiri dari segi intelektual dan kerohanian. Manusia akan menyempurnakan cara berpikir dan mempertahankan pendapatnya secara kritis dengan menyajikan sumber pengetahuan yang relevan dengan ke khasan ilmunya, sehingga dengan belajar filsafat manusia akan mencapai kematangan dan kedewasaan dalam berpikir.
Filsafat dan Ilmu Lain # Filsafat adalah sebuah pemikiran yang mendasar dan menyeluruh (universal) sedangkan ilmu lainnya adalah pemikiran yang lebih spesifik (memiliki ke-khasan). Obyek penelitian filsafat mencakup segala sesuatu, sejauh masih dapat dijangkau oleh pikiran manusia. Filsafat berusaha menyingkap seluruh kenyataan dan menyelidiki sebab-sebab dasariah dari segala sesuatu. Filsafat ingin mengkritisi berbagai batas pemikiran ilmu-ilmu lainnya untuk mencapai sebab terakhir dari segala yang ada.
Filsafat berawal dari kegiatan pengetahuan dan kehendak manusia yang secara langsung dialami. Manusia sadar akan eksistensinya sendiri, orang lain, dan dunia sekitarnya dan berusaha mendalami hingga ke hal paling mendasar. Disini filsafat berusaha menjadi cahaya, tetapi lebih ke dalam hal kebijaksanaan duniawi dan bukan kebijaksanaan yang mutlak dan abadi layaknya kebijaksanan ilahi.
Filsafat berusaha menguji dan mengkritisi secara aktual atas fenomena baru dalam kehidupan manusia dan memberi pencerahan dengan cara yang baru juga.
Download File # Ini adalah tugas perkuliahan saya pada matakuliah Filsafat Ilmu, saya share di blog ini, siapa tahu nanti ada teman-teman yang membutuhkan. File Pdf dapat di download di sini. Dalam bentuk slide Power point dapat di download di sini.
Terima kasih telah berkunjung 🙂 dan semoga bermanfaat!
Referensi # Ismaun, Pengertian Filsafat, Objek, dan Kedudukannya dalam Berbagai Ilmu Pengetahuan, akses online: http://repository.ut.ac.id/3922/1/PKNI4316- M1.pdf
Achmad Dardari, “Handout Filsafat Ilmu”, akses online: http://staffnew.uny.ac.id/upload/130936811/ pendidikan/handout+- +FILSAFAT+ILMU.pdf
Suriasumantri, J.S., 1995, Ilmu dalam Perspektif, Yayasan Obor Indonesia, Jakarta. Watloly, A. Tanggung Jawab Pengetahuan, Kanisius, Yogyakarta, 2001.
Rijal, F.M, Hubungan Filsafat, Ilmu dan Filsafat Ilmu, Akses online: https://jurnal.ugm.ac.id/wisdom/article/downloadSuppFile/42521/6821
Philarchive ”Mudul perkuliahan Filsafat Ilmu” akses online: ,https://philarchive.org/archive/BOEFI Zarlis, M, 2022, “Modul Kuliah Pertemuan 5: FILSAFAT SEBAGAI “IBU ILMU” “, Ilmu Komputer Sem 1
`}),e.add({id:31,href:"/filsafat-philosophia-cinta-pada-kebijaksanaan/",title:"Filsafat: Philosophia, cinta pada kebijaksanaan",description:"Filsafat itu, selain mengajarkan kita untuk berfikir kritis dan logis, juga merupakan suatu proses berpikir manusia yang mengarahkannya agar menjadi orang yang bijaksana dalam menghadapi segala sesuatu yang ada dalam hidup.",content:`Berfilsafat adalah berpikir, tetapi tidak semua berpikir itu adalah berfilsafat. Filsafat merupakan peletak dasar suatu pengetahuan. Oleh sebab itu, filsafat disebut sebagai induk segala ilmu pengetahuan (mater scientarium).
Filsafat berasal dari kata Yunani yaitu “philosophia”. Philo artinya cinta dan Sophia artinya kebijaksanaan ataupun kebenaran. Jadi secara harfiah berarti mencintai kebijaksanaan atau cinta pada kebijaksanaan.
Filsafat merupakan suatu studi yang mempelajari seluruh fenomena kehidupan dan pemikiran manusia secara kritis, mendeteksi permasalahan secara radikal, mencari solusi, memberikan argumentasi dan alasan yang tepat untuk solusi tertentu, serta akhir dari proses-proses itu dimasukkan ke dalam sebuah proses kerja ilmiah.
Filsafat dimulai dari perenungan untuk mengusahakan kejelasan, keruntutan dan keadaan memadai dari pengetahuan agar memperoleh pemahaman.
Kita belajar filsafat untuk mengetahui sejak kapan munculnya ilmu pengetahuan, supaya mampu berpikir kritis, untuk memperoleh kebenaran. Filsafat itu, selain mengajarkan kita untuk berfikir kritis dan logis, juga merupakan suatu proses berpikir manusia yang mengarahkannya agar menjadi orang yang bijaksana dalam menghadapi segala sesuatu yang ada dalam hidup.
Dengan perkembangan pengetahuan yang yang begitu pesat, tidak menjadikan manusia berhenti untuk mencari kebenaran. Justru sebaliknya, semakin menggiatkan manusia untuk terus mencari dan mencari kebenaran yang berlandaskan teori-teori yang sudah ada sebelumnya, untuk menguji sesuatu teori baru dan menggugurkan teori sebelumnya.
Manusia menjadi lebih giat lagi melakukan penelitian-penelitian yang bersifat ilmiah untuk mencari solusi dari setiap permasalahan yang dihadapinya. Karena itu bersifat statis, tidak kaku, artinya ia tidak akan berhenti pada satu titik, tapi akan terus berlangsung seiring dengan waktu manusia dalam memenuhi rasa keingintahuannya terhadap dunia.
Untuk itulah, setiap manusia harus dapat berfikir filosofis dalam menghadapi segala realitas kehidupan ini yang menjadkan filsafat harus dipelajari. Kebijaksanaan merupakan titik ideal dalam kehidupan manusia, karena kebijaksanaan dapat menjadikan manusia untuk bersikap dan bertindak atas dasar pertimbangan kemanusiaan yang tinggi (actus humanus), bukan asal bertindak sabagaimana yang biasa dilakukan manusia(actus homoni).
`}),e.add({id:32,href:"/coretanku/manusia-yang-tahu-bukan-tempe/",title:"Manusia yang Tahu (bukan tempe) dan Tahu, Tahu itu bukan Tempe",description:"Manusia yang pada dasarnya adalah sebagai mahluk yg berpikir, oleh sebab itu manusia dapat dikelompokkan menjadi: 1)Manusia yg tahu apa yg dia tahu, 2)Manusia yang tahu apa yg dia tidak tahu, 3)Manusia yg tidak tahu apa yg dia tahu, dan 4)Manusia yg tidak tahu apa yg dia tidak tahu.",content:`Pengantar # Dengan berfilsafat kita didorong untuk mengetahui dengan kesungguhan hal apa saja yang telah kita ketahui, dan hal apa yang yang belum diketahui. Manusia yang pada dasarnya adalah sebagai homo sapiens (mahluk yg berpikir), secara otomatis membuat pengetahuan yang semakin banyak akan menghasilkan ketidaktahuan yang semakin besar juga.
Manusia akan terus menggali ketidaktahuan tersebut. Dengan menggali misteri ketidaktahuan tersebut, manusia telah menciptakan penemuan-penemuan, inovasi-inovasi, manusia juga sudah menyelesaikan berbagai masalah-masalah kehidupan, tetapi ini juga menimbulkan ketidaktahuan yang semakin besar. Kesemestaan yang tidak terbatas ini masih menyimpan misteri yang juga tidak terbatas. Adanya kata &lsquo;semesta&rsquo; dan &rsquo;tidak terbatas&rsquo; di sini juga merupakan bentuk ketidaktahuan kita😁, tetap menjadi PR untuk mencari tahu (dasarnya: mahluk berpikir).
Ahli filsafat berpendapat, bentuk Ketahuan manusia ada empat, 1)Manusia yg tahu apa yg dia tahu, 2)Manusia yang tahu apa yg dia tidak tahu, 3)Manusia yg tidak tahu apa yg dia tahu, dan 4)Manusia yg tidak tahu apa yg dia tidak tahu.
Manusia yg tahu apa yg dia tahu # Ketahuan manusia jenis ini adalah bisa jadi panutan, dapat dijadikan guru yang sesungguhnya. Sebagai manusia yang sadar akan kemampuan dan keterbatasan (manusia yg tahu ketidaktahuannya), maka sudah semestinya kita secara sepenuh hati mendalami, bahkan menuntut, tentunya dengan kaidah dan norma yang semestinya untuk menjawab sebab musabab dari ketidaktahuan kita kepadanya.
Manusia jenis ini tidak sebatas tahu akan sesuatu, bukan sebatas tahu dari pengetahuan yang disampaikan orang lain, tetapi pada hakikatnya dapat menjabarkan pengetahuan yang diketahuinya secara empiris, spesifik, ilmiah, logis dan mendasar sampai ke akarnya.
Manusia yg tahu apa yg dia tahu berarti sudah memiliki kemapanan ilmu, dan dia sendiri memahami akan ketahuannya, dapat menerapkan dan menyebarluaskan ketahuannya, menjadi pelopor ilmu sehingga memberikan kontribusi terhadap ilmu pengetahuan.
Manusia jenis ini akan terus belajar sepenuh hati, sungguh-sungguh dan metodis, selalu mengembangkan diri tanpa henti untuk mencapai penemuan dan inovasi yang nantinya dapat memberikan kontribusi, kebermanfaatan untuk dirinya dan orang sekitar.
Manusia yang tahu apa yg dia tidak tahu # Ini adalah jenis manusia yang masih awam tingkat keilmuannya, ada kemauan berkembang, dan dia menyadari akan hal itu sehingga terus belajar untuk mencari tahu akan ketidaktahuannya.
Manusia jenis ini dapat menempatkan diri pada tempat yang sepantasnya berdasarkan ketahuannya, dapat mengintrospeksi diri berdasarkan ketidaktahuannya, gemar bertanya akan sesuatu yang tidak diketahuinya. Jenis manusia seperti ini membutuhkan bimbingan dan rangkulan keilmuan dari manusia yang tahu akan ketahuannya.
Manusia yg tidak tahu apa yg dia tahu. # Manusia jenis ini adalah orang yang tidak tahu bahwa sebenarnya dirinya tahu, tidak tahu akan potensi dirinya, akan terkejut ketika melihat pencapaian yang dirinya sendiri tidak tahu kenapa bisa terjadi seperti itu.
Manusia seperti ini tidak menyadari kemampuan dan kecakapannya, ibarat manusia yang sedang tertidur dan tidak berguna, segera bangunkan dan sadarkan bahwa dia memiliki potensi luar biasa.
Manusia yg tidak tahu apa yg dia tidak tahu # Ini adalah jenis manusia bodoh dalam bertindak, dan dia tidak menyadari kebodohannya, tidak tahu jika ketidak tahuannya itu akan berakibat baik atau buruk bagi dirinya dan orang sekitar. Manusia jenis ini akan selalu gegabah, suka bertindak ceroboh sesuka hati, tidak tahu apa yang dia ketahui saat ini dan tidak tahu apa yang dia mau pertanyakan.
Ini jenis manusia yang paling buruk, susah disadarkan dan diberitahu, suka membantah tanpa kejelasan (landasan), selalu merasa tahu, semua hal dia tahu, tetapi sebenarnya hanya sedikit saja (sebatas kulit ari) dan pengakuannya sudah melebihi manusia yang tahu akan ketahuannya.
Penutup # Itulah beberapa jenis manusia berdasarkan buah pikiran ahli filsafat, baiknya, manusia harus mengenali dirinya sendiri (Gnoti Seauton). Diri sendirilah mengenal kekuatan dan kelemahannya sendiri, sehingga tidak akan membiarkan diri dikuasai oleh ketidaktahuan akan sesuatu yang tidak diketahuinya dan menjadi sesat.
Dalam hal ini, sebaiknya manusia itu selalu memiliki pikiran yang aktif untuk terus mengembangkan pengetahuan, memiliki pemikiran kreatif untuk mengolah pengetahuan, memiliki pemikiran yang kritis untuk membangun kesadaran diri dan kemampuan nalar; dan pemikiran yang kontemplatif untuk mengontrol pikiran itu sendiri.
`}),e.add({id:33,href:"/filsafat-ilmu-mahasiswa-adalah-pemikir-dan-ilmuwan/",title:"Filsafat Ilmu: Mahasiswa adalah pemikir dan Ilmuwan",description:"Ini merupakan tugas saya beberapa minggu lalu ketika mengikuti matakuliah Filsafat Ilmu. Topik yang saya angkat adalah Mahasiswa sebagai pemikir dan juga sebagai ilmuwan. Dengan berpikir keilmuan diharapkan kita mampu mendongkrak keterbatasan-keterbatasan kodrati manusia untuk melakukan penemuan- penemuan (invention) serta karya-karya budaya.",content:`Berpikir Keilmuan # Berpikir Keilmuan merupakan sebuah tugas kemanusian dan tugas budaya yang makin memperluas kesadaran (reasoning). Dengan berpikir keilmuan diharapkan mampu mendongkrak keterbatasan-keterbatasan kodrati manusia untuk melakukan penemuan- penemuan (invention) serta karya-karya budaya.
Berpikir keilmuan juga akan memanusiakan diri dan lingkungannya menjadi pribadi dan lingkungan yang manusiawi serta berbudaya😁. Berpikir keilmuan bukanlah Berkhayal untuk mencari kepuasan temporer, tetapi lebih kepada proses yang mesti membuahkan pengetahuan ilmu.
Mahasiswa sebagai pemikir # Berpikir keilmuan bukanlah, berkhayal untuk mencari kepuasan temporer, tetapi proses yang mesti membuahkan pengetahuan ilmu.
Mahasiswa bukan hanya menghadapi pikirannya, tetapi mengolah, mengkritisi, dan menatanya sedemikian rupa dengan pola penalaran yang logis maupun metode pemikiran yang khas untuk membangun dunia keilmuannya.
Berpikir sebagai mahasiswa harus terarah sepenuhnya untuk keilmuannya, baik untuk kepentingan pengembangan ilmu secara luas maupun untuk penerapan dalam memecahkan permasalahan kehidupan di dalam lingkungannya.
Berpikir ini juga merupakan serangkaian gerak kegiatan pemikiran dalam mengikuti jalan pemikiran tertentu untuk menuju sebuah kesimpulan yang berupa pengetahuan khusus (special knowledge), dalam hal ini disebut pengetahuan keilmuan (scientific knowledge). Pengetahuan keilmuan bukanlah pikiran yang statis dan final tetapi akan terus berkembang.
Mahasiswa harus selalu berpikir dan bernalar secara sistematik dan sistemik untuk mencapai perubahan demi perubahan dalam ilmu pengetahuan.Sistematik, artinya dilakukan secara konsisten, metodis, dan mengikuti prosedur. Dan Sistemik, sesuatu yang dapat mempengaruhi sistem secara keseluruhan.
Proses berpikir secara Keilmuan # Secara umum,skema proses berpikir keilmuan itu diawali dari tahap perumuskan masalah,perumusan hipotesa, pengumpulan data, pengujian hipotesa, hingga ke perumusan kesimpulan. Dalam dunia keilmuan, kesimpulan ini tidak akan langsung berhenti, tetapi dinamis dan memungkinkan terjadi perubahan (kembali lagi ke tahap perumusan masalah)
Perbedaan berpikir Keilmuan dan Non Keilmuan # Terdapat perbedaan berpikir keilmuan dan non-keilmuan. Berpikir secara keilmuan dengan cara logis dan analitis, berbeda dengan berpikir non keilmuan yang mengedepankan wahyu dan intuisi. Berpikir keilmuan dengan diawali perumusan masalah yang jelas dan spesifik sedangkan berpikir non keilmuan tidak dapat diukur secara empiris. Perbedaan lain dapat di lihat di gambar berikut, Ciri Pemikirnan Keilmuan # Sungguh-sungguh, berpikir dengan keseriusan, curahan pemikiran yang mendalam, totalitas penghayatan untuk membedah suatu pemikiran sampai mendapatkan kejelasan, kepastian dan ketepatan bagi sebuah keilmuan. Tidak sekedar bermai-main dengan pikirannya untuk mencari popularitas, tetapi menjadi teladan atau prototype kebenaran dari pemikiran keilmuan itu sendiri.
Disiplin, membutuhkan komitmen diri dalam mengawal pengembangan pemikiran sampai pada pembuktian-pembuktian kebenaran pemikiran keilmuan. Menunjukkan pula sikap ketaatan dan kesetiaan pada garis atau ciri pemikiran yang ditekuni sampai membuahkan hasilnya sebagai ilmu
Metodis, diproses dan dihasilkan dengan cara-cara kerja yang tertanggung jawab, baik dari sisi rasio maupun teknis analisis, pengujian, dan pembuktiannya. Dapat menjadi acuan bagi public dalam rangka pengujian dan pengembangan ilmu tersebut.
Terarah ke Pengetahuan, harus diarahkan sedemikiran rupa untuk menghasilkan sistem pemikiran yang tersusun secara sistematis dan menjadi kerangka pemikiran dasar bagi sebuah bangunan keilmuan
Kelebihan berpikir Keilmuan # Berpikir Kritis, terbiasa mencari informasi sebanyak mungkin berkaitan dengan bidang kajiannya secara luas dan mendalam. Bersikap Skeptis, meragukan setiap pernyataan ilmiah yang belum teruji kebenarannya. Bersikap Terbuka, kebiasaan mau mendengarkan pendapat, argumentasi dan kritik orang lain Bersikap Objektif, sikap objektif ini terlihat pada kebiasaan menyatakan apa adanya, tanpa diikuti perasaan pribadi. Bersikap berani mempertahankan kebenaran, berani membela fakta dan hasil temuan lapangan atau pengembangan walapun bertentangan atau tidak sesuai dengan teori atau dalil yang ada. Kekurangan berpikir Keilmuan # Dalam hal ini saya hanya menggaris bawahi salah satu kelemahan atau kekurangan berpikir keilmuan, yaitu Mendewakan pengetahuan.Mendewa-dewakan pemikiran dan lupa bahwa ilmu adalah buatan manusia.
Download File # Ini adalah tugas perkuliahan saya pada matakuliah Filsafat Ilmu, saya share di blog ini, siapa tahu nanti ada teman-teman yang membutuhkan. File Pdf dapat di download di sini. Dalam bentuk slide Power point dapat di download di sini.
Terima kasih telah berkunjung 🙂 dan semoga bermanfaat!
Referensi # ACHMAD DARDIRI, “Handout Filsafat Ilmu”, akses online: http://staffnew.uny.ac.id/upload/130936811/pendidikan/handout+- +FILSAFAT+ILMU.pdf
Keraf Gorys, 1992, Argumentasi dan Narasi, Gramedia, Jakarta, hal. 2-7
Philarchive ”Mudul perkuliahan Filsafat Ilmu” akses online: ,https://philarchive.org/archive/BOEFI
Suaedi, 2016, Pengantar Filsafat Ilmu, IPB Press The Liang Gie, 1985, Kamus Logika, Nurcahya, Yokyakarta.
&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;,1996, Filsafat Ilmu, Liberty, Yogyakarta.
Watloly, A. 2001, Tanggung Jawab Pengetahuan, Kanisius, Yogyakarta, 2001. &ndash; &mdash;&mdash;&mdash;&mdash;-; Memandang Pikiran dan Ilmu serta Cara mengerjakannya
Zarlis, M, 2022, “Modul Kuliah Pertemuan 2:PEMIKIR DAN ILMUWAN: MAHASISWA SEBAGAI PEMIKIR DAN ILMUWAN“, Ilmu Komputer Sem 1
`}),e.add({id:34,href:"/coretanku/pesta-bunga-dan-buah-di-berastagi-kabupaten-karo/",title:"Pesta Bunga dan Buah di Berastagi Kabupaten Karo",description:"Pesta Bunga dan Buah di Berastagi (Kab. Karo) merupakan sebuah festival ataupun pesta tahunan yang pada awalnya dilaksanakan untuk mengucap syukur kepada Tuhan karena telah memberikan masyarakat Karo tanah yang subur.",content:`Apa itu Pesta Bunga Buah? # Pesta Bunga dan Buah di Berastagi (Kab. Karo) merupakan sebuah festival ataupun pesta tahunan yang pada awalnya dilaksanakan untuk mengucap syukur kepada Tuhan karena telah memberikan masyarakat Karo tanah yang subur. Perayaan pesta Bunga dan Buah dilakukan karena masyarakat Karo mensyukuri karunia Tuhan berupa lahan yang subur dengan hasil pertaniannya yang melimpah.
Perayaan ini telah membudaya dan sudah terlaksana setiap tahunnya. Kabupaten Karo dihuni masyarakat Karo yang berbudaya pertanian (agriculture) memiliki alam pegunungan yang subur penghasil bunga, buah dan sayur yang memenuhi kebutuhan produk pertanian Sumatera Utara.
Selain sebagai ungkapan syukur pesta Bunga dan Buah juga untuk mempromosikan hasil-hasil panen masyarakat Karo. Pesta Bunga dan Buah digunakan sebagai sarana untuk menarik wisatawan agar tertarik datang dan berkunjung ke Kabupaten Karo untuk melihat hasil panen dari pertanian masyarakat Karo. Selain itu pesta ini juga sebagai sarana untuk mempromosikan tempat-tempat wisata lain yang ada di Kabupaten Karo kepada para wisatawan.
Sejarah Pesta Bunga dan Buah # Pesta Bunga dan Buah ini semula dirancang Bupati Karo yang pertama, yaitu Tampak Sebayang pada tahun 1988. Pada tahun 1998 terjadi krisis moneter di Indonesia yang berdampak terhadap pelaksanaan Pesta Bunga dan Buah. Pemerintah tidak memiliki dana untuk melaksanakan pesta ini sehingga pesta ini tidak jadi dilaksanakan. Akan tetapi antusias masyarakat untuk melaksanakan pesta ini masih kuat. Hal ini bisa dilihat pada saat ini, pesta mejuah-juah dilaksanakan kembali setelah krisis moneter selesai.
Pesta ini diagendakan pemda Karo, dan akan tetap dilaksanakan setiap tahunnya untuk dapat menarik wisatawan baik dari dalam maupun luar negeri agar mau berkunjung ke Kabupaten Karo untuk melihat Pesta Bunga dan Buah serta tempat-tempat wisata lainnya
Kegiatan pada Pesta Bunga dan Buah # Dalam Pesta bunga dan buah, terdapat beberapa kegiatan yang umumnya dilakukan seperti Pawai yang diikuti oleh kontingen Kecamatan, Pelajar, Instansi Pemerintah, Mitra Kerja dan Kelompok masyarakat yang diundang panitia. Selain itu, terdapat juga kegiatan perlombaan seperti, lomba merangkai bunga (bunga pilar), lomba merangkai bunga dipandu dengan buah dan atau sayuran, lomba karnaval kendaraan hias, lomba pawai kontingen, lomba penataan hiasan stan pameran, lomba lari marathon mini dan lain sebgainya.
Pentas Seni dan Hiburan dipersiapkan dan dilaksanakan di taman Mejuah-juah dan disuguhi berbagai hiburan yang sudah mengakar pada budaya Karo seperti Tarian (landek), Ndikkar, atraksi Gundala-gundala, hiburan lagu pop Karo dan berbagai Atraksi Seni Panggung setiap harinya selama kegiatan berlangsung yang pelaksanaanya diselingi dengan kegiatan lomba.
Kegiatan pameran juga dilakukan, pameran ini berisi potensi dan Produk Unggulan Daerah, Pameran Produk dan Pelayanan Mitra Kerja dan Dunia usaha, dlsb.
Pesta Bunga dan Buah Berastagi tahun 2022 # Pada tahun 2022 ini, Pesta (Festival) Bunga dan Buah di Berastagi dilaksanakan pada tanggal 1 -3 juli 2022.
`}),e.add({id:35,href:"/coretanku/hello-world-buka-blog-lagi/",title:"Hello World! Buka Blog lagi..",description:"Seingat saya terakhir aktivitas di sini dengan memindahkan beberapa artikel teman lama (alm. Roy) dari blog sebelumnya itgeek yang sudah tidak terurus dan expired.",content:`Blog Tidak Terurus # Sudah lama tidak buka blog ini, sakin lamanya&hellip;ups saya tidak tau kata &lsquo;sakin&rsquo; ini kata baku atau tidak, yang pasti saya lupa kapan terakhir menulis sesuatu di sini, dan malas mencari tau juga. Seingat saya terakhir aktivitas di sini dengan memindahkan beberapa artikel teman lama (alm. Roy) dari blog sebelumnya itgeek yang sudah tidak terurus dan expired. Dari sekian banyak blog yang sebelumnya saya punya, nasibnya sama persis dengan ini, terbengkalai. Trus,..apa cerita, kok tiba-tiba coret sesuatu?
Rencana Migrasi # Hari ini bisa teringat buka blog karena istri saya yang rada ngambek dengan membuat status di wa-nya tentang konten yang sudah berganti di blog ini, intinya sih si sayang 😀 (begitu biasanya kami saling panggil) mencari foto-foto kami yang dulunya berada di blog ini. Saya mau jelaskan juga nggak akan nyambung karena sifatnya teknis dan saya juga yang teledor lupa nyimpan backup file xml blog. Saya awalnya gunakan domain kaban.my.id sebagai website undangan pernikahan, jadi desain khusus untuk foto-foto prewedding dan informasi mengenai acara pernikahan.
Maksud di hati nantinya di pindahkan ke subdomain sebagai arsip, eh&hellip;malah saya lupa simpan di mana file backup templatenya 😔, padahal tinggal di restore seharusnya, masa iya buat ulang?!. Yah..begitulah ceritanya,..nanti bakal saya buat posting ulang lah, biar ada pengingat tentang hari spesial kami, lagian penting juga untuk arsip.
Penting kok nggak di segerakan coi?!😡
bentarrr&hellip;masih ada hal lain yang harus di selesaikan secepat mungkin, paling tidak postingan inilah harus di publish sesegera mungkin.
Ngeblog lagi # Wokeh, lompat cerita&hellip;kembali ke blog. Blog lama yg menggunakan wordpress menjadi PR tersendiri untuk memindahkan semua artikel, dipindahkan secara manual kan nggak kerjaan, kalau langsung di generate hasilnya nggak rapi, harus di manualkan juga di beberapa artikel, kan serba salah, butuh waktu juga.
Pengennya sih kemarin sekalian ngeblog dengan menggunakan Hugo (salah satu framework Golang) dan menggunakan github sebagai tempat hosting file Sekarang sudah menggunakan Hugo, malah nggak kesampaian hingga sekarang. Asu-dahlah, manfaatkan yang ada aja, paling tidak ada tempat untuk coret-coret.
Mudah-mudahan blog ini tidak terbengkalai lagi. Saya janji bakal update rutin, jika tidak bisa, maka kedepannya akan saya buat lagi postingan seperti ini yang diakhiri kata janji lagi untuk update.🤬 Terlaluuu!
`}),e.add({id:36,href:"/html/tutorial/heading/",title:"Heading HTML",description:"HTML Headings adalah judul/sub-judul yang ingin ditampilkan dalam halaman website HTML",content:`HTML Headings # Apa Itu HTML Headings ? # HTML Headings adalah judul/sub-judul yang ingin ditampilkan dalam halaman website HTML
HTML Headings didefinisikan dengan &lt;h1&gt; hingga &lt;h6&gt;, contohnya:
Dalam Bentuk Tulisan
Heading 1 # Heading 2 # Heading 3 # Heading 4 # Heading 5 # Heading 6 # Dalam Bentuk Code
&lt;h1&gt;Heading 1&lt;/h1&gt; &lt;h2&gt;Heading 2&lt;/h2&gt; &lt;h3&gt;Heading 3&lt;/h3&gt; &lt;h4&gt;Heading 4&lt;/h4&gt; &lt;h5&gt;Heading 5&lt;/h5&gt; &lt;h6&gt;Heading 6&lt;/h6&gt; Urutan Penulisan Heading # Apakah boleh menulis judul yang tidak urut?
Maksudnya.. seperti menggunakan &lt;h6&gt; untuk judul awal, lalu berikutnya &lt;h4&gt; untuk sub judul.
Ini boleh-boleh saja, tapi kurang bagus untuk SEO.
Penulisan judul yang bagus adalah judul yang mengikuti levelnya.
Judul &lt;h1&gt; pada level pertama, &lt;h2&gt;pada level ke-2, dan seterusnya.
`}),e.add({id:37,href:"/coretanku/pernikahan-dan-pesta-adat-aro-roberto-kaban-dan-shella-sari-keliat-2021/",title:"Pernikahan dan Pesta adat Karo: Roberto Kaban dan Shella Sari Keliat 2021",description:"Lokasi pernikahan awalnya akan dilaksanakan di rumah orang tua istri, tetapi beralih tempat ke Losd Pekan Minggu Desa Suka Raya, kecamatan Pancur Batu, Deli Serdang, karena dekat dengan rumah istri dan tersedia tempat yang lebih luas untuk acara resepsi pada malam harinya.",content:`Pernikahan Roberto Kaban dan Shella Sari Keliat # Cerita punya cerita, sebenarnya istri saya bisa dibilang masih keponakan kalau secara adat suku Karo, karena mamak-nya (orang tua) perempuan semarga dengan saya. Dan juga merupakan teman kuliah dari adik perempuan saya yang paling kecil. Awal perkenalan kami bisa di bilang sudah lama, sekitar 4 tahun lebih, dan selama belum menjadi istri, saya selalu dipanggil Mama (paman). Tapi itulah dia, namanya jodoh dan kami saling percaya untuk memulai rumah tangga, maka terjadilah hubungan pernikahan ini.
Saya dan istri sama-sama suku Karo dan dalam suku Karo, sebelum menuju ke tahap pernikahan, ada beberapa hal yang harus kita lewati lebih dahulu. Bisa di bilang, tidak bisa hanya sebatas saling suka, bawa keluarga, dan langsung atur waktu perikahan, tetapi terdapat tahapan-tahapan yang harus kita lewati.
Berdasarkan pengalaman saya yang kebetulan juga tidak terlalu paham akan adat, awalnya itu dimulai dari kesepakatan kita (saya dan istri) kemudian istri menyampaikan ke keluarganya akan niat kami untuk berumah tangga. Selanjutnya diaturlah waktu pertemuan antar keluarga, saya beserta keluarga yang mewakili, terdapat bapak dan saudara (senina) yang akan datang langsung (bersilaturahmi) untuk menyampaikan niat ke keluarga calon istri.
Setelah pertemuan pertama, maka akan dilanjutkan lagi pada pertemuan kedua yang mempertemukan antar Anak Beru kedua belah pihak (apa anak beru ini di suku Karo, akan saya bahas di tulisan lain). Mulai dari tahap ini sebenarnya tidak ada komunikasi langsung antara saya dan istri, beserta keluarga dalam lanjutan pelaksanaan pernikahan, semua akan di perantarai oleh Anak beru kedua belah pihak. Pertemuan antar Anak beru ini akan membahas tentang kelanjutan niat yang sudah disampaikan sebelumnya. Disini juga akan ditentukan tanggal untuk pelaksanaan kegiatan Mbaba belo selambar.
Mbaba belo selambar ini adalah proses mengikat hubungan antara laki-laki dan perempuan, disini sudah dipertemuakan keluarga pihak laki-laki dan perempuan (dalam cakupan yang lebih besar) dan sudah dibahas akan hari dan tanggal pesta pernikahan (umumnya dalam waktu sebulan kedepan), bentuk pesta adat (skala besar, kecil atau sedang), jumlah undangan, dan lain sebagainya. Dengan pelaksanaan Mbaba belo selambar sebenarnya sudah sah hubungan sebuah pasangan karena sudah ada pengakuan dari keluarga kedua belah pihak.
Jadi bisa saja suatu pernikahan dalam suku Karo dianggap sah secara adat, walau hanya sebatas Mbaba belo selambar, tanpa melanjutkan ke kegiatan pesta adat (nggalari utang adat).
Kami kebetulan kemarin ingin menyelesaikan sampai pesta adat karena tidak mau belakangan juga jadi &lsquo;kerjaan&rsquo; untuk menyelesaikan Pesta adat. Dalam suku Karo, ketika Kita belum menyelesaikan Utang adat, maka Anak kita ketika mau menikah juga nanti tidak dapat membuat pesta Adat (harus kita di selesaikan terlebih dahulu).
Lokasi dan waktu Pernikahan # Lokasi pernikahan awalnya akan dilaksanakan di rumah orang tua istri, tetapi beralih tempat ke Losd Pekan Minggu Desa Suka Raya, kecamatan Pancur Batu, Deli Serdang, karena dekat dengan rumah istri dan tersedia tempat yang lebih luas untuk acara resepsi pada malam harinya. Akad nikah kami dilaksanakan pada tanggal 12 Februari 2021, dimulai sekitar jam 10.30, dan belangsung lancar sesuai yang direncanakan walaupun saya salah dalam pengucapan sekali (diulang) saat hijab kabul 😄.
Lokasi dan waktu Pesta adat Karo # Pesta pernikahan secara adat Karo dilaksanakan di tetap Losd Pekan Minggu, pada 13 Februari 2021, dimulai kurang lebih dari jam 09.00 s/d jam 17.00
Dokumentasi Preweding # Saya sebenarnya orang yang tidak terlalu suka befoto ria, tapi desakan istri dan untuk mengabadikan momen pernikahan ya dilakukan juga foto-foto untuk pernikahan, sekalian agar fotonya juga ditempatkan pada undangan.
Fotografer waktu itu adalah mahasiswa saya yang bernama Anwar (Afphotographymdn), yang kebetulan memiliki profesi sebagai fotografer.
Berikut ini beberapa foto-foto kami:
Foto 1 Foto 2 Foto 3 Foto 4 Foto 5 Dokumentasi Undangan Pernikahan # Undangan awalnya di desain oleh mahasiswa saya yang bernama Amir Nasution, tetapi karena waktu yang mepet dan butuh cepat maka diselesaikan oleh teman saya waktu kuliah D3, Raden Andi Setiawan (Dengrafis.com).
Berikut ini undangan pesta pernikahan Kami:
Foto undangan tampak dalam Foto Undangan tampak depan Dokumentasi Pelaksanaan Pesta Adat Karo # Foto Saya dengan Istri (1) Foto Saya dengan Istri (2) Foto Saya dengan Istri (3) Foto Saya dengan Istri (4) Foto dengan Kedua Orang Tua Saya Foto dengan Kedua Orang Tua Istri Saya Foto Keluarga Saya dan Istri `}),e.add({id:38,href:"/perintah-dasar-linux/",title:"Perintah dasar Linux",description:"Linux adalah keluarga sistem operasi turunan Unix yang bersifat _open-source_ dan didasarkan pada Linux Kernel. Terdapat berbagai distribusi (Distro) linux yang populer seperti Ubuntu, Fedora, Mint, Debian, dan lain-lain. Berikut ini perintah dasar dalam Linux.",content:`Sepintas tentang Linux # Linux adalah keluarga sistem operasi turunan Unix yang bersifat open-source dan didasarkan pada Linux Kernel. Terdapat berbagai distribusi (Distro) linux yang populer seperti Ubuntu, Fedora, Mint, Debian, dan lain-lain.
Sejak pertama kali dirilis pada tahun 1991, popularitas Linux terus meroket karena sifatnya yang open-source. User bebas memodifikasi Linux dan mendistribusikannya dengan memakai namanya sendiri.
Ketika mengoperasikan Linux, kita dapat menggunakan shell yang merupakan interface yang menyediakan akses ke layanan sistem operasi. Penggunaan command-line interface (CLI) sangat disarankan karena lebih powerful dan efektif. Task atau tugas yang membutuhkan proses dengan banyak langkah melalui GUI dapat dilakukan hanya dalam waktu sekian detik dengan mengetikkan command atau perintah ke CLI.
Jadi, ketika hendak menggunakan Linux, kita sebaiknya tahu perintah dasar Linux. Di artikel ini, kita akan mempelajari perintah Linux yang paling mendasar.
Perintah Dasar Linux # Sebelum menjabarkan perintah dasar sistem operasi Linux, Kita harus membuka command line terlebih dulu.
Berikut daftar command dasar Linux:
Perintah pwd # Perintah pwd (Print Working Directory) berfungsi untuk mencari path dari direktori (folder) yang Anda gunakan saat ini. Perintah ini akan mengembalikan path yang absolut (penuh), yang pada dasarnya merupakan path semua direktori yang diawali dengan garis miring depan (/). Contoh dari path absolut adalah /home/username.
Perintah cd # Untuk pindah direktori gunakan perintah cd (change direktory). Perintah ini harus disertakan nama direktori yang dituju beserta lokasi/path.
Contohnya, saat ini Kita sedang berada di direktori /home/username/Documents dan ingin membuka direktori Photos yang berada di direktori Documents. Untuk melakukannya, kita mengetikkan cd Photos
Contoh lainnya, sekarang kita sedang berada di direktori /home/username/Documents/Photos, kemudian ingin berpindah ke direktori /home/username/Documents/Movies maka kita dapat mealukannya dengan mengetikkan path secara langsung, cd /home/username/Documents/Movies
Alternatif lain, kita dapat berpindah direktori dengan cara berikut:
cd .. (dengan dua tanda titik) untuk memindahkan satu direktori ke atas.
cd- (dengan tanda penghubung) untuk berpindah ke direktori sebelumnya.
Perintah ls # Perintah ls (lists) digunakan untuk untuk melihat konten atau isi dari direktori. Secara default, command ini akan menampilkan isi dari direktori yang Anda gunakan saat ini. Sebgai contoh, kita sedang berada pada direktori /home/username/Documents kemudian kita ketikkan ls maka akan ditampilkan isi (file dan direktori) yang ada pada direktori kita berada.
Jika ingin melihat isi direktori lain, ketik ls, disusul dengan path direktori. Contoh, ketik ls /home/username/Downloads untuk melihat isi direktori /home/username/Downloads.
Untuk menampilkan file yang tersembunyi dalam direktori dapat menggunakan ls -a Untuk menampilkan file dan direktori secara detail beserta hak akses, ukuran dan pemilik (owner) dengan perintah ls -la
Perintah cat # cat (concatenate) perintah untuk membuat daftar konten atau isi file pada standard output (sdout). Untuk menjalankan perintah ini, ketik cat yang kemudian diikuti dengan nama dan ekstensi file.
Sebagai contoh, kita ingin membuat file baru maka dapat menggunakan perintah: cat &gt; biodata.txt kemudian enter akan menghasilkan sebuah file baru dengan nama biodata.txt ketikkan sembarang kalimat dan tekan tombol enter selanjutnya control + c untuk menyimpan.
Menggabungkan isi file dapat menggunakan perintah cat file1 file2 &gt; file3 artinya kita menggabungkan isi file1 dan file2 kedalam file baru yang bernama file3
Perintah cp # Perintah cp (copy) untuk menyalin file dari direktori saat ini ke direktori yang berbeda. Contohnya, cp biodata.txt /home/username/Documents untuk copy file biodata.txt dari direktori saat ini ke direktori /home/username/Documents.
contoh selanjutnya, kita copy file dari direktori lain (bukan direktori aktif kita sekarang) ke direktori lain cp /home/username/Documents/fotoku.jpg /home/username/Documents/Photos artinya, kita copy file fotoku.jpg dari direktori /home/username/Documents/ ke direktori /home/username/Documents/Photos
Perintah mv # Perintah mv (move) digunakan untuk memindahkan (mengubah) file atau direktori. Penggunaan perintah mv sama dengan penggunaan perintah cp .
Contoh penggunaan, mv /home/username/Documents/fotoku.jpg /home/username/Documents/Photos artinya, kita memindahkan file fotoku.jpg dari direktori /home/username/Documents/ ke direktori /home/username/Documents/Photos .
contoh lain, mv file1.txt file2.txt berarti kita mengganti nama file file1.txt menjadi file2.txt
Perintah mkdir # Perintah mkdir (make directory) digunakan untuk membuat direktori. Contoh penggunaan, mkdir foto akan membuat sebuah direktori (folder) dengan nama foto pada direktori yang sedang aktif (direktori kita mengetikkan perintah).
contoh lain, mkdir /home/username/Documents/foto akan membuat sebuah direktori dengan nama foto pada direktori /home/username/Documents/
Perintah rmdir # Perintah rmdir (remove directory), digunakan untuk menghapus direktori kosong. contoh penggunaan, rmdir foto akan menghapus direktori foto pada direktori yang sedang aktif (direktori kita mengetikkan perintah).
contoh lain, rmdir /home/username/Documents/foto akan menghapus direktori foto pada direktori /home/username/Documents/
perintah rm # Perintah rm (remove) berfungsi untuk menghapus direktori beserta isinya. contoh penggunaan, rm foto akan menghapus direktori foto beserta isinya pada direktori yang sedang aktif (direktori kita mengetikkan perintah).
contoh lain, rmdir /home/username/Documents/foto akan menghapus direktori foto beserta isinya pada direktori /home/username/Documents/
untuk menghapus file, rm fotoku.jpg berarti kita menghapus file yang bernama fotoku.jpg
Hati-hati aat menggunakan perintah rm, karena file yang sudah dihapus tidak dapat dikembalikan lagi.😁
Perintah touch # perintah touch digunakan untuk membuat file baru yang kosong melalui baris perintah Linux. Sebagai contoh, touch /home/username/Documents/biodataku.html untuk membuat file biodataku.html di direktori /home/username/Documents/
Perintah locate # Perintah locate digunakan untuk mencari file, fungsinya sama seperti pencarian di Windows. Apabila dipasangkan dengan argumen -i , perintah ini akan bersifat case-insensitive sehingga file dapat dicari meski kita tidak mengingat namanya dengan tepat.
Untuk mencari file yang memuat dua atau lebih dari dua kata, gunakan tanda bintang (*). Misalnya, perintah locate -i tugas*kampus akan mencari file yang pada namanya termuat kata &ldquo;tugas&rdquo; dan “kampus”, dengan mengabaikan penulisan nama file huruf besar atau kecil.
Perintah find # pPrintah find juga dapat digunakan untuk mencari file dan direktori. Bedanya, perintah find lebih ditujukan untuk mencari file yang berlokasi di dalam direktori yang diberikan.
Contoh, perintah find /home/ -name catatan.txt akan mencari file bernama catatan.txt di dalam direktori home dan subdirektorinya.
Perintah grep # Perintah grep untuk melakukan pencarian di semua teks di dalam sebuah file.
Sebagai contoh, grep medan catatanku.txt akan mencari kata medan di file catatanku.txt. Baris yang memuat kata yang dicari akan ditampilkan seluruhnya.
Perintah sudo # Perintah sudo (SuperUser Do) berfungsi untuk menjalankan task yang memerlukan hak akses (permission) administrative atau root.
Perintah df # Perintah df digunakan untuk mendapatkan laporan tentang penggunaan disk space sistem. Laporan yang ditampilkan dalam bentuk persentase dan satuan KB. Bila ingin melihat laporan berupa satuan megabyte, ketik df -m.
Perintah du # Perintah du merupakan perintah dasar Linux yang berfungsi untuk mengecek seberapa banyak space yang digunakan oleh suatu file atau direktori. Hanya saja, untuk format ringkasan, penggunaan disk yang ditampilkan berupa nomor blok disk alih-alih format ukuran pada umumnya. Jika ingin melihat jumlah penggunaan disk dalam satuan byte, kilobyte, dan megabyte, tambahkan argumen -h ke baris perintah.
Perintah head # Perintah head digunakan untuk melihat baris pertama dari semua file teks. Secara default, perintah ini akan menampilkan sepuluh baris pertama. Namun, jumlah baris tersebut dapat diubah sesuai keinginan kita. Misalnya, jika hanya ingin menampilkan lima baris pertama, ketik head -n 5 namafile.ext
Perintah tail # Perintah tail memiliki fungsi yang sama dengan perintah head. Hanya saja, perintah tail akan menampilkan sepuluh baris terakhir dari suatu file. Misalnya, tail -n namafile.ext.
Perintah diff # Perintah diff digunakan untuk membandingkan konten atau isi dua file berdasarkan baris demi baris. Setelah menganalisis file, perintah ini akan menghasilkan output berupa line atau baris yang tidak cocok. Programmer sering menggunakan perintah ini ketika membuat perubahan program.
contoh penggunaan diff file1.ext file2.ext.
Perintah tar # Perintah tar digunakan untuk mengarsipkan banyak file ke dalam format file arsip tar
Perintah chmod # Perintah chmod digunakan untuk membaca, menulis, dan menjalankan permission (hak akses) file dan direktori.
Perintah jobs # Perintah jobs akan menampilkan semua jobs saat ini beserta dengan statusnya. Pada dasarnya job merupakan proses yang dimulai oleh shell.
Perintah kill # Perintah kill akan mengirimkan sinyal tertentu ke aplikasi yang bermasalah dan memberi instruksi kepada aplikasi tersebut untuk berakhir atau mati dengan sendirinya.
Totalnya ada 64 sinyal yang dapat digunakan, tapi biasanya orang-orang hanya menggunakan dua sinyal, yakni:
SIGTERM (15) – meminta program untuk berhenti bekerja dan memberikannya waktu untuk menyimpan semua progress. Jika tidak ada sinyal khusus yang ditentukan ketika memasukkan perintah kill, sinyal inilah yang akan digunakan.
SIGKILL (9) – memaksa program untuk berhenti bekerja saat itu juga. Progress yang tidak tersimpan akan hilang.
Selain sinyal, Kita juga harus tahu nomor identifikasi proses (process identification number – PID) dari sebuah program yang hendak dihentikan (kill). Jika tidak tahu PID-nya, Kita bisa menjalankan perintah ps ux.
Setelah mengetahui sinyal yang ingin digunakan dan PID program, ketikkan kill [signal option] PID.
perintah ping # Perintah ping berfungsi untuk mengecek status konektivitas ke server. Misalnya, ping google.com, command akan mengecek apakah sudah terhubung ke Google atau belum dan juga mengukur waktu respons.
Perintah wget # Perintah wget digunakan mengunduh file dari internet dengan bantuan command wget. Anda hanya perlu mengetikkan wget yang diikuti dengan link unduhan.
Perintah uname # Perintah uname (Unix Name) digunakan untuk menampilkan mencetak informasi lengkap mengenai sistem Linux, misalnya nama mesin, sistem operasi, kernel, dan lain-lain.
Perintah top # Sebagai terminal yang setara dengan Task Manager di Windows, perintah top akan menampilkan daftar proses yang sedang berlangsung dan seberapa banyak ruang CPU yang digunakan oleh tiap proses tersebut. Melakukan pengawasan terhadap penggunaan resource sistem sangatlah disarankan, terutama ketika Anda harus mencari tahu mana proses yang perlu dimatikan karena terlalu banyak menggunakan resource.
Perintah history # Perintah history untuk mengecek kembali (review) pernah yang sudah digunakan sebelumnya.
Perintah man # Perintah man digunakan untuk menampilkan manual/ bantuan perintah pada linux. sebgai contoh man tail akan menampilkan opsi yang dapat digunakan pada perintah tail.
perintah echo # Perintah echo dasar Linux ini digunakan untuk memindahkan beberapa data ke dalam satu file. Misalnya, jika ingin menambahkan teks, Hello world ke file yang bernama hello.txt, yang perlu diketik adalah echo Hello, my name is John &gt;&gt; hello.txt
perintah zip , unzip # Gunakan perintah zip untuk compress file ke arsip zip dan perintah unzip untuk mengekstrak file zip ke arsip zip.
perintah hostname # Perintah hostname digunakan untuk mengetahui nama host/network. Dengan menambahkan -I di akhir perintah, alamat IP jaringan akan ditampilkan.
Perintah useradd, userdel # useradd digunakan untuk membuat user baru, sedangkan passwd untuk menambahkan password ke akun user tersebut. Untuk menambahkan user bernama alfa, misalnya, cukup ketikkan useradd alfa passwd 12345678 untuk menambahkan passwordnya.
Cara menghapus user sama dengan menambahkan user. Untuk menghapus akun user, ketik userdel UserName.
`}),e.add({id:39,href:"/mengenal-cli-command-line-interface/",title:"Mengenal Cli Command Line Interface",description:"Kita mungkin sering mendengar istilah CLI dalam hal yang bergubungan dengan dunia IT, khususnya di bidang programmer. Apa sebenarnya CLI ini? CLI merupakan singkatan dari Command Line Interface.",content:`Pengantar # Kita mungkin sering mendengar istilah CLI dalam hal yang bergubungan dengan dunia IT, khususnya di bidang programmer. Apa sebenarnya CLI ini? CLI merupakan singkatan dari Command Line Interface. CLI sebagai media untuk memberikan instruksi/perintah pada komputer dan perangkat lunak (software) yang ada di dalamnya. Pada CLI dapat diberikan berupa perintah dalam bentuk teks yang fungsinya untuk mengerjakan tugas (task) tertentu.
Dengan berkembangnya perangkat lunak yg sifatnya GUI (Graphic User Interface) membuat banyak orang kurang familiar dengan CLI. Bahkan beberapa user/pengguna pemula takut ataupun bisa juga malas menggunakan CLI. Mereka merasa program ini lebih cocok bagi user profesional dan yang sudah berpengalaman. Padahal, sebenarnya tidak. Saya sendiri terkadang kebingungan untuk menggunakan Sistem operasi terbaru, khususnya windows karena perubahan tampilan dan fitur, tetapi ketika menggunakan CLI dengan Command prompt windows maka akan lebih cepat dalam melakukan pekerjaan.
Sebagai contoh, saya mulai menggunakan windows di versi Windows 98, kemudian beralih ke Windows XP dan terakhir adalah Windows 7, semua tampilan versi windows tersebut tidak terlalu jauh berbeda. Kemudian ketika menggunakan Windows 8 atau Windows 10 versi sekarang, saya malah agak kesulitan untuk sekedar masuk ke menu Control panel, atau sekedar untuk buka Ms. Excel dari GUI Windows. Tetapi kalau sudah terbiasa dengan CLI, maka tinggal buka Command prompt (Winkey + R) dan ketikkan control kemudian enter, sudah masuk ke Control panel Windows, atau ketikkan excel, dan enter sudah membuka aplikasi Ms. Excel.
Meskipun demikian, semua terserah pada diri anda dan sesuaikan dengan kubutuhan. Kita lanjut, pada artikel kali ini kita akan membahas sejarah CLI beserta funginya.
Sejarah CLI # CLI pertama kali digunakan secara luas sekitar tahun 1960-an dan ketika itu, perangkat input yang digunakan pada komputer hanyalah keyboard dan layar untuk menampilkan output. Komputer juga masih dapat menampilkan output dalam bentuk teks. Sistem operasi seperti Microsoft DOS (Disk Operating System) menggunakan CLI sebagai interface standar untuk user.
Untuk melakukan sejumlah tugas tertentu, user harus mengetikkan perintah (command) di CLI yang pada saat itu merupakan satu-satunya cara untuk dapat berkomunikasi dengan komputer.
Setelah perintah diketik, hasil yang ditampilkan akan berupa informasi berbasis teks atau tindakan tertentu yang dijalankan komputer. Jadi, kuncinya adalah jangan sampai mengetikkan perintah yang salah. Apabila salah mengetik perintah, bisa saja kita justru menghapus file yang tidak seharusnya dihapus, atau menutup program yang sedang berjalan.
Setelah bertahun-tahun hanya menggunakan keyboard dengan risiko kesalahan ketik perintah yang cukup tinggi, akhirnya mouse diciptakan. Metode point-and-click pada mouse menjadi cara baru untuk berkomunikasi dengan komputer. Cara ini dirasa lebih aman dan mudah bagi pengguna komputer karena mereka tidak harus menggunakan CLI.
Sistem operasi mulai mengembangkan cara komputasi yang lebih menarik dengan GUI (Graphical User Interface). Konsep GUI banyak digunakan dalam pengembangan perangkat lunak, selain lebih familiar pada user, dukungan teknologi perangkat input juga sudah memungkinkan interaksi dengan layar sentuh (Touch Screen).
Mengapa menggunakan CLI # Seperti yang sudah dijelaskan sebelumnya, GUI dikembangkan setelah mouse ditemukan dan menjadi perangkat input baru untuk mengoperasikan komputer. GUI memiliki tampilan yang menarik serta mudah dipahami. Meskipun demikian, bagi orang yang bergelut di bidang IT, terdapat beberapa alasan CLI dinilai lebih efektif dibanding GUI, diantaranya sebgai berikut:
1. Menggunakan Lebih Sedikit Resource # Sudah jadi rahasia umum bahwa program berbasis teks hanya menggunakan sedikit resource di komputer. Jadi, dengan CLI, Kita dapat menjalankan banyak task dengan penggunaan resource yang minim.
2. Cepat dan akurat # Kita dapat menggunakan perintah tertentu untuk menuju file atau folder, ataupun aplikasi yang lebih spesifik. Tidak akan ada kendala, asalkan perintah yang diketik benar.
3. Mudah untuk menjalankan task secara berulang # Sistem operasi tidak menyediakan semua menu dan tombol yang diperlukan untuk menjalankan task demi alasan keamanan. Akibatnya, sulit jika kita harus menjalankan tugas yang berulang. CLI dapat mengatasinya. Misalkan, untuk mengelola ratusan file dalam sebuah folder, Kita hanya perlu menjalankan satu perintah yang kemudian bisa diotomatiskan untuk melakukan task yang sama.
4. Canggih dan efektif # Sebagian besar Sistem Operasi tidak mengizinkan user konfigurasi proses inti sistem dengan level user default, kita harus menggunakan akses root atau administrator. Windows memiliki sistem keamanan, dan MacOS memiliki System Integrity Protection yang membatasi Anda melakukan task yang dilindungi sistem. Dengan CLI kita dapat mengelola sistem sepenuhnya tanpa dibatasi larangan tersebut.
Penutup # `}),e.add({id:40,href:"/10-pertanyaan-mendasar-tentang-blockchain-yang-anda-harus-tahu-jawabannya/",title:"10 Pertanyaan Mendasar Tentang Blockchain Yang Anda Harus Tahu Jawabannya",description:"Blockchain adalah serangkaian blok yang berisi informasi. Blok-blok ini saling terkait dan dilindungi keunikannya dengan hash (seperti tanda tangan digital yang unik, bisa diumpamakan juga seperti sidik jari yang tidak mungkin sama di antara satu dengan lainnya).",content:`Apa itu blockchain? # Blockchain adalah serangkaian blok yang berisi informasi. Blok-blok ini saling terkait dan dilindungi keunikannya dengan hash (seperti tanda tangan digital yang unik, bisa diumpamakan juga seperti sidik jari yang tidak mungkin sama di antara satu dengan lainnya). Setiap blok berisi informasi. Apabila ada yang mengubah satu blok, maka ia juga harus mengubah serangkaian blok lainnya sehingga kecurangan atau pencurian data menjadi sangat mungkin untuk ditiadakan. Ide siapakah blockchain ini? Teknologi blockchain pertama kali dideskripsikan pada tahun 1991 oleh sekelompok peneliti yang membuat sebuah teknologi seperti digital stampstime yang tidak dapat diubah-ubah oleh siapa pun. Namun, teknologi tersebut baru berjalan ketika diadopsi oleh Satoshi Nakamoto untuk menciptakan kriptocurrency untuk bitcoin padatahun 2009.
Bagaimana prinsip kerja teknologi blockchain ini? # Bayangkan bila ada sekelompok orang yang berkumpul dan memutuskan untuk bermain arisan. Mereka mengumpulkan uang dengan jumlah tertentu dan untuk ditarik sesuai jadwal atau ketentuan. Lalu, Anda memutuskan pula untuk bergabung bersama mereka bermain arisan. Kepada siapa Anda harus memberikan kepercayaan Anda? Tentu kepada semua orang di dalam kelompok itu bukan? Dan, apabila ada kemungkinan Anda dicurangi, maka yang harus melakukan kecurangan itu adalah satu kelompok itu, dengan kata lain, tidak mungkin curang jika sendirian, karena setiap tindakan yang dilakukan akan diketahui satu sama lain. Maka, anggaplah orang-orang yang tergolong dalam kelompok tadi adalah blok-blok yang ada dalam sistem blockchain. Semua kegiatan berbasis pada kepercayaan satu sama lain.
Problem apa yang dapat diselesaikan dengan teknologi ini? # Yang pertama kali mengaplikasikan blockchain adalah perbankan. Mereka tahu bahwa teknologi yang tidak membutuhkan “pihak ketiga” ini pada akhirnya bisa mengancam peran Bank (cryptocurrency begitu aman dan tidak membutuhkan bank yang notabene adalah pihak ketiga itu). Selain finansial, isu pertanian, kesehatan, pendidikan juga dapat dibereskan dengan teknologi ini. Slain itu, teknologi ini juga dapat dipakai di bidang kesenian karena dapat melindungi pekerja seni dari plagiasi karya.
Keunggulan Blockchain. # Ketika internet pertama kali muncul di tahun 90-an, teknologi ini berperan dalam setiap kehidupan manusia. Di segala bidang internet digunakan. Namun, ada dua hal yang tidak mampu dijamin oleh interner; kepercayaan (trust) dan keterlibatan pihak ketiga. Pada blockchain, kepercayaan adalah landasan utamanya, dan pihak ketiga memang adalah yang paling dihindari dari sistem ini. Blockchain menjawab tantangan yang tak mampu dipecahkan oleh internet dewasa ini.
Bahasa Pemrograman apa saja yang dapat digunakan untuk membangun blockchain? # Blockchain dapat dibangun di atas berbagai bahasa yang lazim digunakan di bidang komputer, seperti Javascript, Phyton, dan lain sebagainya.
Apakah hubungan antara blockchain dengan bitcoin? # Blockchain adalah teknologi di belakang bitcoin untuk membangun sebuah sistem transaksi finansial dengan menggunakan kritografi untuk membuat cryptocurrency. Sehingga, ketika bitcoin booming, maka blockchain pun ikut “terlihat”. Namun, blockchain dapat dikembangkan melampaui apa yang bisa dilakukan dengan bitcoin. Tidak hanya dapat dimanfaatkan di satu bidang, tetapi banyak aspek kehidupan kita.
Bagaimana prospek blockchain di masa yang akan datang? # Blockchain adalah teknologi yang berkembang dengan sangat progresif. Terdapat lima negara (dan kemungkinan jumlah ini akan terus bertambah) yang menerapkan teknologi ini.
Amerika Serikat, 32% transaksi di negara ini menggunakan bitcoin (merupakan negara dengan tingkat terbanyak menggunakan bitcoin di dunia).
Singapore, Pemerintahnya sangat terbuka dan menerima transaksi dengan bitcoin, walaupun dengan tetap berhati-hati akan ancaman dalam bidang perbankan dengan penerapan teknologi ini.
Sierra Leon, Sebuah perusahaan bernama Agora telah membantu untuk penghitungan pendapatan negara ini dengan menggunakan teknologi blockchain.
Jepang, sejak tahun 2018, Jepang telah membuka lebar masukkan teknologi blockchain (transaksi dengan bitcoin) di bidang keuangan mereka.
Uni Emirates Arab. Sejak tahun ini, Uni Emirates Arab berencana untuk melakukan 50% transaksi pemerintah dengan sistem blockchain dan melegalkan penggunaaan bitcoin. Yang paling terkini adalah kabarnya pemerintah Uni Emirates Arab juga akan meluncurkan blockchain strategi 2021 yang memfokuskan pada empat landasan utama, yaitu kebahagiaan rakyat, efisiensi pemerintah, legislasi yang maju, dan global entrepreneurship.
Apa kendala terbesar masuknya teknologi blockchain (bitcoin) di sebuah negara? # Kendala terbesarnya adalah kebijakan pemerintah berkaitan dengan kekhawatiran akan jaminan perlindungan terhadap konsumen karena tidak adanya regulasi tentang blockchain. Seperti yang diketahui, blockchain sistemnya adalah desentralisasi sehingga pemerintah tidak punya kendali terhadap kegiatan apa pun yang terjadi di sana. Ada kecemasan bahwa teknologi dapat memudahkan pencucian uang yang menjadi momok setiap negara.
Bagaimana kemungkinan Indonesia menerapkan seratus persen blockchain di kemudian hari? # Pemerintah Indonesia termasuk salah satu negara yang belum menerapkan teknologi dengan masif, walaupun kemungkinan ke arah sana sangat terbuka. Persiapan yang dilakukan antara lain menetapkan regulasi blockchain dan menyusun aturan sebagai payung yang menyangga penerapan teknologi ini. Persiapan lainnya adalah dengan merancang tata kelola, manajemen resiko, dan standarisasi operasional yang kuat yang bertujuan untuk menghindari fragmentasi pasar.
Roy Sari Milda Siregar, ST, M.Kom
`}),e.add({id:41,href:"/blockchain-solusi-resiko-keterlibatan-pihak-ketiga-yang-tidak-bertanggung-jawab/",title:"Blockchain: Solusi Resiko Keterlibatan Pihak Ketiga yang Tidak Bertanggung Jawab",description:"Tidak ada satu pun transaksi dalam kehidupan manusia modern yang berhubungan dengan internet yang benar-benar terlepas dari pihak ketiga. Dalam sistem blockchain, pihak ketiga ini disebut “services” (yang memberikan layanan).",content:`Pengantar # Begitu banyak kegiatan/transaksi di dalam kehidupan kita memanfaatkan pihak ketiga. Ketiga Anda menggunakan jasa bank, sistem informasi pendaftaran ke sekolah pilihan, bahkan untuk bersosialisasi di dunia maya seperti facebook. Dan, siapa pun tahu bahwa facebook pernah menjual data para user-nya dan mendapatkan keuntungan.
Tidak ada satu pun transaksi dalam kehidupan manusia modern yang berhubungan dengan internet yang benar-benar terlepas dari pihak ketiga. Dalam sistem blockchain, pihak ketiga ini disebut “services” (yang memberikan layanan), bedanya mereka diberikan aturan yang kuat dan aman yang membuat mereka hanya bisa mengakses apa yang diizinkan oleh user. Dengan kata lain, user tetap memegang otoritas tertinggi atas data mereka.
Bayangkan contoh seperti ini, ketika Anda menggunakan Facebook, Anda memberikan data juga dengan kunci sekaligus. Pihak Facebook bisa melihat data itu sebagai data tak bertuan, mereka punya datanya, tapi tidak tahu milik siapa sehingga tidak dapat menyelewengkan penggunaan data itu. Dan, suatu kali user ingin menghapus atau menarik kembali informasi yang telah diberikan, user dapat sewaktu-waktu mengubah “kontrak” atau izinnya.
Ketakutan pengguna # Ketakutan—sebetulnya yang wajar—dari user terhadap pihak ketiga umumnya adalah: Ketika tiba-tiba mereka tidak dapat dipercaya Jika tiba-tiba diserang (hacked?) dan semua data dicuri Adanya pihak ketiga kadang membuat komunikasi terhambat, mengapa tidak langsung berkomunikasi dari peer-to-peer? Otentifikasi dan validasi sangat penting, lantas bagaimana mengetahui otentifikasi dan validasinya dilakukan oleh orang yang benar atau tidak? Ketika Satoshi Nakamoto menemukan blockchain untuk diterapkan dalam bitcoin, permasalahan di atas terjawab sudah. Bitcoin menggunakan kiptocurrency dengan desentralisasi yang pertama di dunia. Sistem pada Bitcoin menukar dan mentransfer dengan menggunakan ledger (buku induk) yang merekam semua rincian setiap transaksi tanpa memerlukan jasa pelayanan sentral yang terpercaya sekalipun. Masing-masing pihak terlibat mendapatkan satu salinan buku besar. Untuk otentifikasi dan identifikasi, setiap transaksi akan ditandatangani secara digital oleh si pemilik dengan sebuah kunci private.
Mekanisme Konsensus # Agar semua transaksi itu dapat dipantau secara simultan, maka transaksi berulang digrupkan secara terstruktur dan disebut sebagai “block” yang dapat dibedakan dengan hash dan timestamp yang unik. Untuk mengurasi resiko pengguna yang tidak dapat dipercaya (distruted user) maka diberlakukan mekanisme konsensus, artinya setiap ada perubahan dalam buku induk akan di-update oleh konsensus/perjanjian (agreement) dari simpul-simpul mayoritas (majorities of nodes).
Proses input data baru di dalam sistem blockchain sehingga membentuk block yang baru memerlukan waktu 10 menit. Dalam arti kata, dengan detilnya pekerjaan yang dilakukan untuk dapat menghasilkan block yang baru dipastikan kecurangan data dapat disingkirkan.
Validasi Block # Beberapa langkah dalam validasi block antara lain:
Semua transaksi yang terisi di dalam block diverifikasi dengan langkah sebagai berikut: setiap transaksi sebagai output dihasilkan dari nodes penerima yang diotorisasi di dalam transaksi dengan menggunakan public key hash. Dengan kunci publik pengguna dapat memberikan data dengan tetap merahasiakan identitasnya. Mereka dikenal sebagai pseudonymous identity. Namun demikian, user tetap membutuhkan kunci private untuk mengakses kontrol mereka terhadap bitcoin (contoh kasus). Hanya user dengan kunci private yang dapat melakukan claim terhadap output dari transaksi yang mereka lakukan. Block’s hash yang sebelumnya digunakan sebagai acuan bagi pembentukan block berikutnya dan dicek dari genesis block. Akurasi dari time stamp diverifikasi Proof-or-work dari block yang dibentuk dinyatakan valid. Oleh: Roy Sari Milda Siregar, ST, M.Kom `}),e.add({id:42,href:"/mengenal-bitcoin-mata-uang-virtual/",title:"Mengenal Bitcoin Mata Uang Virtual",description:"Bitcoin adalah mata uang virtual yang dikembangkan pada tahun 2009 oleh Satoshi Nakamoto. Bitcoin sama halnya  dengan mata uang Rupiah atau Dollar. Bitcoin dikembangkan dengan idealisme bahwa mata uang yang baik tidak dikontrol oleh pemerintah atau bank sentral. ",content:`Pendahuluan # Bitcoin adalah mata uang virtual yang dikembangkan pada tahun 2009 oleh seseorang dengan nama samaran Satoshi Nakamoto. Bitcoin sama halnya dengan mata uang Rupiah atau Dollar, namun hanya tersedia di dunia digital(internet).
Bitcoin dikembangkan dengan idealisme bahwa mata uang yang baik tidak dikontrol oleh pemerintah atau bank sentral. Pemerintah dipercaya selalu dikuasai oleh orang-orang yang korup dan hanya bekerja demi keuntungan pribadi, sehingga keputusan-keputusan finansial selalu berpihak kepada konglomerat belaka.
Konsep ini menarik bagi banyak orang terutama para geek di dunia IT. Mereka mulai menginvestasikan aset mereka dalam bentuk bitcoin, sementara itu perekonomian dunia semakin labil terbukti dengan adanya krisis perbankan Amerika dan Eropa. Bitcoin dipercayai akan menjadi mata uang dan komoditas universal sehingga harga akan terus melambung tinggi.
Fitur Transaksi Anonim # Bitcoin juga memiliki fitur transaksi yang sifatnya anonim dan biaya transaksi yang sangat rendah (hampir 0). Menggunakan bitcoin, anda dapat melakukan transaksi tanpa memberikan identitas sama sekali sehingga dapat menjaga privasi anda ke level yang paling tinggi.
Mining Bitcoin # Bitcoin diciptakan dengan proses yang disebut “mining”. Para miner menggunakan komputer canggih untuk menguraikan matematika kompleks untuk menemukan block baru Bitcoin, sebagai hadiahnya si penemu akan dihadiahi sejumlah bitcoin. Hadiah per ditemukannya 1 block awalnya ada 50 BTC, sekarang 25 BTC/block, selanjutnya akan terus berkurang diiringi dengan bertambahkan sirkulasi Bitcoin. Sistem telah memastikan bahwa maksimal bitcoin yang beredar di dunia adalah 21 Juta BTC sehingga tidak akan terjadi inflasi.
Keamanan Transaksi Bitcoin # Bagaimana dengan keamanan? mungkin anda berpikir bahwa sistem bitcoin yang open source memungkinkan seorang komputer jenius dapat membobol sistem bitcoin dan menerbitkan sejumlah bitcoin untuk dirinya sendiri. Kenyataannya sistem ini telah direview oleh berbagai kalangan dan terbukti tanpa cacat. Setiap data transaksi masa lampau tersimpan di semua peer di seluruh jaringan, dan harus berurutan. Setiap transaksi baru akan diverifikasi oleh sejumlah peer, baru dinyatakan valid.
Fitur Transaksi dengan Bitcoin # Berikut ini beberapa fitur dan keuntungan menggunakan bitcoin dalam bertransaksi di internet
Transfer instant secara peer to peer. Peer-to-peer sendiri artinya Bitcoin berjalan tanpa memiliki server pusat. Server penyimpanannya bersifat desentralisasi dan terdistribusi—dibagi ke berbagai server yang dijalankan oleh setiap pengguna yang terhubung ke dalam jaringan.
Transfer ke mana saja Bitcoin bisa dikirimkan kemana saja dalam hitungan detik, kapanpun dan darimanapun yang Anda mau. Pengiriman uang dengan Bitcoin bisa terjadi hanya dengan modal sebuah smartphone dan koneksi internet.
Biaya transfer sangat kecil. Biaya pengiriman pun bisa dihilangkan sampai gratis, namun untuk mempercepat transaksi, biasanya dompet Bitcoin Anda akan memotong biaya sekitar 500 – 3,000 rupiah, tidak peduli berapa jumlah uang yang dikirimkan.
Transaksi bersifat irreversible, artinya sekali ditransfer tidak bisa dibatalkan. Bitcoin diberikan ke tangan orang lain, transaksi tidak dapat dibatalkan kecuali orang itu bersedia mengirimkan Bitcoinnya kembali;
Transaksi bitcoin bersifat pseudonymous. Semua transaksi yang pernah dilakukan sekaligus saldo Bitcoin yang dimiliki seseorang bisa kita lihat, namun kita tidak tahu siapa pemilik alamat Bitcoin tersebut bila si pemilik tidak memberitahukannya. Setiap pengguna Bitcoin sebenarnya bisa memilih apakah namanya ingin dimunculkan atau tidak, namun meskipun si pengguna ingin merahasiakan identitasnya, semua transaksinya tetap tercatat dan dapat dipantau oleh publik.
Bitcoin tidak dikontrol oleh lembaga atau pemerintah apapun. Bitcoin yang menggunakan database Blockchain tidak dikontrol oleh suatu pihak, melainkan sangat terbuka untuk umum sehingga mustahil bagi seseorang untuk memalsukan transaksi di Blockchain. Seluruh transaksi tercatat secara live, transparan, dan tersebar ke jutaan server. Mereka yang ingin mengubah atau memalsukan data transaksi Bitcoin, harus meretas jutaan server tersebut di saat yang bersamaan.
Jumlahnya terbatas Suplai Bitcoin hanya akan ada 21 juta Bitcoin di seluruh dunia. Sistem penciptaan Bitcoin yang terus berkurang setiap 4 tahun sekali ini menyerupai sistem ekonomi berdasarkan deflasi dan dengan makin terbatasnya supply bitcoin, harga bitcoin cenderung naik.
Penutup # Wokeh, demikian artikel singkatnya mengenai bitcoin. Selanjutnya mungkin anda bertanya, Bagaimana cara mendapatkan bitcoin? Bitcoin bisa didapatkan dengan cara membeli dan mining. Untuk membeli bitcoin dapat dilakukan di exchanger-exchanger seperti bitcoin.co.id (indonesia), mtgox (US &amp; Jepang), dan btcchina.com (China).
`}),e.add({id:43,href:"/blockchain-dan-dunia-pendidikan/",title:"Blockchain Dan Dunia Pendidikan",description:"Blockchain adalah teknologi matematika yang menggunakan kriptografi yang khas, timestamp, antisentralisasi alias decentralized",content:`Pengantar # Hai hai, habis ikut seminar, nih. Pembicaranya dari Spanyol miss Andrea bla bla dan banyak lagi, saya lupa kebanyakan namanya J di bawah nanti ada link seminar mereka yang kalian bisa ikuti juga ya. Tanpa perlu jauh-jauh terbang ke sana (sama, saya juga ga perlu terbang hahaha).
Kali ini blockchain yang dibahas yang masuk ke ranah pendidikan, khususnya lagi universitas. Kita tentu saja sudah sama-sama yakin bagaimana kerennya blockchain yang membuat bitcoin jadi begitu terkenal ya. Sistem yang dianggap mampu memberikan kepercayaan yang sangat tinggi di antara para penggunanya.
Blockchain dalam Dunia Pendidikan # Alkisah bahwa blockchain adalah teknologi matematika yang menggunakan kriptografi yang khas, timestamp, antisentralisasi alias decentralized (kadang-kadang lebih menyenangkan menggunakan istilah asingnya ya, saya takut kalian kurang paham apa yang saya maksudkan kalau semuanya diterjemahkan).
Teknologi ini digadang mampu memangkas sistem yang rumit di dalam dunia pendidikan dewasa ini. Bayangkan, dalam sistem informasi untuk pengelolaan data mahasiswa yang banyak digunakan saat ini, semua data mahasiswa disimpan di cloud computing dengan menggunakan misalnya dropbox, yang pada akhirnya membuat biaya untuk kuliahnya menjadi lebih tinggi. Dengan blockchain biaya ini dapat dipangkas.
Hal lain yang dapat dipangkas adalah biaya kuliah untuk mahasiswa internasional yang mendaftar di suatu kampus tertentu, mereka dapat membeli cryptocurrency di negara mereka sendiri, lalu melakukan pembayaran kuliah tanpa di-charge dengan biaya transfer yang kita tahu cukup banyak. Well, saya sudah pernah merasakannya, bagaimana transfer beberapa juta dengan ratusan ribu, biaya transfernya sama saja dan cukup tinggi karena perbedaan kurs dan kerja sama dengan pihak bank.
Dibayangkan pula, suatu saat nanti dunia pendidikan kita tidak lagi butuh formalitas kehadiran di suatu kelas yang menghadirkan fisik. Mahasiswa dapat memilih mata kuliah (lebih jauh, membuat kurikulumnya sendiri) dari berbagai kampus yang mereka kehendaki di seluruh dunia. Setiap mata kuliah dan proses yang dijalaninya disimpan dalam bentuk data di blok-blok dalam sistem blockchain. Sangat seru, bukan?
Di contoh terakhir, mahasiswa mendaftar ke sistem blockchain di satu universitas, lalu reportnya akan diedarkan kepada pemilik perusahaan yang mengkehendaki suatu saat mahasiswa ini bekerja di tempat mereka. Semua hasil belajarnya akan diketahui oleh pihak perusahaan, dikirim langsung oleh universitas. Ketika mahasiswa ini menyelesaikan perkuliahannya, perusahaan tinggal me-hire si mahasiswa karena telah memiliki bukti betapa berkualitasnya si mahasiswa. Wow, amazing!
Penutup # Demikianlah dunia pendidikan menjadi begitu mudah, murah, efektif bagi student, pendidik, dan mereka yang membutuhkan sumber daya manusia yang berkualitas.
Roy Sari Milda Siregar, S.T., M.Kom
`}),e.add({id:44,href:"/coretanku/mikie-holiday-2019-bersama-freeze-dan-ovalyn/",title:"Mikie Holiday (Mikie Funland) 2019 bersama Freeze dan Faresta",description:"Awal tahun 2019 kebetulan Freeze dan Ovalyn berkunjung ke Medan, dan meminta untuk jalan-jalan ke Mikie Holiday Funland Berastagi. Mikie Holiday Berastagi (Mikie Funland) memang menyediakan wahana permainan yang lengkap, tidak kurang dari 30-an permainan yang dapat dimainkan semua. Harga tiket masuk perorang adalah Rp. 150ribu dan sudah dapat memainkan semua permainan sepuasnya.",content:`Jalan-jalan ke Mikie Funland Berastagi # Awal tahun 2019 kebetulan Freeze dan Ovalyn berkunjung ke Medan, dan meminta untuk jalan-jalan ke Mikie Holiday Funland Berastagi. Mikie Holiday Berastagi (Mikie Funland) memang menyediakan wahana permainan yang lengkap, tidak kurang dari 30-an permainan yang dapat dimainkan semua. Harga tiket masuk perorang adalah Rp. 150ribu dan sudah dapat memainkan semua permainan sepuasnya.
Permainan di Mikie Funland juga beragam, seperti Dino Tracker, Jurassic Tree, Volcano, Flying Fish, Tsunami dan masih banyak lagi yang lainnya.
Foto bertiga di depan wahana Ovalyn (1) Ovalyn (2) Video Bermain Wahana (1) Video Bermain Wahana (2) `}),e.add({id:45,href:"/coretanku/marga-suku-karo-beserta-kampung-asal/",title:"Marga Suku Karo Beserta Kampung Asal",description:"Suku Karo merupakan salah satu suku terbesar di Sumatera Utara yang mendiami dataran tinggi Karo. Suku Karo memiliki lima marga induk yang dikenal dengan penyebutan Merga Silima yaitu Karo-karo, Ginting, Tarigan, Sembiring dan Perangin-angin. ",content:`Suku Karo # Suku Karo merupakan salah satu suku terbesar di Sumatera Utara yang mendiami dataran tinggi karo (kabupaten Karo). Suku Karo memiliki lima marga induk yang dikenal dengan penyebutan Merga Silima (marga yang berjumlah lima). Ke Lima marga induk dalam suku Karo adalah Karo-karo, Ginting, Tarigan, Sembiring dan Perangin-angin.
Rincian Marga beserta jumlah sub Marga # Kelima marga induk suku karo tersebut memiliki sub marga yang secara total berjumlah 86 marga. Rinciannya sebagai berikut:
Karo-karo (18 marga), Ginting (16 marga), Tarigan (14 marga), Sembiring (19 marga) dan, Perangin-angin (19 marga). Marga suku Karo beserta Kampung Asal (Kuta Pantekenna) # Dulunya, perkampungan (desa) suku karo umumnya didirikan oleh marga-marga dalam sub Marga Silima. Kampung yang didirikan marga-marga tersebut juga yang menjadi kampung asal setiap marga dalam suku karo. Berikut ini detail sub marga silima beserta kampung asal atau yang didirikannya (kuta pantekenna)
Marga Karo-Karo # Sub Marga Karo-karo beserta kampung asalnya (kuta pantekenna):
Barus , Kuta Pantekenna: Barusjahe, Buntu, Barusjulu, Tanjung Barus, Talimbaru, Serdang, Penampen Bukit , Kuta Pantekenna: Bukit, Buluhawar Guru Singa , Kuta Pantekenna: Gurusinga, Rajaberneh, Rumah Sumbul Jung , Kuta Pantekenna: Kutanangka, Perbesi, Kalang, Batukarang Kaban , Kuta Pantekenna: Kabantua, Pernantin, Bintang Meriah Kacaribu , Kuta Pantekenna: Kacaribu, Kutagerat Kemit , Kuta Pantekenna: Kutabale, Mulawari Ketaren , Kuta Pantekenna: Ketaren, Raya, Sibolangit, Pertampilen, Kutabale Purba , Kuta Pantekenna: Kabanjahe, Berastagi, Kutakepar, Laucih Samura , Kuta Pantekenna: Samura Karo Sekali , Kuta Pantekenna: Seberaya, Bertah, Kuta Julu Sinubulan , Kuta Pantekenna: Bulanjahe, Bulanjulu Sinuhaji , Kuta Pantekenna: Ajijulu, Ajibuhara, Ajimbelang, Ajijahe (Ajisiempat) Sinukaban , Kuta Pantekenna: Kaban, Sumbul Sinulingga , Kuta Pantekenna: Lingga, Bintangmeriah, Gungmerlawan Sinuraya , Kuta Pantekenna: Bunuraya, Kandibata, Singgamanik Sitepu , Kuta Pantekenna: Sukanalu Teran, Sukanalu, Naman, Beganding Surbakti , Kuta Pantekenna: Surbakti, Gajah Marga Ginting # Sub Marga Ginting beserta kampung asalnya (kuta pantekenna):
Ajartambun , Kuta Pantekenna: Rajamerahe, Bahorok Babo , Kuta Pantekenna: Gurukinayan, Munte, Tongging Siberas , Kuta Pantekenna: Lau Petundal Capah, Kuta Pantekenna: Bukit, Kalang Garamata , Kuta Pantekenna: Rajatengah, Tongging Gurupatih , Kuta Pantekenna: Buluhnaman, Sarimunte, Naga, Laukapur Jadibata , Kuta Pantekenna: Juhar Jawak , Kuta Pantekenna: Cingkes Manik , Kuta Pantekenna: Tongging, Lingga, Bungabaru Munte , Kuta Pantekenna: Kutabangun, Ajinembah, Kubu, Dokan, Munte, Tongging Pase , Kuta Pantekenna: Kutabangun Seragih , Kuta Pantekenna: Lingga, Jeraya Sinusinga , Kuta Pantekenna: Singa Sugihen , Kuta Pantekenna: Sugihen, Juhar, Kutabangun Suka , Kuta Pantekenna: Suka, Linggajulu, Naman, Berastepu Tumangger , Kuta Pantekenna: Kemkem, Kidupen Marga Tarigan # Sub Marga Tarigan beserta kampung asalnya (kuta pantekenna):
Bondong , Kuta Pantekenna: Lingga Ganagana , Kuta Pantekenna: Batukarang Gerneng , Kuta Pantekenna: Cingkes Gersang , Kuta Pantekenna: Nagasaribu, Seribujandi, Jandiseribu, BErastepu, Kutaraya Jampang , Kuta Pantekenna: Pergendangen Pekan , Kuta Pantekenna: Batukarang, Sukanalu Purba , Kuta Pantekenna: Tanjung Purba, Purba Tua Silangit , Kuta Pantekenna: Gunung Meriah Sibero , Kuta Pantekenna: Juhar, Kutaraja, Keriahen, Tanjung Beringin, Selakkar Tambak , Kuta Pantekenna: Cingkes, Kebayaken, Sukanalu Tambun , Kuta Pantekenna: Binangara, Rakutbesi, Sinaman Tua , Kuta Pantekenna: Pergendangen Tegur , Kuta Pantekenna: Suka, Seribujandi Tendang Marga Sembiring # Marga Sembiring terbagi dua yaitu Si La Mantangken Biang (Marga Sembiring yang diperbolehkan makan anjing) dan Si Mantangken Biang (Marga Sembiring yang tidak diperbolehkan/ memantangkan makan anjing).
Sembiring Si La Mantangken Biang:
Keloko, Kuta Pantekenna: Pergendangen, Tualang, Paropo Kembaren, Kuta Pantekenna: Samperaya, Liangmelas Sinulaki, Kuta Pantekenna: Silalahi, Paropo Sinupayung, Kuta Pantekenna: Jumaraja, Nageri Sembiring Si Mantangken Biang:
Berahmana, Kuta Pantekenna: Rumah Kabanjahe, Perbesi, LImang, Bekawar Bunuhaji, Kuta Pantekenna: Kutatengah, Beganding Busuk, Kuta Pantekenna: Kidupen, Lauperimbon Colia, Kuta Pantekenna: Kubucolia, Seberaya Depari, Kuta Pantekenna: Seberaya, Perbesi, Munte Gurukinayan, Kuta Pantekenna: Gurukinayan, Gunungmeriah Keling, Kuta Pantekenna: Rajaberneh, Juhar Maha, Kuta Pantekenna: Martelu, Pandan, Pasirtengah Meliala, Kuta Pantekenna: Sarinembah, Kidupen, Rajaberneh, Naman, Munte Muham, Kuta Pantekenna: Susuk, Perbesi Pandebayang, Kuta Pantekenna: Buluhnaman, Gurusinga Pandia, Kuta Pantekenna: Seberaya, Payung, Beganding Pelawi, Kuta Pantekenna: Ajijahe, Perbaji, Selandi, Perbesi, Kandibata Sinukapar, Kuta Pantekenna: Sidikalang, Sarintonu, Pertumbuken Tekang, Kuta Pantekenna: Kaban Marga Perangin-angin # Sub Marga Perangin-angin beserta kampung asalnya (kuta pantekenna):
Bangun , Kuta Pantekenna: Batukarang, Penampen, Selandi, Narigunung, Jandimeriah Benjerang , Kuta Pantekenna: Batukarang Kacinambun, Kuta Pantekenna: Kacinambun Keliat , Kuta Pantekenna: Marding-ding, Batukarang Laksa , Kuta Pantekenna: Juhar Limbeng, Kuta Pantekenna: Karo Jahe, Pancur Batu sekitar, Binjai, Deli Serdang Mano , Kuta Pantekenna: Pergendangen Namohaji , Kuta Pantekenna: Kutabuluh Pencawan , Kuta Pantekenna: Perbesi Penggarun , Kuta Pantekenna: Susuk Perbesi , Kuta Pantekenna: Kutabuluh, Jinabun Pinem , Kuta Pantekenna: Juhar, Pernantin, Sidikalang, Taneh Pinem, Kotacane Sebayang , Kuta Pantekenna: Kuala, Perbesi, Gunung, Pertumbuken, Kutagerat Singarimbun , Kuta Pantekenna: Temburun, Mardingding, Kutambaru, Tanjung Sinurat , Kuta Pantekenna: Kerenda, Beganding Sukatendel, Kuta Pantekenna: Sukatendel Tanjung , Kuta Pantekenna: Pernampen, Berastepu Ulujandi , Kuta Pantekenna: Juhar Uwir , Kuta Pantekenna: Singgamanik `}),e.add({id:46,href:"/pengertian-data-informasi-sistem-sistem-informasi-dan-sistem-informasi-manajemen/",title:"Pengertian Data, Informasi, Sistem Sistem Informasi Dan Sistem Informasi Manajemen",description:"Sebagai mahasiswa tentu saja kita di tuntut untuk mendapatkan refrensi terbaru (text book) tentang teori dasar dalam karya ilmiah, berikut ini beberapa pendapat ahli tentang pengertian Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen",content:`Pengantar # Dalam menyusun karya Ilmiah, Tugas Akhir atau Skripsi untuk mahasiswa Teknik Informatika dan Sistem informasi, khususnya mahasiswa yang mengambil judul perancangan sistem, pengembangan atau evaluasi sistem maka membutuhkan teori-teori umum dalam skripsi tersebut.
Teori-teori umum yang biasa di sertakan meliputi Pengertian tentang Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen. Sebagai mahasiswa tentu saja kita di tuntut untuk mendapatkan refrensi terbaru (text book), nah bagi anda yang kesulitan dalam mencari refrensi, berikut ini beberapa pendapat ahli tentang pengertian Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen.
Pengertian Data # 1. Menurut Oz (2009:9) # Data merupakan fakta tentang orang, kejadian-kejadian serta subjek lainnya yang dimanipulasi dan diproses untuk menghasilkan informasi.
2. Menurut O’Brien dan Marakas (2011:34) # Data merupakan fakta-fakta mentah, observasi mengenai fenomena fisik atau transaksi bisnis.
3. Menurut Stairs dan Reynolds (2010:5) # Data merupakan fakta-fakta mentah, seperti nomor induk karyawan, total jam kerja dalam seminggu, bagian penomoran inventori ataupun sales order.
4. Menurut Shelly dan Rosenblatt (2012:7) # Data adalah fakta yang menjadi material dasar sebuah sistem, sedangkan menurut Laudon dan Laudon(2012:15) data merupakan aliran fakta-fakta mentah yang mewakili peristiwa yang terjadi dalam organisasi atau lingkungan fisik sebelum di atur dan disusun kedalam bentuk yang dipahami dan dapat digunakan.
5. Menurut Valacich dan Schneider (2012:22) # Data merupakan material mentah, informasi yang belum terformat, seperti kata dan angka-angka.
Pengertian Informasi # 1. Menurut Shelly dan Rosenblatt (2012:7) # Informasi adalah data yang telah di transformasi menjadi bentuk yang lebih berguna bagi pemakai.
2. Menurut Becerra-Fernandez dan Sabherwal (2010:18) # Informasi adalah subset data yang memiliki konteks, relevansi, dan tujuan.
3. Laudon dan Laudon (2012:15) # Informasi merupakan data yang telah diubah menjadi bentuk yang bermakna dan berguna bagi manusia.
4. Menurut Oz (2009:19) # Informasi merupakan fakta atau kesimpulan yang memiliki arti dalam konteks.
5. Menurut Stairs dan Reynolds (2010:5) # Informasi adalah kumpulan fakta terorganisir sehingga memiliki nilai tambahan di luar nilai fakta individual.
6. Menurut O’Brien dan Marakas (2011:34) # Informasi merupakan data yang telah dikonversi kedalam konteks yang bermakna dan berguna kepada pengguna akhir tertentu .
7. Menurut Valacich dan Schneider (2012:22, 510) # Informasi merupakan data yang telah diformat dan / atau terorganisir dengan berbagai cara sehingga menjadi berguna bagi orang yang menggunakan.
Karakteristik Informasi yang bermanfaat bagi pengguna, Stairs dan Reynolds (2010:7) # Agar informasi bermanfaat bagi pengguna untuk pengambilan keputusan, informasi memiliki karakteristik tertentu seperti tabel dibawah,
No Karakteristik Keterangan 1 Accessible Informasi harus mudah diakses oleh para pengguna sehingga mereka bisa mendapatkannya dalam format yang tepat dan pada waktu yang tepat untuk memenuhi kebutuhan mereka. 2 Accurate Informasi yang akurat adalah bebas dari kesalahan. Dalam beberapa kasus, informasi yang tidak akurat akan dihasilkan karena data yang tidak akurat dimasukkan ke dalam proses transformasi. Hal ini biasa disebut dengan garbage in, garbage out (GIGO). 3 Complete Informasi harus lengkap dan berisi semua fakta. 4 Economical Informasi juga harus relatif ekonomis untuk diproduksi. Pengambil keputusan harus selalu menyeimbangkan nilai informasi dengan biaya untuk menghasilkan informasi tersebut. 5 Flexible Informasi yang fleksibel dapat digunakan untuk berbagai tujuan. 6 Relevant Informasi yang dihasilkan harus relevan dengan kebutuhan pengambil keputusan. 7 Reliable Informasi yang handal dan dapat dipercaya oleh pengguna. Dalam banyak kasus, keandalan informasi tergantung pada keandalan metode pengumpulan data. 8 Secure Informasi harus aman dari akses oleh pengguna yang tidak sah. 9 Simple Informasi harus sederhana, tidak terlalu rumit. Informasi yang rumit dan terlalu berlebihan akan mengakibatkan pengambil keputusan terlalu banyak informasi dan tidak dapat menentukan apa yang benar benar penting. 10 Timely Informasi yang tepat waktu disampaikan ketika dibutuhkan. 11 Verifiable Informasi harus diverifikasi. Ini berarti bahwa sebuah informasi harus dipastikan kebenarannya dengan memeriksa banyak sumber untuk informasi yang sama. Pengertian Sistem # 1. Menurut Shelly dan Rosenblatt (2012:7) # Sistem adalah sekumpulan komponen yang saling berinteraksi untuk menghasilkan tujuan tertentu.
2. Menurut Satzinger, Jackson dan Burd (2010:6) # Sebuah sistem adalah kumpulan komponen-komponen yang saling terkait yang berfungsi bersama-sama untuk mencapai hasil tertentu.
3. Menurut Valacich, George dan Hover (2012:6) # Sistem merupakan seperangkat komponen atau prosedur bisnis yang saling terkait yang digunakan dalam satu unit bisnis dan bekerja sama untuk tujuan tertentu.
4. Menurut Stairs dan Reynolds (2010:6) # Sistem merupakan kumpulan elemen-elemen atau komponen-komponen yang saling berinteraksi untuk menghasilkan suatu tujuan.
5. Menurut O’Brien dan Marakas (2011:26) # Sistem merupakan komponen yang saling berinteraksi dengan batasan yang sudah ditetapkan, bekerja bersama-sama untuk mencapai tujuan yang objektif dengan menerima input dan menghaslkan output dalam proses transformasi yang terorganisir. ###
6. Menurut Oz (2009:11) # Sistem merupakan kumpulan dari komponen-komponen yang bekerja sama untuk mencapai tujuan bersama, atau beberapa tujuan, dengan menerima masukan, pengolahan, dan menghasilkan output secara terorganisir.
7. Menurut Valacich, et al (2012:6) # Suatu sistem memiliki sembilan karakteristik, tujuh di antaranya terlihat pada Gambar dibawah. Pada gambar dapat dilihat interaksi sistem dengan lingkungannya yang memiliki pembatas untuk memisahkan sistem dari lingkungan luar sistem. Sistem mengambil input dari luar, memprosesnya, dan mengirimkan output yang dihasilkan kembali ke lingkungannya.
Karakteristik Sistem # Component (komponen) Merupakan elemen-elemen sistem disebut juga dengan subsistem yang merupakan bagian terkecil yang membentuk sebuah sistem. Interrelated (saling berhubungan) Ketergantungan dari salah satu bagian dari sistem pada satu atau lebih bagian sistem lainnya Boundary (batas) Merupakan garis yang menandai bagian dalam dan bagian luar sebuah sistem dalam lingkungannya. Purpose (tujuan) Tujuan keseluruhan atau fungsi dari suatu system. Environment (lingkungan) Segala sesuatu yang berada di luar sistem yang berinteraksi dengan sistem. Interface (antar muka) Penghubung sistem dalam berinteraksi dengan subsistem di lingkungannya. Constraint (batasan) Sebuah batasan tentang apa yang ingin dicapai sebuah sistem. Pengertian Sistem Informasi # 1. Menurut Laudon dan Laudon (2012:15) # Sistem informasi merupakan seperangkat komponen yang saling terkait yang mengumpulkan (atau mengambil), memproses, menyimpan, dan mendistribusikan informasi untuk mendukung pengambilan keputusan dan kontrol dalam sebuah organisasi.
2. Menurut Shelly dan Rosenblatt(2012:7) # Sistem informasi adalah kombinasi teknologi informasi, orang(people) dan data untuk mendukung kebutuhan bisnis. sebuah Sistem informasi memiliki lima komponen kunci utama yaitu terdiri dari hardware, Software, data, process dan people. Shelly dan Rosenblatt(2012:8)
3. Menurut Oz(2009:13) # Sistem Informasi terdiri dari semua komponen yang bekerja sama untuk memproses data dan menghasilkan informasi.
4. Menurut Stairs dan Reynolds (2010:4) # Sistem Informasi merupakan seperangkat komponen yang saling berinteraksi untuk mengumpulkan, mengubah, menyimpan dan menyebarkan data dan informasi serta menyediakan mekanisme umpan balik untuk memenuhi tujuan.
5. Menurut O’Brien dan Marakas (2011:4) # Sistem Informasi merupakan kombinasi secara terorganisir atas apa saja dari orang/pengguna, hardware, software, jaringan komunikasi, sumber daya, aturan dan prosedur yang menyimpan, menerima, mengubah dan menyebarkan informasi dalam sebuah organisasi.
6. Menurut Valacich, George dan Hover (2012:20) # Sistem informasi adalah kombinasi hardware, software, dan jaringan telekomunikasi yang dibangun orang dan digunakan untuk mengumpulkan, membuat, dan mendistribusikan data yang berguna dalam pengaturan organisasi.
7. Menurut Satzinger, et al(2010:6) # Sistem informasi merupakan kumpulan komponen yang saling terkait yang mengumpulkan, memproses, menyimpan, dan menyediakan informasi sebagai output yang diperlukan untuk menyelesaikan tugas bisnis.
Komponen Sistem Informasi # Hardware (perangkat keras) merupakan segala sesuatu yang berada pada lapisan fisik sebuah sistem informasi. Software(perangkat lunak) merupakan program-program yang mengontrol hardware untuk menghasilkan tujuan atau informasi yang dibutuhkan. Data merupakan material dasar sistem informasi yang ditransformasi menjadi bentuk informasi yang berguna bagi pemakai. Process merupakan tugas dan fungsi bisnis yang dilaksanakan oleh user, manager, staff IT untuk menghasilkan tujuan secara lebih spesifik. People merupakan pengguna, baik dari dalam dan luar sebuah perusahaan yang berinteraksi langsung dengan sistem informasi. Aktifitas dasar dari Sistem Informasi # Aktifitas dasar dari Sistem Informasi menurut Laudon dan Laudon(2012:16) adalah sebagai berikut :
Input Melibatkan penangkapan atau pengumpulan data mentah dari dalam organisasi atau dari lingkungan ekstemal untuk pengolahan dalam suatu sistem informasi. Process Melibatkan proses mengkonversi input mentah ke bentuk yang lebih bermakna. Output Mentransfer proses informasi kepada orang yang akan menggunakannya atau kepada aktivitas yang akan digunakan. Feedback Output yang dikembalikan ke anggota organisasi yang sesuai untuk kemudian membantu mengevaluasi atau mengoreksi tahap Input. Pengertian Sistem Informasi Manajemen # 1.Menurut Laudon dan Laudon (2012:29) # Studi tentang sistem informasi manajemen (MIS) menggabungkan karya ilmu komputer, ilmu manajemen, dan riset operasi dengan orientasi praktis terhadap pengembangan solusi sistem untuk masalah dunia nyata dan mengelola sumberdaya teknologi informasi. Hal ini juga terkait dengan perilaku isu seputar pengembangan, penggunaan, dan dampak dari sistem informasi, yang biasanya dibahas dalam bidang sosiologi, ekonomi, dan psikologi.
2. Menurut Stairs dan Reynolds (2010:22) # Sistem Informasi Manajemen merupakan kumpulan yang terorganisir dari orang, prosedur, software, database dan perangkat dengan tujuan menghasilkan informasi untuk para manager dan pengambil keputusan.
3. Menurut O’Brien dan Marakas (2011:15) # Sistem Informasi Manajemen merupakan sistem pendukung manajemen yang menghasilkan laporan, tampilan dan respon yang telah di spesifikasi secara periodik, khusus berdasarkan atas permintaan atau dengan basis pelaporan yang wajib
4. Menurut Valacich dan Schneider (2012:30,513) # Sistem Informasi Manajemen merupakan suatu sistem informasi yang dirancang untuk mendukung pengelolaan fungsi organisasi pada manajerial tingkat organisasi. Dalam bidang keilmuan, Sistem Informasi Manajemen merupakan sebuah bidang studi yang meliputi pengembangan, penggunaan, pengelolaan, dan studi sistem informasi berbasis komputer dalam organisasi.
Penutup # itu dia beberapa pengertian Pengertian Data, Informasi, Sistem, Sistem Informasi dan Sistem Informasi Manajemen yang di kutip dari pendapat ahli 😀. Cara pengutipan sebaiknya sesuaikan dengan panduan penulisan karya ilmiah anda dan jangan lupa tambahkan pendapat/ simpulan anda pada setiap pengertian tersebut. OK, selamat menulis ria dan semoga bermanfaat.
Referensi # Laudon., Kenneth C, Laudon., Jane P, (2012), “Management Information Systems: Managing The Digital Firm, Twelfth Edition”, Prentice Hall Inc., New Jersey.
Oz, Effy., (2009), “Management Information Systems,Sixth Edition”, Cengage Learning, Boston.
Satzinger, John., Jackson, Robert., Burd, Stephen., (2009), “Systems Analysis and Design in a Changing World, Fifth Edition”, Cengage Learning, Boston.
Shelly, B Shelly., Rosenblatt, Harry J., (2008) ”Systems Analysis and Design, Ninth Edition”, Cengage Learning, Boston.
Valacich, Joseph S., George , Joey F., Hover, Jeffrey A.,(2012), “Essentials of Systems Analysis and Design”, Prentice Hall Inc., New Jersey.
Valacich, Joseph S., Schneider Christoph., (2012), “Information Systems Today: Managing in the Digital World”, Prentice Hall Inc., New Jersey.
Stair, Ralph M., Reynolds, George W., (2010), &ldquo;Principles of Information Systems A Managerial Approach Ninth Edition&rdquo;, Cengage Learning, Boston.
O’Brien, James A., Marakas, Maracas A.,(2011), &ldquo;Management Information Systems&rdquo; McGraw-Hill, New York
Becerra-Fernandez., Irma, Sabherwal., Rajiv (2010),&ldquo;Knowledge Management: Systems and Processes&rdquo;, M E Sharpe Inc., New York
👻 Semua refrensi (textbook) diatas dalam bentuk softcopy, jika anda membutuhkan silakan contact saya karena tidak etis jika saya share disini.
`}),e.add({id:47,href:"/coretanku/pengalaman-terbang-dengan-pesawat-capung/",title:"Pengalaman terbang dengan pesawat 'capung'",description:"Pengalaman terbang dengan pesawat 'capung'. Ceritaku tentang pertama kali terbang dengan Cessna 208 (SUSI AIR) ke Meulaboh",content:`Terbang dengan Pesawat &lsquo;Capung&rsquo;,..Deg..deg-an juga, soalnya ini pengalaman pertama saya naik pesawat kecil dalam kondisi penerbangan yang cuacanya kurang baik.
Pesawat Capung 😁 # Pesawat &lsquo;capung&rsquo; yang saya maksudkan di sini adalah jenis Cessna 208 (SUSI AIR). Pesawat ini bermesin turboprop tunggal, fixed-gear dan merupakan pesawat regional jarak pendek sayap tinggi (high wing) dan dibangun di Amerika Serikat oleh Cessna. Pesawat terbang bermesin turboprop ini biasanya berkapasitas sembilan penumpang, dan dapat bisa digunakan untuk kargo.
Dalam pekerjaan di salah satu distibutor Rokok, kebetulan saya di tempatkan Regional office yang membawahi beberapa Area Office, yaitu Medan, Banda Aceh, Lhokseumawe, Kisaran, Padang Sidimpuan dan Pematang Siantar, kemudian terdapat Pos yang berada di Nias dan Meulaboh.
Pekerjaan ini terkadang membutuhkan kunjungan ke Area Office dan Pos. Kunjungan yang paling saya hindari adalah ke Pos, karena jauh dan juga transportasi biasanya rada &lsquo;aneh&rsquo;😀. Perjalanan sebelumnya ke Nias, saya sudah cari schedule dan berbagai alasan agar dapat naik pesawat yang &lsquo;agak besar&rsquo; dan berhasil dengan naik pesawat yang agak besaran, penumpangnya lebih 20 orang.
Tatapi kali ini pas menuju Nagan raya, Meulaboh dan hanya pesawat &lsquo;capung&rsquo; inilah yang memungkinkan karena jadwal pesawat yg &lsquo;agak besaran&rsquo; tidak ada setiap hari, yah terpaksa deh..hehe..tapi ini mungkin pengalaman yang tidak bisa terlupakan, karena pertama kali, cuacanya juga lumayan tidak mendukung, duduk di belakang pilot dan langsung melihat navigasi dan cara pilotnya menerbangkan pesawat.
Ternyata mnerbangkan pesawat itu nggak jauh beda dengan game simulator untuk menerbangkan pesawat yang pernah saya mainkan 😆 padahal di game aja saya mainkan bleum pernah terbang..(ga sabaran sih).
Foto pesawat di bandara Polonia, sebelum saya naiki # Sewaktu berangkat dari bandara Polonia menuju Nagan raya, penumpangnya aja cuma 7 orang termasuk pilot 2 orang (bule, katanya sih dari jerman, mudah2an bukan anak PKL🤣), pokoknya seperti naik pesawat pribadi, tetapi sekitar 15 menit terbang, wah..wah..bener2 jantungan, nggak ada enaknya sama sekali, orang medan bilang acem mau jatuh aja, goyang kiri kanan, naik turun, trus pilotnya bentar-bentar liat ke sayap.
Tapi itulah nasib baik tadi, sampai juga, tapi kan lumayan menguji iman, 1 jam kayak gitu, yah..mau nggak mau pasti berdoa&hellip;hahaha.
Setelah tiba Nagan raya, Meulaboh saya sampe kepikiran terus, soalnya besok pulang juga harus naik ini lagi, tiket sudah di pesan Pulang-Pergi.
Ternyata bener cui&hellip;besoknya cerah&hellip;.senang kali rasanya, nyaman bener, bisa liat kiri kanan dan depan. ada juga beberapa video saya rekam dan dipikir2 kayaknya lebih enak dan menantang jika naik pesawat capung kayak gini, nih..foto dan beberapa videonya;
Video Awan dari Cesna 208 # Video Pantai barat Meulaboh dari pesawat I # Video Pantai barat Meulaboh dari pesawat II # Video Sebelum mendarat di polonia Medan # Video Mendarat di polonia Medan # `}),e.add({id:48,href:"/coretanku/perumpamaan-atau-anding-andingen-dalam-suku-karo/",title:"Perumpamaan atau Anding-andingen dalam Suku Karo",description:"Anding-andingen atau disebut juga dengan Perumpamaan merupakan peribahasa yang biasanya digunakan untuk menyampaikan suatu maksud tetapi mengungkapkannya dengan kalimat (hal lain)",content:`Anding-andingen (Perumpamaan) # Anding-andingen atau disebut juga dengan Perumpamaan merupakan peribahasa yang biasanya digunakan untuk menyampaikan suatu maksud tetapi mengungkapkannya dengan kalimat (hal lain).
Melas pe ningen api adi la icikep labo meseng # Piga-piga erbage kesusahen nggeluh, adi la ibahan sababna labo jumpa. Mesui gia ningen ibas tutupen, adi la ibahan dalin itutup, labo jelma itutup.
Adi pajek gara api, kugapa pe rubati # Gara api pajek adi si man tanggerenken la lit. Ertina, adi mesera kel baban nggeluh, nakan man pangan la lit, kutera pe labo i eteh mehuli.
Ngutkut bagi api bas segal # Ikataken ku jelma si permenek, nggit ngerem-ngerem ukurna. Atena segat entah morah-morahna ibuni-bunikenna. Seh mawen-mawen dagingna kertang itindan-tindan ukurna.
Keri-keri arang besi la tembe # Sibar ngasup enggo ikeriken, tapi sura-sura la seh. Umpama guna nekolahken anak, orang tua enggo tungtung kapur, lembu idayaken, sabah iputangken, tapi erkiteken anak la rate tutus, sekolahna la rasil.
Aras jadi Namo # Kalak si mesera babanna nggeluh jadi kalak bayak. Kebalikenna : Namo jadi Aras. Biasa ka ipersada, : Aras jadi namo, namo jadi aras. Ipake ngandingken kumalih jaman. Kalak si musil jadi jore, si jore salih ku mesera.
Ngasuhi anak arimo, jukut nakanna # Ikuanken ku jelma si la terasuhi perbahan seh royalna, la meteh mehuli.
Bagi si ngasuhi anak arimo, la lit nakanna, kita irigepna # Iandingken ku jelma si mesera manjangisa, janah adi la ibere, kita ikurukna entah duit ta i tangkona.
Bagi arimo natap tabe # Ningkalak, adi arimo ercurmin bas lau, megah akapna ngenehen rupana, seh lupa ndarami nakan. Ikuanken man jelma si labo entabeh babanna nggeluh, tapi la atena erdahin, perbahan jore akapna bana.
Bagi arimo tua-tua # Arimo tua-tua, janahna erdalan pe lit nge rusur sorana bagi sora kalak jungut-jungut. Ikataken man jelma si mejungut, enggo me ia sinik nuate, jungut-jungut denga kang.
Bagi aringgeneng nandangi tongkap # Sorana nandangi tongkap, erdengung-dengung, sung megang sung lahang Iumpamaken kusora kalak si nurdam mejile.
Bagi aringgeneng beru-beru, la neren # Iandingken ku jelma si la perpang, sitik pe kalak la mehangke. Biasa ikataken man anak perana, si la ibiari singuda-nguda sabap ngkuit pe la pang.
Labo terbuat ate tungir asa pungga # Antusenna, pemindon si kutera pe ibahan la terdemi, pemindon si lang-lang. Umpamana danak-danak ngandung, ipindona gelah itukur kuda.
Gerantang Acih # Ngataken jelma pergerantang, mehantu tempa, tapi situhuna ia percikcik.
Menang bas babah, talu bas perukuren # Ikuanken ku kalak si la lit pemetehna, tapi ngerana la nggit talu, ia tempa si beluhna. Gelah menang bas cakap, rugi pe ia nggit. Babahna bagi bulan erlajar
Ngataken tempas babah mejile. # Adi kidaram salu babah, ndigan pe la dat Ikataken ku jelma si la mejingkat kidaram. “Ija kin, ..la kap lit ije”, nina rusur. Biberna ngenca kemuit, tanna la cigargar, janah matana la metenget pepayosa.
Petembal bagi persepah babi # Ngandingken perukuren la des, entah pe silawanen. Umpamana, orang tua merincuh maka anakna mengketi sekolah guru. Ate anak, kujapa pe labo dalih, gelah ula ku sekolah guru.
La ngidah ikur babi pe # Ikataken kempak kalak si tutus kal atena erdahin. Pagi-pagi lampas ku juma, ikur babi pe lenga teridah. Karaben pe kenca gelap maka ku rumah, ikur babi lanai ka teridah.
Bagi babi Lau Baleng # Bagi babi Lau Baleng tersena galang janah mbur. Ikateken kempak jelma si seh burna
Njula babi salu kedep # Ikuanken kempak jelma si la terjula. Bicara perbahan ate kalak nembeh pe maka ibere kalak, la mberat tanna ngalokenca.
Toton babi ku lesung # Ngataken sura-sura si tangkas, mesunah ngatusisa. Umpamana, anak perana kuta dauh reh tiap berngi ku sada kuta, tentu atena njumpai temanna erkuan.
Bagi babi, malar-malar anakna # Iandingken kempak pernanden si ngenehen ia labo min ate jadi, tapi ia ikelengi erkiteken sangapna mupus.
Erbuat bengket bagi tutup abal-abal # Ikuanken man kalak si pengelako pendahinna maka akapna reh beratna. Umpamana, icuba erbinaga ngelapas-ngelepasken nakan. Binaga rugi, tangkel utang.
Kelaling-kelaling bagi bunga abang-abang # Iandingken kempak jelma si lanai erturi-turin pergeluhna, lanai lit teman entah kade-kade sinampati.
Ajar bancina # Ibas sada-sada pendahin entah pe sada-sada tempas kinigeluhen siakap kita la ngasup ije. Tapi adi reh maksa kecibalen, ngasup kang kepeken. Umpamana, sesekalak la akapna ia ngasup erdalan ndauh, tapi kenca terpaksa ngungsi, kukerangen pe ngasup ka nge erjujung.
Siagengen radu mbiring, sikuningen radu megersing # Antusenna, adi sician-cianen, sipecat-pecaten, pekepar rugi, pekepar mbau. Tapi adi siajar-ajaren, sisampat-sampaten, pekepar merim, pekepar menahang.
Adi ngalo la rido, nggalar nge la rutang # Antusenna, adi la arah orat rejeki reh, la ka bo arah dalan sinanggel tangkel.
Ngkimbangi amak babo lubang # Andingenna, kalak si mehuli kal tempa ukurna adi niidah perbahanenna, kepe atena meneken.
Seran mate anak kalak asang anakta # Ndeharanta anak kalak. Antusenna, suin mate ndehara asang mate anak.
Bagi angguk-angguk pudi terang, iluh mambur la lit si ngapul # Kalak si ngandung tangis nandangi terang wari, nupung kepaten, nggit me la nai kenan apulen. Si aturna ngapul enggo munduk-unduk entah tunduh. Iumpamaken ku jelma si kedabuhen sinanggel, tapi la lit sinami-namisa.
`}),e.add({id:49,href:"/coretanku/orat-tutur-dalam-suku-karo/",title:"Orat Tutur dalam Suku karo",description:"Orat Tutur adalah istilah panggilan kekerabatan dalam tradisi Suku Karo. Beberapa penggilan kekerabaten seperti Erbapa, Ernande, Erbibi dan lain sebagainya.",content:`Orat Tutur # Orat Tutur adalah istilah panggilan kekerabatan dalam tradisi Suku Karo. Beberapa penggilan kekerabaten seperti Erbapa, Ernande, Erbibi, Erbengkila dan lain sebagainya.
1. ERBAPA ( Bapak ) # Erbapa kempak Orang Tua simupusken Erbapa kempak simpemeren bapa Erbapa kemapak siparibanen bapa Erbapa kemak Biak senina bapa Erbapa kempak biak si pengalon bapa Erbapa tua kempak Senina bapa sintua Erbapa tengah kempak senina bapa sintengah Erbap nguda kempak Senina bapa singuda 2. ERNANDE ( Ibu ) # Ernande man si mupus kita ( Ndehra bapanta ) Nande kempak ndehara sipemeren bapanta, senina / satu bere-bere. Nande kempak ndehara biak senina bapa Nande kempak biak sipengalon bapanta Nande tua kempak ndehara bapa tua. Nande tengah kempak ndehara bapa tengah Nande nguda kempak ndehara bapa nguda. 3. ERTURANG ( Saudari ) # Erturang antara si dilaki ras si diberu, adi sada bapa entah sada nande Erturang antara si dilaki ras si diuberu, adi si pemeren bapana Erturang antara sidilaki ras diberu, adi ersenina bapana Erturang antara si dilaki ras si diberu, adi ersenina bapana Erturang antara si dilaki ras diberu adi sembuyak nandena ( Sipemeren ) Erturang anara sidilaki ras si sidiberu , adi sembuyak nandena ( sipemeren ) Erturang - Impal kempak Bibi Turang bapa, adi dilaki Erturang -Impal kempak anak mama, adi kita diberu 4. SENINA ( Saudara ) # Senina kempak sembuyak - senian -golongen bapa ( sidilaki ras sidilaki ) Senina si pemeren kempak anak senina nandeta Senina kempak kerina anak sipemberen bapanta ( dilaki ) turang adi diberu. Senina adi lit orat tutur ersenina, tah sipemeren Senin sipengalon, adi beberenta ngempoi anakna, anem labo pe sada merga. 5. MAMA ( Paman ) # Mama kempak Turang Nande, ntah bapa ndehara turangta pe ermama Mama kempak kerina turang Nande , gia lain bapa. Mama kempak turang impal nande. Mama Tua kempak turang nandeta sintua, tah bapa ndeharata sintua Mama tengah kempak Turang bapanta sintengah Mama nguda kempak mama ia kerina i nguda ibas mama e sembuyak agi Nande tah senina bapa ndeharanta, tapi singuda. 6. MAMI # Mami kempak ndehara mama turang nandeta. Mami kempak Nande ndeharanta. Mami kempak kerina ndehara mamanta tah gia Puang Kalimbubu Mami tua kempak ndehara mama tuanta Mami tengah kempak ndehara mama tengahta. Mami nguda kempak ndehara Mama ngudanta 7. BIBI # Bibi arah turang bapa Bibi senina nande Bibi nande perbulangen Bibi kempak turang impal bapa. Bibi kempak kerina tegun turang bapa Bibi tua kempak turang bapa sintua Bibi tengah kempak turang bapa sintengah Bibi nguda kempak turang bapa singuda 8. BENGKILA # Bengkila kempak bapa perbulangen ( ajinta ) Bengkila kempak perbulangen turang bapanta. Bengkila kempak krina senina bengkila. 9. SILIH # Silih kempak turang ndehara ( Kalimbubu ) Silih kempak si ngempoi turangta Silih kempak kempak kerina Golongen Turanga ndeharanta 10. TURANGKU # Turangku em simehangke, erturangku harus rebu , labo banci siperkuanen ( secara langsung ) Adi simble pe harus duana nilah.
Turangku kempak ndehara silihta Turangku kempak perbulangen berunta tah silih perbulangen ( anak beru ) Turangku kempak kerina ndehra silihta , tah silih egia puang kalimbubu. 11. KELA # Kela kempak perbulangen anakta Bebere kempak anak Turangta ( kita dilaki ) Adi mama ras maminta pe erkela. 12. PERMAIN # Permain kempak ndehara anakta Permain kempak kerina anaj turang ndeharana, dilaki tah diberu. 13. NINI BULANG ( Kakek ) # Nini bulang kempak bapa bapanta Nini Bulang kempak Bapa Nandeta Nini bulang kempak jenjang si mupus bapa, nande, mama , bengkila ras sidebanna. 14. NINI TUDUNG ( Nenek ) # Nini tudung kempak kerina Golongen ndehara Nini Bulang Subuk Nini Tudung enda golongen Kalimbubu tah anak beru bagepe tategun bapanta. `}),e.add({id:50,href:"/coretanku/rakut-sitelu-ibas-suku-karo/",title:"Rakut Sitelu Ibas Suku karo",description:"Rakut Sitelu merupakan unsur keutuhan hidup seseorang (Sangkep Nggeluh) yang menjabarkan tentang sistem kekerabatan dalam adat istiadat masyarakat Karo. Rakut sitelu terdiri dari  Kalimbubu, Sukut, dan Anak Beru.",content:`Rakut Sitelu # Rakut Sitelu merupakan unsur keutuhan hidup seseorang (Sangkep Nggeluh) yang menjabarkan tentang sistem kekerabatan dalam adat istiadat masyarakat Karo. Rakut sitelu terdiri dari Kalimbubu, Sukut, dan Anak Beru. Kata Rakut artinya ikatan dan Kata Telu adalah Tiga.
1.Kalimbubu # Kalimbubu adalah kelompok pemberi dara dalam Masyarakat Karo, kalimbubu ini ada beberapa jenis, yaitu:
Kalimbubu tua/ kalimbubu bena-bena; Kalimbubu simupus/kalimbubu dareh; Kalimbubu kampah; Kalimbubu simajek dalikan; Kalimbubu siperdemui; Kalimbubu sembuyak; Kalimbubu taneh/kalimbubu sinajek lulang; Kuang kalimbubu (kalimbubu dari kalimbubu); Kuang ni puang (kalimbubu dari puang kalimbubu). Mehamat Erkalimbubu # Kalimbubu ibas kalak Karo emekap si harus ihamati ras ikelengi. Adi kalak karo si dekah erdalan itengah kerangen ras kalimbubu la banci lang anak beru arah lebe, ertina adi lit musuh entah pe rubia-rubia si merawa entah pe duri entahpe bulung si megatel gelah anak beru kena leben, gelah selamat kalimbubu ibas bahaya nari.
Bagepe adi erdalan pagi-pagi namuren denga dalan, anak beru nge arah lebe, gelah enggo keri namur e isapu anak beru segelah kalimbubu lanai namuren. Adi ngerana kalimbubu ibas sada runggun labo banci ia isimbaki. &ldquo;Bagi page ibas lebeng pe ikurkuri gelah lit man nakan turang&rdquo; Bagem kuan-kuan kalak Karo ncidahken kekelengen anak beru nandangi kalimbubu.
2.Senina # Senina adalah kelompok yang semarga dalam Masyarakat Karo, senina ini ada beberapa jenis, yaitu:
Sembuyak; Senina siparibanen; Senina sipemeren; Senina sipengalon; Senina sicimbangen. Metenget Ersenina # Senina eme si rusur teman runggu. Adi kalak Karo si dekah Senina Sada Utang Sada Ido nina. Utang seninanta banci nge itunggu kalak man banta, bagepe ido seninanta tek ka nge kalak kita ngalokenca. Metenget ersenina perlu kal ijaga gelah ula sempat retak, rubat.
Teman meriah enterem nge, tapi teman tangis senina e ka ngenca. Emaka rugi kal adi kita rubat ersenina, dalan sirang labo lit, emaka arus metenget gelah ula sempat rubat, nggit sitewasen, ula subuki anem la pe iakap teng-tengsa. Ulin min si ban man seninanta asa man ise pe sebab e nge teman ngandung ras ermeriah ukur. Adi lit si la tabehen ukur ras seninanta si pala-palailah pekenasa.
3.Anak Beru # Anakberu adalah kelompok penerima dara dalam Masyarakat Karo, anakberu ini ada beberapa jenis, yaitu:
Anakberu ipupus/anakberu dareh; Anakberu iangkip; Anakberu sincekuh baka tutup; Anakberu tua; Anakberu singerana, sirunggu (singerakut bide); Anakberu menteri; Anakberu singikuri; Anakberu singikuti. Metami man Anak Beru # Kuan kuan kalak Karo &ldquo;Mangkuk reh, mangkuk lawes&rdquo;, mbages kel ertina. Adi anak beru enggo erbahan si mehuli nandangi kalimbubu maka kalimbubu pe arus erbahan si mehuli man anak beru, amin gia lain-lain bentukna. Kalimbubu la banci la erpengagak nandangi anak beruna, bas kai murde la banci lang arus isampatina. Bage nge ertina jadi dibata ni idah, ngidah kerina situasi. Bagepe anak beruna la pe isuruh kalimbubuna, enggo leben ikalakina juma kalimbubuna.
Bere-berenta man beren kin. Erpengagak kin jadi kalimbubu, la ipondona si bereken gelah puas kal ukurna. Gundari bere-bere pe lanai bo tersuruh, adi kita la si cidahken kekelengenta man bana. Ula min bagi si gundari, erjabu beberena luah si ngalo bere-bere pe palsu, labo mamana e sinukursa tapi siempo nge. Emaka akapna mamana pe mama palsu nge. Aturenna ije me i cidahken ate keleng erbere-bere, alu luah mamana, keleng kel atena barang e.
Ula kal si diberu i cekurakina entah pe irawaina turangkuna. Bage pe si dilaki, ula kal i rawaina ntah ipandangina turangkuna tah silihna. Adi la si akap teng-teng silihta, banci sidilo turangta, turangta e banci siajarken entah sirawai. Maka iban kerja Tahun pe gelah setahun sekalilah gia sidahi-dahin. Kalimbubu ndahi anak beruna ras anak-anak kerina gelah itandaina bengkilana ras impalna, bagepe anak beru nandangi kalimbubu. Kai kin ateta luahta maka meriah ukur silihta ras beberenta e lah si baba, bageka anak beru nandangi kalimbubu ras permenna.
`}),e.add({id:51,href:"/cybercrime-dan-ancaman-terhadap-keamanan-jaringan/",title:"Cybercrime Dan Ancaman Terhadap Keamanan Jaringan",description:"Cybercrime Dan Ancaman Terhadap Keamanan Jaringan. Cybercrime secara kasar dicirikan sebagai melakukan sebuah tindakan illegal serta bertentangan dengan hukum melalui penggunaan media komputer dan jaringan internet.",content:`Jaringan Internet # Sekarang ini komputer dan Internet menjadi bagian yang tidak dapat terpisahkan dalam kehidupan kita sehari hari. Tanpa kita sadari komputer dan internet berpengaruh sangat besar dalam kegiatan bisnis, pendidikan dan pemerintahan.
Penggunaan jaringan internet sangat berpengaruh dalam pengelolaan dan penyebaran informasi dengan cepat dan akurat yang sangat dibutuhkan pada semua bidang usaha.
Jaringan internet merupakan kumpulan komputer dan fasilitas telekomunikasi yang meliputi berbagai fungsi program yang terkoneksi ke seluruh dunia menggunakan protocol TCP /IP (Transmission Control Protocol/Internet Protocol) serta menghubungkan data dengan berbagai jenis media komunikasi data (Internet Tax Freedom Act of 1998: 112 Stat. 2681–719).
Dengan kata lain, Internet adalah jaringan komputer berskala besar yang saling terkoneksi secara bersama sama, adanya konektivitas ini memungkinkan semua pengguna dalam setiap jaringan untuk terhubung ke pengguna di komputer lain yang tak terhitung jumlahnya.
Interaksi antar pengguna dalam jaringan internet ini tentu saja dengan tujuan mengumpulkan dan mengirimkan sumber daya yang meliputi informasi, pesan, dan data. Sayangnya, sekarang ini komputer dan internet menjadi lahan baru untuk kejahatan di dunia maya atau disebut dengan cybercrime.
Cybercrime # Seperti yang pernah disampaikan Janet Reno, Seorang General Advocate Amerika Serikat di masa pemerintahan Bill Clinton, “While the Internet and other data technologies are conveying tremendous advantages to humanity, they furthermore supply new possibilities for lawless individual behavior” (Dasey, Pp. 5-19). Disaat internet dan teknologi pengiriman data lainnya memberikan keuntungan yang luar biasa untuk manusia, maka akan menimbulkan kemungkinan perilaku hukum yang baru untuk individu yang ada didalamnya. Dalam hal ini perilaku yang baru dari sudut pandang hukum dapat dikategorikan kedalam cybercrime.
Cybercrime secara kasar dicirikan sebagai melakukan sebuah tindakan illegal serta bertentangan dengan hukum melalui penggunaan media komputer dan jaringan internet. Semua bentuk cybercrime baik yang dilakukan individu maupun sebuah kelompok sifatnya pasti merugikan dan mempengaruhi efisiensi keamanan informasi dalam sebuah sistem informasi.
Jaringan internet juga menjadi tempat yang ideal untuk penjahat dan teroris untuk melaksanakan tindakan serta kegiatan operasi mereka. Oleh karena itu, cybercrime dan cyber terorism menjadi dua ancaman paling serius yang menghantui dunia khususnya dunia barat. Dengan adanya Cyber terorism dapat mengakibatkan cyber war ataupun perang cyber, diartikan sebagai perang antar negara yang memanfaatkan komputer dan media jaringan internet yang menyebabkan kehancuran yang lebih fatal dari pada kehancuran secara fisik.
Dengan berkembangnya ilmu pengetahuan, seorang hacker memasuki daerah yang terlarang untuk mendapatkan akses informasi menggunakan metode yang juga lebih canggih. Serangan paling umum pada sistem komputer dan jaringan adalah penciptaan dan penyebaran kode berbahaya yang disebut dengan &ldquo;Virus&rdquo;. Virus komputer adalah program komputer yang ditulis khusus untuk merusak sistem komputer lainnya di dalam jaringan.
Terkadang program-program berbahaya dan disisipkan dalam software dikenal sebagai &ldquo;Trojan horse&rdquo; akan disalin tanpa sepengetahuan pengguna (Richards, Pp. 21-54). Rata-rata hacker berusia antara dua puluhan karena biasanya mereka lebih tertantang untuk memecahkan kode suatu program keamanan, phising, mencuri password ke komputer dalam jaringan serta menggunakan account mereka untuk bertransaksi di dunia maya, masuk ke jaringan perusahaan, perbankan, bahkan ada juga yang menyusup ke sistem jadwal penerbangan dan menciptakan kekacauan jadwal penerbangan.
Cybercrime juga tidak terlepas dari cracking yang merupakan suatu bentuk kejahatan yang sama dengan yang dilakukan hacker tetapi berbeda dalam hal intrusi informasi. Cracker adalah orang yang melakukan tindakan cybercrime dengan cara membajak perangkat lunak komersial, menghancurkan sistem yang kompleks dengan melakukan transmisi virus.
Cracker identik dengan The Pirates of the cyber , pembajak di dunia maya yang dianggap sebagai Robih Hood Modern yang menuntut kebebasan dan menolak batasan akses ke media elektronik(Whitman &amp; Mattord, Pp. 205-249).
Cracker berbeda dengan hacker karena mereka tidak memiliki ideologi apapun ketika mereka melakukan &ldquo;pekerjaan&rdquo;. Sebaliknya, tujuan utama dari hacker adalah untuk tidak menjadi penjahat, tetapi lebih kepada &ldquo;perjuangan melawan ketidakadilan&rdquo; yang biasanya digunakan sebagai semboyan dalam setiap kegiatannya.
Adanya keterbukaan informasi di masa sekarang ini, mempelajari teknik hacking termasuk sangat mudah anda hanya perlu pengetahuan dalam menerima dam mengirim email, maka anda sudah dapat memulai sebuah hacking. Dalam berbagai komunitas anda akan diberikan panduan dimana anda dapat mendowload program yang cocok untuk hacking sebuah sistem dan biasanya program ini bersifat gratis. Mereka mencoba untuk menjelaskan beberapa trik mudah menjadi hacker dan dapat digunakan tanpa menyebabkan kerusakan yang disengaja (Tipton &amp; Krause, Pp. 320-386).
Jenis-jenis Ancaman terhadap Keamanan Jaringan # Berikut ini Jenis ancaman terhadap keamanan jaringan; Malicious insider # Orang dalam dengan niat jahat (malicious insiders) melancarkan serangannya dengan berbagai motif, mulai dari ketidakpuasan pribadi hingga keinginan untuk menjual data perusahaan. Perusahaan sebenarnya sudah lebih siap menghadapi serangan dari luar, namun serangan masih banyak terjadi, setelah diinvestigasi, ternyata serangan berasal dari dalam.
Sementara itu, pihak dalam yang tidak berniat jahat (well-meaning insiders) umumnya membuka celah serangan karena ketidaktahuan dalam dunia IT.
Misalnya karena tidak tahu bahayanya mengklik link atau men- download secara sembarangan. Serangan dari dalam saat ini menjadi tren, bahkan menjadi sumber serangan dengan perkembangan tercepat. Para orang dalam berbahaya digolongkan sebagai masalah keamanan terbesar karena mereka memiliki akses.
Malicious code # Malicious Code, kode jahat atau kode perusak disingkat dengan malcode, kode jahat atau kode perusak didefinisikan sebagai semua macam program yang dapat diesekusi dan dibuat dengan tujuan untuk merusak sistem komputer.
Kebanyakan pengirim malicious code ini cenderung memiliki tujuan secara ekonomi yaitu memperoleh keuntungan, sehingga masalah malicious code ini menjadi masalah yang kritis di dunia industri, pemerintahan, maupun individu.
Serangan malicious code pada sebuah instansi yang bersifat komersial dapat mengakibatkan kerugian material serta kerugian waktu karena sifatnya merusak dan perusahaan harus membayar mahal kepada pihak lain untuk memperbaiki sistem.
Web-based Attacks # Serangan berbasis web berhubungan dengan integritas, kerahasiaan serta ketersediaan informasi dalam sebuah website. Seorang attacker memanfaatkan kelemahan ataupun bugs suatu website untuk memanipulasi dan medapatkan akses serta mengumpulkan informasi berharga dari sebuah perusahaan.
Denial of Service (DoS) # Denial of Service atau sering disebut DoS, merupakan sejenis web-based attacks dengan melakukan serangan terhadap sebuah komputer atau server di dalam jaringan internet dengan cara menghabiskan sumber (resource) yang dimiliki oleh komputer tersebut sampai komputer tersebut tidak dapat menjalankan fungsinya dengan benar sehingga secara tidak langsung mencegah pengguna lain untuk memperoleh akses layanan dari komputer yang diserang tersebut.
Dalam sebuah serangan Denial of Service, si penyerang akan mencoba untuk mencegah akses seorang pengguna terhadap sistem atau jaringan dengan menggunakan beberapa cara, yakni sebagai berikut:
Membanjiri lalu lintas jaringan dengan banyak data sehingga lalu lintas jaringan yang datang dari pengguna yang terdaftar menjadi tidak dapat masuk ke dalam sistem jaringan. Teknik ini disebut sebagai traffic flooding. Membanjiri jaringan dengan banyak request terhadap sebuah layanan jaringan yang disedakan oleh sebuah host sehingga request yang datang dari pengguna terdaftar tidak dapat dilayani oleh layanan tersebut. Teknik ini disebut sebagai request flooding. Stolen Device # Stolen device atau kehilangan secara fisik terhadap perangkat keras. Kerugian yang diakibatkan oleh Stolen Device termasuk yang paling besar karena nilainya sama dengan hasil penjumlahan harga perangkat dan harga informasi di dalamnya.
Penerapan standarisasi penempatan perangkat fisik sangat dibutuhkan untuk menjamin secara fisik terhadap keamanan jaringan.
Phishing dan Social Engineering # Tindakan Phishing atau pengelabuan adalah suatu bentuk penipuan yang dicirikan dengan percobaan untuk mendapatkan informasi rahasia, seperti kata sandi dan kartu kredit, dengan menyamar sebagai orang atau bisnis yang tepercaya dalam sebuah komunikasi elektronik resmi, seperti email atau pesan instan.
Tindakan Phishing biasa juga dilakukan melalui website palsu yang tampak asli kemudian pengguna diminta memberikan data sensitif seperti kode akses rekening bank.
Malware # Malware, kependekan dari perangkat lunak berbahaya, adalah software yang dirancang untuk mengganggu pengoperasian komputer, mengumpulkan informasi sensitif, atau mendapatkan akses ilegal ke sistem computer.
Dalam istilah umum Malware menggambarkan setiap jenis perangkat lunak atau kode khusus dirancang untuk mengeksploitasi komputer, atau data yang dikandungnya tanpa persetujuan.
Istilah ini adalah istilah umum yang digunakan oleh profesional komputer untuk mengartikan berbagai bentuk perangkat lunak, mengganggu, atau menjengkelkan karena kadang- kadang malware menyamar sebagai perangkat lunak asli, dan mungkin berasal dari situs resmi perusahaan.
Botnet # Botnet dapat diasosiasikan sebagai sebuah zombie atau mayat hidup yang dapat diperintah untuk melakukan kegiatan yang kita inginkan. Maksudnya disini adalah sebuah komputer yang terinfeksi oleh trojan atau jenis virus lain yang membuat sebuah komputer tidak berjalan sebagaimana mestinya karena menjalankan perintah- perintah dari si pembuat botnet tersebut.
Botnet tidak lebih dari sebuah tool yang digunakan untuk banyak motif yang diinginkan oleh si pembuat botnet. Kebanyakan botnet digunakan untuk kegiatan kriminal (aktifitas mendatangkan uang) atau untuk menghancurkan.
Virus # Virus komputer merupakan program komputer yang dapat menggandakan atau menyalin dirinya sendiri dan menyebar dengan cara menyisipkan salinan dirinya ke dalam program atau dokumen lain. Virus komputer menyebar di dalam komputer dan menjadi aktif ketika sebuah program dijalankan atau komputer diboot.
Virus berpindah dari satu komputer ke lainnya melalui media seperti disket, CD, atau attachment e- mail. Kebanyakan virus mendeaktivasi fungsi-fungsi penting atau menghapus data.
Worm # Berbeda dengan virus, WORM menyebar secara mandiri melalui jaringan/LAN ataupun Internet. Untuk itu, ia menggunakan alamat-alamat dalam address book program e-mail, atau memanfaatkan celah keamanan Windows. Ia berisi program perusak yang berperilaku seperti virus.
Trojan # Program ini menyamar sebagai aplikasi berguna, tapi tanpa diketahui menimbulkan kerugian. Sasarannnya adalah informasi sensitif seperti nomor kartu kredit atau kode akses untuk online banking kemudian informasi tersebut dikirimkan ke pembuat Trojan.
Referensi # Ringkasan dari IJCSNS International Journal of Computer Science and Network Security, VOL.12 No.2, February 2012: Cybercrime: A threat to Network Security oleh Ammar Yassir and Smitha Nayak, Department of Computing, Muscat College, Sultanate of Oman
Sebagai salah satu tugas kuliah saya
`}),e.add({id:52,href:"/alamat-ipv4-pengalamatan-internet-protocol-versi-4/",title:"Alamat Ipv4: Pengalamatan Internet Protocol Versi 4",description:"IP (Internet Protocol) Address Versi 4 sering disebut dengan Alamat IPv4 merupakan sebuah sistem pengalamatan 32-bit yang digunakan di dalam protokol jaringan TCP/IP sebagai alamat identifikasi untuk tiap host dalam jaringan Internet.",content:`IP Address (Internet Protocol) Versi 4 # IP (Internet Protocol) Address Versi 4 sering disebut dengan Alamat IPv4 merupakan sebuah sistem pengalamatan 32-bit yang digunakan di dalam protokol jaringan TCP/IP sebagai alamat identifikasi untuk tiap host komputer dalam jaringan Internet.
IPv4 disebut dengan sistem pengalamatan 32 bit karena total jumlah bit ip dalam biner adalah sebanyak 32 bit yang dibagi kedalam 4 oktet/blok. Dalam penerapannya dan untuk lebih mudah mengingatnya ke empat oktet/blok tersebut di representasikan kedalam bentuk desimal dan dipisahkan dengan.(titik).
Pengalamatan IPv4 berbeda dengan pengalamatan pada IPv6 yang menggunakan skema 128 bit dan direpresentasikan dalam bentuk heksadesimal.
Contoh IPv4 # Contoh format IPv4 seperti 192.168.0.1 . Dikonversi kedalam biner mejadi 11000000.10101000.00000000.00000001 (total 32 bit dan dipisahkan oleh tanda titik) jadi maksimal format pengalamatan IPv4 adalah 255.255.255.255 atau dalam biner 11111111.11111111.11111111.11111111. Lebih lengkapnya dapat dilihat pada tabel dibawah;
Ket Oktet 1(W) Oktet 2 (X) Oktet3 (Y) Oktet 4 (Z) Format IP(Decimal) 192 168 0 1 Format IP(Biner) 11000000 10101000 00000000 00000001 Max IP 255 255 255 255 Max IP(Bin) 11111111 11111111 11111111 11111111 Total Max Bit 32 bit Alamat IP versi 4 dibagi ke dalam beberapa kelas, yang menjadi pembeda kelas IP v4 adalah pola biner yang terdapat dalam oktet pertama /high-order bit
Pembagian kelas IPv4 # Kelas Alamat Oktet 1(W) Digunakan oleh Bagian untuk Network Indentifier Bagian untuk Host Indentifier Jlh.Jaringan Maksimum Jlh. Host dalam satu jaringan(max) Kelas A 1–126 Alamat unicast untuk jaringan skala besar W X.Y.Z 126 16,777,214 Kelas B 128–191 Alamat unicast untuk jaringan skala menengah hingga skala besar W.X Y.Z 16,384 65,534 Kelas C 192–223 Alamat unicast untuk jaringan skala kecil W.X.Y Z 2,097,152 254 Kelas D 224-239 Alamat multicast (bukan alamat unicast) Multicast IP Address Multicast IP Address Multicast IP Address Multicast IP Address Kelas E 240-255 Direservasikan;umumnya digunakan sebagai alamat percobaan(eksperimen); (bukan alamat unicast) Dicadangkan; eksperimen	Dicadangkan; eksperimen	Dicadangkan; eksperimen	Dicadangkan; eksperimen Alamat dengan oktet awal 127 tidak diizinkan, karena digunakan untuk mekanisme Interprocess Communication (IPC) di dalam mesin yang bersangkutan atau biasa juga disebut localhost.
Alamat unicast # Setiap antarmuka (interface) jaringan yang menggunakan protokol TCP/IP harus diidentifikasikan dengan menggunakan sebuah alamat logis yang unik, yang disebut dengan alamat unicast (unicast address). Alamat unicast inilah yang harus digunakan oleh semua host TCP/IP agar dapat saling terhubung.
Komponen alamat ini terbagi menjadi dua jenis, yakni alamat host (host identifier) dan alamat jaringan (network identifier).
Network Identifier/NetID # Network Identifier/NetID atau Network Address (alamat jaringan), merupakan alamat yang digunakan khusus untuk mengidentifikasikan alamat jaringan di mana host tersebut berada.
Semua sistem di dalam sebuah jaringan fisik yang sama harus memiliki alamat network identifier yang sama. Network identifier juga harus bersifat unik dalam sebuah jaringan Internet
Host Identifier/HostID # Host Identifier/HostID atau Host address (alamat host), merupakan alamat yang digunakan khusus untuk mengidentifikasikan alamat host (dapat berupa workstation, server atau sistem lainnya yang berbasis teknologi TCP/IP) di dalam jaringan.
Alamat host identifier harus bersifat unik di dalam network identifier/segmen jaringan di mana ia berada. Sebuah alamat unicast dibedakan dengan alamat lainnya menggunakan skema subnet mask (akan bahas mengenai subnet mask pada artikel lain).
Intranet dan Internet # Sebuah intranet (jaringan local) yang tidak terkoneksi ke Internet, semua alamat IP dalam ruangan kelas alamat unicast dapat digunakan, tetapi jika koneksi dilakukan menggunakan teknik routing ataupun menggunakan proxy server maka ada dua jenis alamat yang dapat digunakan di dalam Internet, yaitu public address dan private address .
Public Address # Public Address adalah alamat-alamat yang berisi beberapa buah network identifier yang telah dijamin unik (artinya, tidak ada dua host yang menggunakan alamat yang sama) jika intranet tersebut telah terhubung ke Internet.
Pada kasus Internet, setiap node di dalam sebuah jaringan yang terhubung keInternet akan membutuhkan sebuah alamat yang unik secara global terhadap Internet. Karena perkembangan Internet yang sangat amat pesat, organisasi-organisasi yang menghubungkan intranet miliknya ke Internet membutuhkan sebuah alamat publik untuk setiap node di dalam intranet miliknya tersebut. Tentu saja, hal ini akan membutuhkan sebuah alamat publik yang unik secara global.
Private Address # Ketika menganalisis kebutuhan pengalamatan yang dibutuhkan oleh sebuah organisasi, para desainer Internet memiliki pemikiran yaitu kebanyakan host di dalam intranet organisasi tersebut tidak harus terhubung secara langsung ke Internet.
Host-host yang membutuhkan sekumpulan layanan Internet, seperti halnya akses terhadap web atau e-mail, biasanya mengakses layanan Internet tersebut melalui gateway yang berjalan di atas lapisan aplikasi seperti proxy server atau e-mail server.
Hasilnya, kebanyakan organisasi hanya membutuhkan alamat publik dalam jumlah sedikit saja yang nantinya digunakan oleh node-node tersebut (hanya untuk proxy, router, firewall) yang terhubung secara langsung ke Internet.
Untuk host-host di dalam sebuah organisasi yang tidak membutuhkan akses langsung ke Internet, alamat-alamat IP yang bukan duplikat dari alamat publik yang telah ditetapkan mutlak dibutuhkan.
Untuk mengatasi masalah pengalamatan ini, para desainer Internet mereservasikan sebagian ruangan alamat IP dan menyebut bagian tersebut sebagai ruangan alamat pribadi. Sebuah alamat IP yang berada di dalam ruangan alamat pribadi tidak akan digunakan sebagai sebuah alamat publik.
Alamat IP yang berada di dalam ruangan alamat pribadi dikenal juga dengan alamat pribadi atau Private Address dan jaringan yang menggunakan alamat IP privat disebut juga dengan jaringan privat atau private network.
Karena alamat-alamat IP di dalam ruangan alamat pribadi tidak akan ditetapkan oleh Internet Network Information Center (InterNIC) (atau badan lainnya yang memiliki otoritas) sebagai alamat publik, maka tidak akan pernah ada rute yang menuju ke alamat-alamat pribadi tersebut di dalam router Internet.
Kompensasinya, alamat pribadi tidak dapat dijangkau dari Internet. Oleh karena itu, semua lalu lintas dari sebuah host yang menggunakan sebuah alamat pribadi harus mengirim request tersebut ke sebuah gateway (seperti halnya proxy server), yang memiliki sebuah alamat publik yang valid, atau memiliki alamat pribadi yang telah ditranslasikan ke dalam sebuah alamat IP publik yang valid dengan menggunakan Network Address Translator (NAT) sebelum dikirimkan ke Internet.
Jenis Private Address # Berikut beberapa jenis Private Address;
10.0.0.0/8 # Jaringan pribadi 10.0.0.0/8 memiliki 24 bit host yang dapat digunakan untuk skema subnetting di dalam sebuah organisasi privat. alamat IP yang valid dari 10.0.0.1 hingga 10.255.255.254
172.16.0.0/12 # Jaringan pribadi 172.16.0.0/12 dapat diinterpretasikan sebagai sebuah block dari 16 network identifier kelas B atau sebagai sebuah ruangan alamat yang memiliki 20 bit yang dapat ditetapkan sebagai host identifier, yang dapat digunakan dengan menggunakan skema subneting di dalam sebuah organisasi privat. Alamat jaringan privat 172.16.0.0/12 mengizinkan alamat-alamat IP yang valid dari 172.16.0.1 hingga 172.31.255.254.
192.168.0.0/16 # Jaringan pribadi 192.168.0.0/16 dapat diinterpretasikan sebagai sebuah block dari 256 network identifier kelas C atau sebagai sebuah ruangan alamat yang memiliki 16 bit yang dapat ditetapkan sebagai host identifier yang dapat digunakan dengan menggunakan skema subnetting apapun di dalam sebuah organisasi privat. Alamat jaringan privat192.168.0.0/16 dapat mendukung alamat-alamat IP yang valid dari 192.168.0.1 hingga 192.168.255.254.
169.254.0.0/16 # Alamat IP yang mungkin dalam ruang alamat ini adalah 169.254.0.1 hingga 169.254.255.254, dengan alamat subnet mask 255.255.0.0. Alamat ini digunakan sebagai alamat IP privat otomatis (dalam Windows, disebut denganAutomatic Private Internet Protocol Addressing (APIPA)). Hasil dari penggunaan alamat-alamat privat ini oleh banyak organisasi adalah menghindari kehabisan dari alamat publik, mengingat pertumbuhan Internet yang sangat pesat.
Broadcast Address # Alamat Broadcast, merupakan alamat IPv4 yang didesain agar diproses oleh setiap node IP dalam segmen jaringan yang sama. Alamat broadcast untuk IP versi 4 digunakan untuk menyampaikan paket-paket data &ldquo;satu-untuk-semua&rdquo;.
Jika sebuah host pengirim yang hendak mengirimkan paket data dengan tujuan alamat broadcast, maka semua node yang terdapat di dalam segmen jaringan tersebut akan menerima paket tersebut dan memprosesnya. Berbeda dengan alamat IP unicast atau alamat IP multicast, alamat IP broadcast hanya dapat digunakan sebagai alamat tujuan saja, sehingga tidak dapat digunakan sebagai alamat sumber.
Multicast Address # Alamat multicast merupakan alamat IPv4 yang didesain agar diproses oleh satu atau beberapa node dalam segmen jaringan yang sama atau berbeda. Alamat IP Multicast (Multicast IP Address) adalah alamat yang digunakan untuk menyampaikan satu paket kepada banyak penerima.
Dalam sebuah intranet yang memiliki alamat multicast IPv4, sebuah paket yang ditujukan ke sebuah alamat multicast akan diteruskan oleh router ke subjaringan di mana terdapat host-host yang sedang berada dalam kondisi &ldquo;listening&rdquo; terhadap lalu lintas jaringan yang dikirimkan ke alamat multicast tersebut.
Dengan cara ini, alamat multicast pun menjadi cara yang efisien untuk mengirimkan paket data dari satu sumber ke beberapa tujuan untuk beberapa jenis komunikasi.
`}),e.add({id:53,href:"/keamanan-cloud-computing-manfaat-resiko-dan-kontrol/",title:"Keamanan cloud computing: Manfaat, Resiko dan Kontrol",description:"Keamanan cloud computing: Manfaat, Resiko dan Kontrol. Cloud computing atau komputasi awan  menyajikan model baru untuk layanan teknologi informasi yang melibatkan jaringan secara keseluruhan untuk melayani permintaan akses bersama yang terukur secara dinamis dan elastis serta memanfaatkan sumber daya virtual.",content:`Abstrak # Cloud computing atau komputasi awan menyajikan model baru untuk layanan teknologi informasi yang melibatkan jaringan secara keseluruhan untuk melayani permintaan akses bersama yang terukur secara dinamis dan elastis serta memanfaatkan sumber daya virtual. Cloud computing memiliki potensi untuk memperbaiki cara bisnis serta menawarkan kecepatan akses, fleksibilitas, skalabilitas dan efisiensi biaya. Meskipun cloud computing memberikan manfaat yang menarik dan hemat biaya serta memberikan berbagai pilihan penyimpanan data di bagian teknologi informasi untuk melakukan ekspansi, tetapi memberikan risiko dan peluang baru untuk eksploitasi bidang keamanan. Standar, kebijakan dan kontrol dibutuhkan untuk membantu manajemen dalam melindungi dan melakukan pengamanan data pada sistem. Manajemen harus memahami dan menganalisis risiko cloud computing untuk melindungi sistem dan data dari eksploitasi keamanan. Fokus dari makalah ini adalah pada pencegahan terhadap risiko keamanan cloud computing sebagai dasar langkah untuk memastikan lingkungan cloud computing yang aman.
Kata kunci: cloud computing; komputasi awan; manfaat; kontrol; risiko.
I. PENDAHULUAN # Selama tahun 1990-an, pusat penyimpanan data, penggunaan daya, pendinginan dan beban usaha meningkat dan mengarah pada adopsi terhadap grid computing atau sistem terdistribusi dan virtualisasi. Melalui sistem terdistribusi pengguna dapat menghubungkan dan menggunakan layanan secara bersama. Dengan memungkinkannya infrastruktur untuk virtualisasi dan berbagi layanan ke seluruh konsumen, penyedia jasa merasa perlu untuk mengubah model bisnis mereka dengan menyediakan layanan jarak jauh yang lebih rendah biaya.
Sebagai layanan yang menjadi lebih dan lebih terdistribusi, kebutuhan untuk integrasi dan manajemen jasa-jasa menjadi penting dan menyebabkan munculnya layanan berorientasi arsitektur atau service-oriented architecture (SOA). Cloud computing merupakan pengembangan dari service-oriented architecture (SOA) untuk menyediakan sumber daya IT sebagai sebuah layanan. Cloud computing memungkinkan layanan secara cepat dan elastis baik untuk sekala besar maupun skala kecil serta konsumen yang menggunakan layanan sesuai kebutuhan dan yang dibayar juga sesuai dengan sumber daya yang digunakan dalam infrastuktur jaringan.
Saat ini cloud computing mengubah struktur pelayanan bidang Teknologi Informasi kedalam model layanan jasa. Keuntungan bagi bisnis dan TI termasuk mengurangi biaya, skalabilitas, fleksibilitas, pemanfaatan kapasitas, mobilitas dan tingkat efisiensi yang lebih tinggi. Diprediksikan terjadi pertumbuhan dan perkembangan besar-besaran untuk implementasi dari layanan cloud computing, termasuk cloud computing untuk layanan pasar yang mencapai antara $ 150 Milyar pada tahun 2014 [1-2] dan $ 222.5 Milyar pada tahun 2015 [3].
Seperti permasalahan teknologi pada umumnya dalam cloud computing juga menimbulkan banyak masalah termasuk keamanan, manajemen dan kontrol, dampak untuk kelangsungan bisnis, peraturan dan perundang-undangan serta kurangnya standar dan pedoman implementasi. Dalam rangka meminimalkan dampak kekhawatiran terhadap resiko ini, mitigasi terhadap risiko adalah penting jika organisasi ingin mengambil keuntungan dan manfaat dari penggunaan teknologi cloud computing, sekaligus melindungi dan menjaga sistem dan data. Manajemen ditekankan untuk memastikan mitigasi terhadap resiko supaya mengurangi dampak pada bisnis. Strategi mitigasi risiko dan pelaksanaan kontrol ke tingkat yang lebih lanjut termasuk rumit karena standar dan pedoman yang berhubungan dengan keamanan cloud computing belum ada [4-6].
II. LATAR BELAKANG # A. Apa itu cloud computing # Lingkungan Teknologi Informasi berevolusi dari mainframe ke client server, internet, virtualisasi dan cloud computing. Cloud computing menyediakan penggunaan sumber daya secara bersama sama ataupun sharing (meliputi jaringan, perangkat lunak, pengolahan data, penyimpanan informasi). Penggunaan cloud computing sama halnya dengan aplikasi berbasis web. Kita sebagai pengguna mengakses aplikasi menggunakan web browser dan aplikasi yang digunakan layaknya seperti aplikasi yang di install pada komputer kita sendiri.
Layanan sumber daya pada teknologi cloud computing dapat berupa perangkat lunak (software-as-service), perangkat keras (infrastruktur-as-a-service), dan platform (platform-as-service). Sebagai layanan yang berskala besar dan elastis melalui infrastruktur jaringan, biaya penggunaan didasarkan kepada sumberdaya yang digunakan dan tergantung perjanjian tingkat layanan atau Service Level Agreement (SLA) antara penyedia layanan dan konsumen pengguna.
B. Arsitektur Cloud Computing # Dalam lingkungan teknologi informasi tradisional, aplikasi dan infrastruktur teknologi informasi lainnya bersifat real dan dimiliki secara fisik. Cloud computing menawarkan perangkat lunak, platform, penyimpanan atau infrastruktur di awan(cloud) dan berada di suatu tempat dalam sebuah jaringan. Infrastruktur cloud computing meliputi perangkat keras dan perangkat lunak. Arsitektur cloud computing didasarkan pada empat bagian yang terdiri dari bagian fisik yaitu perangkat keras meliputi server dan komponen jaringan, perangkat lunak seperti sistem operasi, sumber daya virtualisasi yang memungkinkan penyatuan dan berbagi sumber daya, dan layanan aplikasi seperti contoh Salesforce.com atau Google Apps.
Pengembang layanan menciptakan, menerbitkan, memberikan layanan dan memonitor aplikasi berbasis cloud untuk digunakan oleh konsumen. Manajemen, pengelolaan dan monitoring termasuk perencanaan kapasitas, jaminan keamanan kepada pelanggan, perjanjian tingkat layanan(SLA), laporan, penagihan, merupakan beberapa hal penting dalam cloud computing untuk memberikan transparansi antara penyedia layanan dan konsumen.
C. Karakteristik cloud computing # The US National Institute of Standard and Technology (NIST) menetapkan setidaknya lima kriteria yang harus dipenuhi oleh sebuah sistem untuk bisa di masukkan dalam kriteria cloud computing, juga dijelaskan oleh Mell and Grance [7], yaitu on-demand self-service (layaknya swalayan, seorang pelanggan dimungkinkan untuk secara langsung “memesan” sumber daya yang dibutuhkan, seperti kecepatan prosessor dan kapasitas penyimpanan melalui control panel elektronis yang disediakan.
Jadi tidak perlu berinteraksi dengan personil customer service jika ingin menambah atau mengurangi sumberdaya cloud yang diperlukan), Broadband Network Access(tersedianya kemampuan akses yang luas dalam infrastruktur jaringan), Resource pooling (Sumberdaya dikelompokkan di satu atau berbagai lokasi data center dengan mekanisme multi-tenant yang memungkinkan sejumlah sumberdaya tersebut digunakan secara bersama-sama oleh sejumlah user), Rapid elasticity(elastis dan cepat tersedia, baik itu dalam bentuk penambahan ataupun pengurangan kapasitas yang diperlukan, seolah-olah kapasitas yang tersedia tak terbatas besarnya, dan dapat “dibeli” kapan saja dengan jumlah berapa saja.), Measured Service (Sumberdaya cloud yang tersedia harus dapat diatur dan dioptimasi penggunaannya, jumlah sumberdaya yang digunakan dapat secara transparan diukur yang akan menjadi dasar bagi user untuk membayar biaya penggunaan layanan).
D. Model penyebaran cloud computing # Penyebaran teknologi dan layanan cloud computing dibagi beberapa jenis berdasarkan karakteristik dan tujuan. Penyebaran meliputi publik (eksternal), private (internal), community, hybrid dan virtual private cloud. Public cloud adalah di mana semua sumberdaya yang disediakan penyedia layanan kepada konsumen seperti penyimpanan data dan aplikasi diintegrasikan melalui aplikasi web atau dengan layanan web di dalam jaringan internet. Sumber daya tersebut dikendalikan dan dikelola oleh penyedia layanan. Ini biasanya murah atau on-demand self-service dan measured service [6-12]. Private Cloud merupakan sebuah infrastruktur cloud yang dioperasikan untuk satu organisasi. Ini dapat dikelola oleh organisasi atau pihak ketiga. Layanan private cloud menawarkan penyediaan dan penggunaan serta kontrol yang lebih besar atas infrastruktur cloud.
Community cloud dikendalikan dan dimiliki oleh beberapa organisasi dan didukung komunitas tertentu yang telah berbagi kepentingan seperti misi, kebijakan, persyaratan keamanan dan kepatuhan atas berbagai pertimbangan yang dibuat. Ini dapat dikelola oleh organisasi atau pihak ketiga dan anggota berbagi akses community cloud terhadap data dan aplikasi. Pengguna Community cloud merupakan pengguna yang berusaha untuk mengeksploitasi skala ekonomi dan meminimalkan biaya yang berkaitan dengan private cloud dan risiko yang terkait dengan public cloud [6 12].
Hybrid cloud merupakan kombinasi dari dua atau lebih computing cloud (private, community atau public) dan terikat oleh standar atau teknologi eksklusif yang memungkinkan portabilitas data dan aplikasi. Ada kalanya pengguna public cloud kemudian menyediakan infrastruktur untuk menciptakan private atau semi-private virtual cloud (Interkoneksi ke sumber daya internal), biasanya melalui koneksi Virtual Private Network (VPN) [13].
E. Model layanan cloud computing # Layanan cloud computing dibagi menjadi tiga kategori yaitu Software-as-a-Service (SaaS), Platform-as-a-Service (PaaS) dan Infrastruktur-as- a-Service (IaaS). SaaS memberikan kemudahan bagi pengguna untuk bisa memanfaatkan sumberdaya perangkat lunak dengan cara berlangganan. Sehingga tidak perlu mengeluarkan investasi untuk pembelian lisensi. Dengan cara berlangganan via web, pengguna dapat langsung menggunakan berbagai fitur yang disediakan oleh penyedia layanan. Hanya saja dengan konsep SaaS ini, pelanggan tidak memiliki kendali penuh atas aplikasi yang mereka sewa. Hanya fitur-fitur aplikasi yang telah disediakan oleh penyedia saja yang dapat disewa oleh pelanggan.
PaaS adalah layanan yang menyediakan modul-modul siap pakai yang dapat digunakan untuk mengembangkan sebuah aplikasi, yang tentu saja hanya bisa berjalan diatas platform tersebut. Pengguna PaaS tidak memiliki kendali terhadap sumber daya cloud seperti memory, media penyimpanan, system operasi. Layanan pada PaaS meliputi desain aplikasi, pengembangan, pengujian, penyebaran, hosting, kolaborasi tim, integrasi layanan web, integrasi database, keamanan, skalabilitas, penyimpanan, manajemen lokasi dan versi [6-7, 9, 12, 14-22].
IaaS merupakan sebuah layanan yang “menyewakan” sumberdaya teknologi informasi dasar, yang meliputi server, system operasi, aplikasi, media penyimpanan, virtualisasi platform dan peralatan jaringan serta dapat digunakan oleh penyewa untuk menjalankan aplikasi yang dimilikinya. IaaS memungkinkan pelanggan melakukan penambahan/pengurangan kapasitas secara fleksibel dan otomatis. IaaS menawarkan keuntungan seperti skalabilitas, efektivitas biaya dan fleksibilitas [6-7, 9, 12, 14-22].
Terlepas dari SaaS, PaaS dan model layanan IaaS, alaternatif lain untuk layanan cloud computing meliputi Communication-as-a-Service (CaaS); Security-as-a-Service (SECaaS); Monitoring-as-a-Service (MaaS); Storage-as-a- Service (STaaS); Desktop-as-a-Service (DTaaS); Compute Capacity-as-a-Service (CCaaS); Database-as-a-Service (DBaaS); Hardware-as-a-Service (HaaS); IT-as-a-Service (ITaaS); and Business Process-as-a-Service (BPaaS).
F. Keamanan cloud computing # Meskipun layanan dan karakteristik cloud computing memberikan keuntungan dan solusi menarik untuk masalah Teknologi Informasi, cloud computing tidak bebas risiko atau benar-benar aman. Manajemen bertanggung jawab untuk menangani risiko keamanan untuk melindungi sistem dan data. Penerapan kebijakan dan prosedur terhadap pengendalian resiko cloud computing ini penting untuk menjamin konerja dan keamanan data. Kebijakan dan prosedur harus didasarkan pada praktek terbaik dan harus selaras antara bisnis dan tujuan TI.
Identifikasi risiko dan analisis penting untuk memprioritaskan pelaksanaan (jangkauan dan time frame) penataan dan kontrol, serta untuk membangun ruang audit untuk meninjau penerapan cloud computing. Berdasarkan identifikasi dan analisis risiko, kontrol harus dirancang dan dilaksanakan untuk memastikan bahwa tindakan yang dilakukan adalah untuk mengatasi risiko dan untuk mencapai bisnis dan tujuan TI.
III. MANFAAT CLOUD COMPUTING # Pertumbuhan pasar untuk layanan cloud computing sekitar $ 46.3 milyar pada tahun 2008 dan $148.8 milyar sampai dengan $150 milyar pada tahun 2014 serta 222.5 milyar pada tahun 2015 [1-3]. Pengeluaran biaya untuk cloud computing diperkirakan meningkat dari $ 16 miliar pada 2008 menjadi sekitar $ 55 miliar pada tahun 2014 [23-24]. Prediksi pertumbuhan ini berdasarkan pada realisasi banyaknya manfaat dari cloud computing.
Cloud computing memberikan penghematan biaya dalam bidang TI termasuk biaya operasional dan pemeliharaan yang lebih rendah; kurangnya pembelian perangkat keras; tidak ada biaya untuk ruang pendingin perangkat, bangunan dan penyimpanan sumberdaya karena semuanya beralih ke penyedia layanan, biaya yang dibayar hanya untuk jenis layanan yang digunakan(Measured Service).
Cloud computing juga memungkinkan organisasi untuk menjadi lebih kompetitif karena platform cloud computing yang fleksibel dan memiliki performa tinggi, menyediakan sumberdaya aplikasi dan data yang memiliki skalabilitas dan kinerja tinggi. Melalui cloud computing, departemen TI menghemat pengembangan aplikasi, distribusi, keamanan, dan pemeliharaan waktu dan biaya, sekaligus memetik manfaat dari skala ekonomi. Cloud computing membantu organisasi untuk mengurangi daya (‘going green’), peyimpanan, pendinginan dan penggunaan ruang server.
Migrasi ke cloud computing mengurangi infrastruktur yang ada dan sumber daya yang dapat dialokasikan untuk tugas yang lebih strategis. Manfaat cloud computing terdapat pada gambar dibawah, dimulai dari level tertinggi sampai dengan level terendah.
Gambar 1. Manfaat cloud computing
Efisiensi biaya adalah pendorong utama untuk mengadopsi cloud computing. Manfaat utama lainnya termasuk skalabilitas, fleksibilitas, performance, efisiensi, integritas, pengembangan yang cepat, distribusi dan manajemen perubahan yang lebih baik serta kinerja dan mobilitas yang lebih tinggi. Peningkatan otomatisasi, dukungan dan manajemen keamanan.
IV. RESIKO CLOUD COMPUTING # Meskipun beralih ke cloud computing menawarkan banyak solusi, tetapi cloud computing bukan tanpa resiko atau benar-benar aman. Sebuah pemahaman menyeluruh dan mitigasi risiko keamanan merupakan langkah penting menuju implementasi dan pemanfaatan cloud computing. Gambar. 2 menyajikan daftar risiko yang teridentifikasi. Dengan aplikasi dan data yang dikelola oleh penyedia layanan, data tidak lagi di bawah kendali manajemen dan rentan terhadap ancaman keamanan dan kerahasiaan data.
Hosting aplikasi dan data dalam infrastruktur bersama yang dikelola penyedia layanan meningkatkan potensi akses yang tidak sah seperti privasi karyawan, identitas manajemen, otentikasi, integritas, ketersediaan data, enkripsi, keamanan jaringan dan keamanan fisik. Selain keamanan risiko, masalah lain termasuk SLA dan manajemen pihak ketiga (layanan penyedia), kualitas layanan, manajemen kontrol, beban kerja manajemen, kinerja, pengendalian perubahan, ketersediaan layanan, kurangnya monitoring dan manajemen peralatan, transparansi, kepatuhan terhadap hukum dan peraturan, portabilitas, kurangnya standar dan audit serta standard kelayakan cloud computing.
Berdasarkan wawancara tehadap responden mengenai penggunaan cloud computing, besarnya resiko keamanan dinilai mencapai 91,7 persen untuk pengimplementasian, perencanaan kelangsungan bisnis menjadi risiko kedua yang paling kritis, dengan nilai 66,7 persen. Standar, kebijakan dan kontrol untuk manajemen operasi, manajemen perubahan, pihak ketiga / layanan tingkat manajemen, interface management, dan peraturan perundang-undangan dinilai sebagai &lsquo;agak penting &rsquo; untuk mitigasi risiko.
Hasil dari wawancara tersebut menguatkan pentingnya untuk memastikan bahwa lingkungan cloud cukup dilindungi dan aman. Membangun kontrol dan standarisasi merupakan langkah penting untuk mengamankan lingkungan cloud computing.
Tabel 1. Resiko yang paling kritis pada cloud computing
Risk Area Critical Somewhat Important Not so Important Infromation accurity 91,7 % 8,3 % 0,0 % Operations management 41,7 % 58,3 % 0,0 % Change management 41,7 % 50,0 % 8,3 % Disaster recovery business contilulty management 66,7 % 33,3 % 0,0 % Third-party service level management 41,7 % 41,7 % 16,7 % Interface management 8,3 % 50,0% 41,7 % Regulations and legislation 33,3 % 41,7 % 25,0 % Gambar 2. Resiko cloud computing V. MITIGASI RISIKO KEAMANAN CLOUD COMPUTING # Mitigasi risiko yang memadai merupakan strategi yang harus dikembangkan dan diikuti untuk memastikan risiko keamanan dan perlindungan data serta aplikasi pada cloud computing. Pengamanan yang tepat pada sistem dan perlindungan terhadap data bisnis yang berharga tetap menjadi tanggung jawab manajemen walaupun data dan sistem di-host di cloud dan dikelola oleh penyedia layanan.
Melalui tinjauan literatur yang luas, berikut tujuan yang di diidentifikasi sebagai pengendalian penting atau mitigasi risiko terhadap keamanan cloud computing: data security, administration and control(keamanan data, administrasi dan kontrol); logical access(akses logis); network security(keamanan jaringan); physical access(akses fisik); compliance(kepatuhan); dan virtualization(virtualisasi). masing-masing tujuan-tujuan ini dibahas lebih rinci dalam bagian berikutnya.
Rekomendasi ini membentuk langkah pertama dalam menyiapkan kerangka lengkap untuk mengurangi risiko keamanan di lingkungan cloud computing. Sebagian besar risiko keamanan dan kontrol berikutnya, dijelaskan dalam sisa tulisan ini.
A. Data Security, Administration And Control # Keamanan data merupakan resiko penghalang terbesar untuk penerapan cloud computing. Beberapa bisnis masih enggan untuk pindah data dan aplikasi ke cloud, terutama data yang sangat penting untuk bisnis, karena risiko kebocoran data rahasia yang mengarah ke privasi, kurangnya kontrol atas data dan aplikasi, ketersediaan data pada layanan cloud, risiko penurunan integritas data, dan perlindungan yang tidak efektif dalam transmisi data, back-up karena enkripsi yang tidak memadai.
1. Kerahasiaan data # Infrastruktur cloud computing yang memungkinkan akses dan penggunaan secara bersama menimbulkan masalah privasi data, termasuk konsekuesi hukum akibat adanya penyimpangan penggunaan terhadap informasi rahasia suatu bisnis. Dengan menyediakan penyimpanan data secara eksternal pada penyedia jasa layanan, meningkatkan kerentanan data sedang diakses atau disalin oleh orang yang tidak berhak; ancaman privacy data dapat berasal dari pihak internal (penyedia layanan, pengguna dalam perusahaan), dan kebocoran data bisa terjadi karena kegagalan hak akses keamanan di beberapa domain, kegagalan sistem pengiriman data secara elektronik dan fisik pada saat melakukan proses back-up pada jaringan cloud [6, 20].
Mitigasi:
Informasi yang diperbolehkan diakses di cloud harus diidentifikasi dan diklasifikasikan secara tepat. Penyedia layanan cloud computing harus membuktikan kepada pelanggan terhadap efektivitas pengendalian privasi data. Penyedia layanan cloud computing juga harus memiliki sumberdaya manusia disertai pengetahuan yang memadai dan keterampilan untuk mendeteksi dan bereaksi terhadap pelanggaran keamanan pada waktu yang tepat. Audit pihak ketiga harus dilakukan secara berkala untuk memantau penyedia layanan cloud terhadap persyaratan yang ditetapkan, standard, prosedur dan kebijakan untuk memastikan bahwa tidak ada perubahan besar terhadap prosedur standar atau kebijakan layanan[26-27].
2. Kontrol terhadap data # Solusi cloud mengakibatkan sulitnya untuk menjaga keamanan, privacy data, pencurian identitas dan cybrcrime. perusahaan tidak memiliki control langsung terhadap data yang disimpan pada penyedia layanan. Sebuah perusahaan dalam cloud yang melakukan pelanggaran hukum dan adanya tindakan penyitaan data dapat menyebabkan data rahasia semua perusahaan yang berada dalam satu penyedia layanan cloud akan ikut terekspos[20].
Mitigasi:
Audit pihak ketiga harus dilakukan secara teratur untuk memantau penyedia layanan cloud computing terhadap kepatuhan akan kesepakatan, efektifitas pelaksanaan, kepatuhan terhadap kebijakan keamanan, prosedur dan standar. Penyedia layanan cloud harus memberikan transparansi operasional, kontrol, dan keamanan pada layanan cloud computing[16, 22, 28-30].
3. Ketersediaan data dan layanan # Prosedur pemulihan data(recovery) harus teruji dan terencana karena sangat penting dalam hal menjamin ketersediaan layanan dan data. Risiko lainnya termasuk kerahasiaan data dapat menghambat prosedur pengujian back-up dan restore data; dan jika terjadi insiden, pelanggan cloud lainnya dapat mendapat prioritas tinggi dalam proses recovery data [6, 20, 26, 28-29, 31].
Mitigasi:
Data harus tersedia dan di back-up, harus disertai skema recovery data yang efektif untuk mencegah kehilangan data, menimpa data yang tidak di inginkan atau rusak. Penyedia layanan cloud harus memiliki backup dan kebijakan replikasi data serta menyimpan bukti auditable yang cukup untuk prosedur restore data termasuk recovery data secara akurat, lengkap dan tepat waktu [13, 26, 31].
Karena cloud computing didasarkan pada layanan penyimpanan data, kelangsungan hidup data disaat penyedia layanan keluar dari bisnis atau tidak beroperasi lagi menjadi sebuah resiko utama.
Mitigasi:
Penyedia layanan cloud harus mendukung interoperabilitas yang memenuhi standar untuk memastikan migrasi data serta kemampuan untuk integrasi ke penyedia layanan lain.
Ketergantungan pada internet sebagai media utama untuk transfer dan pengolahan data menyebabkan masalah ketersediaan konektivitas dan kecepatan bandwidth[6, 19].	Konektivitas internet dan keterbatasan kecepatan bandwidth harus dipertimbangkan terlebih dahulu sebelum memutuskan untuk beralih ke cloud computing serta harus melakukan seleksi terhadap penyedia jasa layanan jaringan yang sesuai.
Mitigasi:
Penyedia layanan jaringan dan manajemen harus menyediakan provisi yang memadai mengenai kemampuan jaringan dan kecepatan bandwidth. Monitoring jaringan merupakan inti untuk memastikan keseimbangan antara kebutuhan dan beban dalam jaringan[33].
4. Integritas Data # Integritas jaringan, aplikasi, database dan aplikasi (sharing)yang digunakan bersama dalam sistem, lingkungan cloud secara global terancam oleh banyak vulnerabilities atau kerentanan jika tidak dilakukan patch dengan memadai dan tepat waktu [20, 31, 34].
Mitigasi:
Tanggung jawab untuk melakukan manajemen patch yang efisien harus didefinisikan secara jelas. Kebijakan manajemen patch dan prosedur harus dilaksanakan. Pertimbangkan patch virtual dan layanan manajemen patch secara otomatis [20,31, 34].
Risiko lain di lingkungan cloud computing adalah perubahan tidak sah terhadap data dan sistem oleh penyedia layanan yang dapat mempengaruhi integritas dan ketersediaan data dan aplikasi [6, 20, 31, 34].
Mitigasi:
Semua perubahan di lingkungan cloud harus dikelola untuk meminimalkan kemungkinan gangguan, perubahan tidak sah, atau kesalahan. Penyedia layanan cloud harus mematuhi standard siklus hidup pengembangan system, System Development Life Cycle (SDLC).
Penyedia layanan harus menyimpan bukti auditable bahwa tidak ada perubahan tidak sah terjadi selama jangka waktu yang ditentukan [6, 20, 31, 34].
Mitigasi:
Karena sumber daya sistem tidak efektif dipisahkan antar pelanggan maka integritas data dalam lingkungan penyimpanan cloud yang kompleks dapat memberikan ancaman terhadap integritas data [6].	Segregasi data harus ditegakkan dengan perimeter defenisi keamanan yang benar dan konfigurasi aman pada sistem cloud [6].
5. Enkripsi Data # Sebuah resiko besar dalam lingkungan cloud computing adalah enkripsi yang tidak memadai dan manajemen data. Lingkungan cloud dibagi dengan banyak penyewa, dan penyedia layanan memiliki akses istimewa ke data sehingga memunculkan risiko dari kebocoran data atau akses tidak sah ke penyimpanan data.
Pengiriman data yang bersifat sensitive melalui jaringan meningkatkan resiko pembajakan atau kebocoran data. Data pada disk atau dalam lingkungan perusahaan juga tidak terlepas dari ancaman dari pihak penyedia layanan cloud yang berbahaya[6, 13, 16, 20, 30, 34].
Mitigasi:
Enkripsi harus didasarkan pada standard industri dan pemerintah. Manajemen password atau sandi yang efektif mencakup perlindungan terhadap database, lalu lintas pengiriman data, akses ke database yang menyimpan password harus menggunakan permission bertingkat; disertai solusi backup untuk keamanan data dan recovery untuk pemulihan data [6, 13, 16, 20, 30, 34].
Algoritma kriptografi yang menggunakan metode tidak efektif dapat menghasilkan enkripsi yang lemah.
Mitigasi:
Harus dilakukan metode kontrol dan manajemen kriptografi, baik dalam perjalanan data maupun pada penyimpanan [30].
B. Logical Access # Akses melalui jaringan publik dan host layanan berarti lebih meningkatan eksposur dan risiko. Keistimewaan hak akses harus diserahkan dengan hati-hati untuk pengguna yang berwenang saja, dan ditinjau secara berkala. Dibutuhkan teknik dan penggunaan tools keamanan untuk menjamin bahwa pengguna yang berwenang saja yang dapat mengakses data dan aplikasi.
Koneksi data menggunakan jaringan internet menyebabkan resiko aksess yang tidak sah, seperti akses administrator dari orang luar perusahaan. Akses tidak sah ke antar muka menu administrator pada cloud computing jauh lebih tinggi dibandingkan sistem tradisonal yang dapat diakses oleh beberapa administrator.[6, 16, 20, 28, 31, 34].
Mitigasi:
Penyedia jasa keamanan harus dapat menunjukkan adanya control keamanan yang kuat dan efektif, meyakinkan pelanggan bahwa data dan aplikasi mempunyai jaminan keamanan terhadap akses yang tidak sah, perubahan dan kehilangan data. Meninjau secara regular dan melakukan pemantauan akses administrator termasuk yang mempunyai hak untuk mengelola data, segregasi, penanganan kontrol system dan pembatasan akses, mendeteksi dan bertindak cepat terhadap pelanggaran keamanan. Penyedia layanan cloud harus dapat menjamin semua akses atau perubahan sumberdaya untuk layanan cloud serta memberikan catatan yang auditable terlepas dari keberhasilan atau kegagalan. Audit harus mencakup indikasi yang jelas dari setiap delegasi dan identitas atau otorisasi. Persetujuan resmi harus diperoleh dan disimpan untuk perubahan hak-hak account yang baru. Akses administrator harus dienkripsi dengan ekstra kuat yang dapat diterapkan melalui alat-alat keamanan seperti perlindungan password dan otentikasi yang bertingkat [6, 20, 27, 30-31, 34].
Mekanisme otentikasi lemah bisa meningkatkan risiko akses yang tidak sah ke data dan aplikasi secara global. Mekanisme otentikasi lemah termasuk didalamnya pengguna yang berprilaku tidak aman (penggunaan password yang tidak aman). Migrasi beban kerja untuk infrastruktur berbagi menyebabkan potensi akses tidak sah dan eksposur, termasuk tantangan seperti credential manajemen otentikasi, yang kuat (yaitu multi-faktor otentikasi), didelegasikan otentikasi dan kepercayaan mengelola di semua jenis layanan cloud [6, 13, 29, 32, 35].
Mitigasi:
Profil pengguna terpercaya harus ditetapkan berdasarkan definisi peran dan klasifikasi informasi. Memastikan pelaksanaan dan kepatuhan terhadap kebijakan keamanan. Browser yang digunakan client untuk mengakses aplikasi cloud belum sepenuhnya aman, oleh karena itu, harus dipastikan integrasi yang kuat antara keamanan data di sisi server dan framewok di client. Otentikasi yang memadai, manajemen identitas, kepatuhan dan akses menggunakan tools keamanan harus dilaksanakan dan secara teratur dimonitor. Pastikan bahwa transparansi tingkat tinggi pada service provider dinegosiasikan, didokumentasikan dalam SLA dan secara resmi disepakati [6, 13, 29,32, 35].
C. Network Security # Risiko keamanan jaringan termasuk peningkatan risiko hacking dan intrusi, perimeter kebijakan keamanan dan ancaman menggunakan perangkat mobile.
Ada peningkatan resiko hacking dan intrusi data di lingkungan cloud. Resiko keamanan jaringan seperti ancaman dari dalam, penyalahgunaan autentikasi, side channel attacks, social networking attacks, dan denial of service (DoS) menjadi ancaman besar di lingkungan cloud computing. [6, 16, 31, 35].
Mitigasi:
Kontrol jaringan tingkat tinggi harus dilaksanakan untuk mengamankan sistem dan data, mencegah penggunaan autentikasi yang tidak sah, pengungkapan, kerusakan, atau kehilangan data. Penyedia layanan juga harus melakukan konfigurasi yang memadai dan efektif pada firewall jaringan. Kebijakan harus dapat memastikan lalu lintas paket data yang aman melalui melalui switch maupun router [6, 16, 31, 35].
Perimeter kebijakan keamanan di lingkungan cloud computing tidak lagi dibawah kontrol perusahaan sebagai pemilik sumberdaya tetapi berada pada penyedia layanan [34].
Mitigasi:
Adanya sebuah mesin virtual sebagai daerah pertahanan dan sebagai zona aman, sehingga perimeter keamanan yang di buat hanya mencakup lingkungan mesin virtual tersebut [34].
Dengan menggunakan perangkat mobile pengguna cloud dapat secara leluasa mengakses data bisnis tanpa melalui jaringan perusahaan, menyebabkan kerentanan keamanan [6, 20].
Mitigasi:
Kontrol keamanan yang memadai harus ditegakkan antara pengguna ponsel dan penyedia layanan berbasis cloud [6, 20].
D. Physical Access # Menempatkan data dalam jumlah besar yang dapat diakses secara global sama saja dengan meninggalkan oraganisasi terbuka untuk ancaman didistribusikan jika penyerang dapat memperoleh akses langsung pada lokasi penyimpanan data[20, 28].
Mitigasi:
Keamanan jaringan yang bertingkat dan kontrol enkripsi data.
E. Complience # Perusahaan harus memenuhi persyaratan, yang ditetapkan oleh organisasi mereka sendiri atau oleh badan industri atau pemerintah, untuk mengamankan aplikasi dan data , baik internal maupun eksternal. Kepatuhan terhadap beberapa hukum dan standard peraturan meliputi:
Standard untuk pembayaran menggunakan kartu kredit, Payment Card Industry Data Security Standard (PCI DSS); |Pembatasan geografis untuk transit dan penyimpana data. Sarbanes Oxley Act (SOX); Gramm-Leach-Bliley Act (GLBA); Health Insurance Portability and Accountability Act (HIPAA); Standard audit seperti SAS70 and ISO [6, 16, 19-20, 22, 26, 31]. Mitigasi:
Pastikan bahwa penyedia layanan cloud bersedia untuk menjalani audit eksternal dan sertifikasi keamanan, serta dapat memastikan kepatuhan terhadap standard. Penyedia layanan cloud harus membuktikan bahwa data, termasuk semua salinan dan back-up, hanya disimpan di lokasi geografis yang diizinkan oleh kontrak formal, SLA atau peraturan. Kepatuhan terhadap kontrol harus dipastikan; persyaratan khusus penggunaan lokasi data, sesuai dengan lokasi hukum dan peraturan tertentu, tata hukum dan peraturan yang secara resmi ditegakkan dan didokumentasikan dalam kebijakan [6, 16, 19-20, 22, 26,31].
VI. KESIMPULAN # Diprediksikan layanan cloud computing menunjukkan pertumbuhan substansial untuk perkembangan dan implementasi. Untuk membuat lingkungan cloud yang lebih aman dan kuat, tepat kontrol maka mitigasi resiko keamanan harus dilakukan. Pertimbangan harus diberikan terhadap semua risiko untuk memastikan integritas dan ketersediaan aplikasi dan data di cloud.
Disarankan juga sejumlah kontrol yang dapat dipertimbangkan untuk memperhitungkan dan mitigasi resiko keamanan sebagai kerangka pedoman dan standar kontrol untuk menangani resiko cloud computing, termasuk keamanan data, administrasi dan kontrol, logic access, keamanan jaringan, keamanan fisik, kepatuhan terhadap perundang-undangan dan virtualisasi.
Referensi # Deloitte. (2010, 31 August 2010). Executive Forum Cloud Computing: risks, mitigation strategies, and the role of Internal Audit. Available: http://www.deloitte.com C. Pettey and B. Tudor. (2010, 5 August 2010). Gartner says worldwide cloud services market to surpass $68 billion in 2010 Available: http://www.gartner.com/it/page.jsp?id=1389313 Press Office. (2010, 31 August 2010). Cloud Computing Services - New Market Report Published. Available: http://www.companiesandmarkets.com/r.ashx? id=41AETZYHJ289173&amp;prk=ecb8413c602cb89051067456b636c7b9 I. Berger. (2010, 6 May 2010). Keeping Cloud Computing&rsquo;s Prospects Safe and Sunny. Available: http://www.theinstitute.ieee.org/portal/site/tionline/ menuitem.130a3558587d56e8fb2275875bac26c8/index.jsp? &amp;pName=institute_level1_article&amp;TheCat=2201 &amp;article=tionline/legacy/inst2010/may10/featuretechnology.xml&amp; K. McCabe and R. Nachbar. (2010, 18 October 2010). SURVEY BY IEEE AND CLOUD SECURITY ALLIANCE DETAILS IMPORTANCE AND URGENCY OF CLOUD COMPUTING SECURITY STANDARDS
Available:http://standards.ieee.org/announcements/2010/pr_cloudcomputing_survey.html Centre for the Protection of National Infrastructure (CPNI). (2010, 20 June 2010). Information Security Briefing 01/2010: Cloud Computing. Available: http://www.cpni.gov.uk/Docs/cloud-computing-briefing.pdf P. Mell and T. Grance, &ldquo;The NIST Definition of Cloud Computing,&rdquo; National Institute of Standards and Technology, Information Technology Laboratory2009. S. Baca. (2010, 14 May 2010). Cloud Computing: What it is and what it can do for you. Available: www.globalknowledge.com S. Bennett, et al. (2009, 8 April 2010). Architectural Strategies for Cloud Computing. Available: http://www.oracle.com/technology/architect/entarch/pdf/ architectural_strategies_for_cloud_computing.pdf Cloud Computing Use Case Discussion Group. (2010, 31 March 2010). Cloud Computing Use Cases Version 3.0. Available: http://groups.google.com/group/cloud-computing-use-cases Sun Microsystems Inc. (2009, 8 April 2010). Introduction to cloud computing architecture [White Paper]. Available: http://www.sun.com/featured-articles/CloudComputing.pdf VMware Inc. (2009, 18 August 2010). Eight Key Ingredients for Building an Internal Cloud. Available: http://www.vmware.com/files/pdf/cloud/eight-key-ingredients-building-internal-cloud.pdf Cloud Security Alliance. (2009, 20 May 2010). Security Guidance for Critical Areas of Focus in Cloud Computing V2.1. Available: www.cloudsecurityalliance.org/guidance/csaguide.v2.1.pdf D. Brink. (2010, 12 September 2010). Much Ado about Cloud Computing. Available: http://research.aberdeen.com/index.php/ information-technology/89-information-technology-insights/1313-much-ado-about-cloud-computing D. Durkee, &ldquo;Why cloud computing will never be free,&rdquo; Communications of the ACM, vol. 53, pp. 62-69, 2010. M. Gregg. (2010, 14 May 2010). 10 Security Concerns for Cloud Computing. Available: www.globalknowledge.com J. Hagel and J. S. Brown. (2010, 15 April 2010). Cloud Computing: Storms on the Horizon. Available: http://www.deloitte.com/assets/Dcom-UnitedStates/Local%20Assets/ Documents/TMT_us_tmt/us_tmt/ce/CloudsStormsonHorizon_102210.pdf J. Hurwitz, et al., Cloud Computing for Dummies, HP Special Edition. Indianapolis, Indiana: Wiley Publishing, Inc, 2010. N. Kelson. (2010, 2 September 2010). Cloud Computing Management Audit/Assurance Program. Available: www.isaca.org J. W. Rittinghouse and J. F. Ransome, Cloud Computing: Implementation, Management, and Security. Florida: CRC Press, 2010. A. T. Velte, et al. (2010, 8 April 2010). Cloud Computing: A Practical Approach. Available: http://skillport.books24x7.com/ C. Weitz, et al. (2010, 31 August 2010). A balancing act: What cloud computing means for business, and how to capitalize on it. Available: www.deloitte.com F. Gens. (2010, 28 August 2010). IDC&rsquo;s Public IT Cloud Service Forecast: New Numbers, Same Disruptive Story. Available: http://blogs.idc.com/ie/?p=922 N. Leavitt, &ldquo;Is Cloud Computing Really Ready for Prime Time?,&rdquo; Computing Now, pp. 15-20, 2009. M. Carroll, et al., &ldquo;Secure Virtualization: Benefits, Risks and Controls,&rdquo; presented at the CLOSER 2011: The 1st International Conference on Cloud Computing and Services Science, Noordwijkerhout, The Netherlands, 2011. B. Robertson. (2009, 1 December 2009). Top Five Cloud Computing Adoption Inhibitors. Available: http://www.gartner.com/it/initiatives/pdf/KeyInitiativeOverview_CloudComputing.pdf M. Vael. (2010, 24 July 2010). Cloud Computing: An insight in the Governance &amp; Security aspects. Available: http://www.isaca.org/Groups/Professional-English/information-secuirtymanagement/GroupDocuments/ Across%20Cloud%20Computing%20governance%20and%20risks%20May%202010.pdf L. Ponemon. (2010, 29 September 2010). Security of Cloud Computing Users: A Study of Practitioners in the US &amp; Europe. Available: http://www.ca.com/~/media/Files/IndustryResearch/security-cloud-computing-users_235659.pdf V. Raval, &ldquo;Risk Landscape of Cloud Computing,&rdquo; ISACA Journal, vol. 1, 2010. Distributed Management Task Force. (2010, 17 March 2011). Architecture for Managing Clouds. Available: http://www.dmtf.org/about/policies/disclosures.php Clavister. (2010, 13 November 2010). Security in the Cloud. Available: www.clavister.com/resources/ Open Cloud Manifesto. (2009, 2 September 2010). Open Cloud Manifesto: Dedicated to the belief that the cloud should be open. Available: www.opencloudmanifesto.org T. W. Singleton, &ldquo;IT Audits of Cloud and SaaS,&rdquo; ISACA Journal, vol. 3, 2010. Third Brigade. (2008, 21 July 2009). Cloud Computing Security: Making Virtual Machines Cloud-Ready [White Paper]. Available: http://resources.thirdbrigade.com/ B. Grobauer, et al. (2010, 31 August 2010). Towards a cloud-specific Risk Analysis Framework. Available: www.siemens.com/it-solutions Berdasarkan Jurnal, Secure Cloud Computing: Benefits, Risks and Controls Mariana Carroll, Alta van der Merwe, CSIR Meraka Institute , School of Computing, University of South Africa , Pretoria, South Africa, MCarroll@csir.co.za, alta@meraka.org dan Paula Kotzé, CSIR Meraka Institute, Institute for ICT Advancement, Nelson Mandela, Metropolitan University, South Africa, paula.kotze@meraka.org.za
Ini adalah tugas perkuliahan saya pada 2012 pada matakuliah Keamanan Jaringan. Terima kasih telah berkunjung 🙂 dan semoga bermanfaat!
`}),e.add({id:54,href:"/html/tutorial/paragraph/",title:"paragraph HTML",description:"Paragraphs adalah suatu kalimat pada barisan baru yang biasanya berupa blok teks.",content:`HTML Paragraphs # Apa Itu HTML Paragraphs # HTML Paragraphs adalah suatu kalimat pada barisan baru yang biasanya berupa blok teks.
Tag HTML &lt;p&gt; yang mendefinisikan sebuah paragraf.
Sebuah paragraf akan selalu dimulai pada baris baru, dan browser secara otomatis menambahkan margin sebelum dan sesudah paragraf.
Contoh Penerapan &lt;p&gt; # &lt;p&gt;Ini Paragraf Pertama.&lt;/p&gt; &lt;p&gt;Ini Paragraf Kedua.&lt;/p&gt; Membuat HTML Paragraphs # Paragraf adalah kumpulan dari beberapa kalimat. Pada web, Paragraf biasanya digunakan untuk menampilkan teks atau artikel.
Paragraf pada HTML dibuat dengan tag &lt;p&gt;. Selain tag ini, ada juga tag pendukung lain seperti &lt;div&gt;, &lt;hr&gt;, &lt;br&gt;, dan &lt;pre&gt;.
Contoh Penerapan &lt;p&gt; dengan Code HTML # Fungsi utama tag &lt;p&gt; adalah untuk membuat paragraph.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Ini adalah sebuah paragraf yang berisi sebuah kalimat. Saya sedang belajar HTML. Saat ini Sedang, Belajar membuat paragraf di html.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;br&gt; dengan Code HTML # Fungsi utama tag &lt;br&gt; adalah untuk membuat baris baru.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML #3&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Aku selalu riang gembira berangkat sekolah &lt;br /&gt; bersama nasi yang dibuatkan oleh ibuku &lt;br /&gt; iniliah hidup bersusah &lt;br /&gt; ya begitulah&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;hr&gt; untuk membuat garis dengan Code HTML # Fungsi utama tag &lt;hr&gt; digunakan untuk membuat garis lurus secara horizontal (horizontal rule).
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Ini adalah sebuah paragraf yang berisi sebuah kalimat. Saya sedang belajar HTML. Saat ini Sedang, Belajar membuat paragraf di html.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Punya ide pokok sebagai dasar dari paragraf itu sendiri.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;pre&gt; dengan Code HTML # Tag &lt;pre&gt; (preformatting) merupakan tag yang digunakan untuk menampilkan teks atau paragraf dalam format yang sudah kita tentukan di HTML.
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Tutorial Paragraf di HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hujan Bulan Juni&lt;/h1&gt; &lt;p&gt;oleh Sapardi Djoko Damono&lt;/p&gt; &lt;pre&gt; tak ada yang lebih tabah dari hujan bulan Juni dirahasiakannya rintik rindunya kepada pohon berbunga itu tak ada yang lebih bijak dari hujan bulan Juni dihapusnya jejak-jejak kakinya yang ragu-ragu di jalan itu tak ada yang lebih arif dari hujan bulan Juni dibiarkannya yang tak terucapkan diserap akar pohon bunga itu &lt;/pre&gt; &lt;/body&gt; &lt;/html&gt; Contoh Penerapan &lt;div&gt; dengan Code HTML # Tag &lt;div&gt; berfungsi untuk membuat layout web.
&lt;footer&gt; &lt;div&gt;&amp;copy; 2021 Belajar HTML by bellshade&lt;/div&gt; &lt;/footer&gt; `}),e.add({id:55,href:"/html/tutorial/style/",title:"Style HTML",description:"HTML Style adalah atribut yang digunakan untuk memberikan style/gaya pada suatu elemen, seperti color, font, size, dan sebagainya.",content:`HTML Style # Apa Itu HTML Style ? # HTML Style adalah atribut yang digunakan untuk memberikan style/gaya pada suatu elemen, seperti color, font, size, dan sebagainya.
Atribut Style memiliki sintaks seperti berikut:
&lt;tag style=&quot;property:value;&quot;&gt; Contoh Penerapan Style # Background Color # Background color berfungsi untuk mendefinisikan warna latar belakang pada suatu elemen HTML.
&lt;body style=&quot;background-color:white;&quot;&gt; &lt;h1&gt;Hello World&lt;/h1&gt; &lt;/body&gt; Hasilnya :
Text Color # Color berfungsi untuk mendefinisikan warna teks pada suatu elemen HTML.
&lt;h1 style=&quot;color:red;&quot;&gt;Ini heading berwarna merah.&lt;/h1&gt; &lt;p style=&quot;color:yellow;&quot;&gt;Ini paragraf berwarna kuning.&lt;/p&gt; Hasilnya :
Text Size # Text size berfungsi untuk mendefinisikan ukuran teks pada suatu elemen HTML.
&lt;h1 style=&quot;font-size:300%;&quot;&gt;This is a heading.&lt;/h1&gt; &lt;p style=&quot;font-size:160%;&quot;&gt;This is a paragraph.&lt;/p&gt; Hasilnya :
Font Family # Font family berfungsi untuk mendefinisikan font yang akan digunakan pada elemen HTML.
&lt;h1 style=&quot;font-family:arial;&quot;&gt;Ini heading dengan jenis font arial.&lt;/h1&gt; &lt;p style=&quot;font-family:serif;&quot;&gt;Ini paragraf dengan jenis font serif.&lt;/p&gt; Hasilnya :
Text Align # Text align berfungsi untuk menentukan posisi elemen secara horizontal.
&lt;h1 style=&quot;text-align:center;&quot;&gt;Centered Heading&lt;/h1&gt; &lt;p style=&quot;text-align:center;&quot;&gt;Centered paragraph.&lt;/p&gt; Hasilnya :
`}),e.add({id:56,href:"/html/tutorial/text-formatiing/",title:"Text Formatting HTML",description:"HTML Text Formatting adalah elemen yang mendefinisikan teks dengan arti khusus.",content:`HTML Text Formatting # Apa Itu HTML Text Formatting ? # HTML Text Formatting adalah elemen yang mendefinisikan teks dengan arti khusus.
Ada 10 elemen text formatting yang dirancang untuk menampilkan jenis teks khusus.
&lt;b&gt; - Teks Bold &lt;strong&gt; - Teks Penting &lt;i&gt; - Teks miring / Italic &lt;em&gt; - Teks yang ditekankan &lt;mark&gt; - Teks yang diberi tanda (seperti efek stabilo) &lt;small&gt; - Teks Kecil &lt;del&gt; - Teks yang diberi coret &lt;ins&gt; - Teks yang diberi garis bawah &lt;sub&gt; - Teks subskrip &lt;sup&gt; - Teks superskrip Contoh Penerapan Text Formatting Pada HTML # Elemen &lt;b&gt; dan &lt;strong&gt;
&lt;b&gt;Ini adalah Teks Bold&lt;/b&gt; &lt;strong&gt;Ini Merupakan Teks Penting!&lt;/strong&gt; Elemen &lt;i&gt; dan &lt;em&gt;
&lt;i&gt;Teks italic/miring&lt;/i&gt; &lt;em&gt;Ini teks yang ditekankan&lt;/em&gt; Elemen &lt;small&gt;
&lt;small&gt;Ini Merupakan teks yang lebih kecil&lt;/small&gt; Elemen &lt;mark&gt;
&lt;p&gt;Jangan lupa untuk minum air putih &lt;mark&gt;2 liter&lt;/mark&gt; per hari.&lt;/p&gt; Elemen &lt;del&gt;
&lt;p&gt;Aku menyukai warna &lt;del&gt;kuning&lt;/del&gt; biru.&lt;/p&gt; Elemen &lt;ins&gt;
&lt;p&gt;Aku menyukai warna &lt;del&gt;kuning&lt;/del&gt; &lt;ins&gt;biru.&lt;/ins&gt;&lt;/p&gt; Elemen &lt;sub&gt;
&lt;p&gt;Ini adalah teks &lt;sub&gt;subskrip&lt;/sub&gt;.&lt;/p&gt; Elemen &lt;sup&gt;
&lt;p&gt;Ini adalah teks &lt;sup&gt;superskrip&lt;/sup&gt;.&lt;/p&gt; `}),e.add({id:57,href:"/html/tutorial/quotation/",title:"Quotation HTML",description:"HTML Quotation berisi elemen-elemen ditujukan untuk menyajikan kutipan pada halaman HTML.",content:`HTML Quotation # Apa Itu HTML Quotation ? # HTML Quotation berisi elemen-elemen ditujukan untuk menyajikan kutipan pada halaman HTML.
Elemen-elemen tersebut adalah,
&lt;blockquote&gt; - Mendefinisikan teks kutipan yang panjang. &lt;q&gt; - Mendefinisikan teks kutipan yang pendek. &lt;abbr&gt; - Mendefinisikan teks singkatan. &lt;address&gt; - Mendefinisikan informasi kontak. &lt;cite&gt; - Mendefinisikan judul karya. &lt;bdo&gt; - Membalikan arah teks. Contoh Penerapan Elemen Quotation Pada HTML # Elemen &lt;blockquote&gt; # &lt;p&gt;Arti Quotes:&lt;/p&gt; &lt;blockquote&gt; Kutipan adalah pengulangan satu ekspresi sebagai bagian dari yang lain, terutama ketika ekspresi yang dikutip itu terkenal atau secara tersurat dihubungkan dengan kutipan ke sumber yang asli, dan ditandai oleh tanda kutip. &lt;/blockquote&gt; Elemen &lt;q&gt; # &lt;p&gt;Random Quote: &lt;q&gt;Karena hidup adalah pilihan.&lt;/q&gt;&lt;/p&gt; Elemen &lt;abbr&gt; # &lt;p&gt;Channel &lt;abbr title=&quot;Web Programming UNPAS&quot;&gt;WPU&lt;/abbr&gt; Pertama Kali merilis video pada 29 Januari 2015&lt;/p&gt; Elemen &lt;address&gt; # &lt;address&gt; Written by ABC&lt;br&gt; Visit us at:&lt;br&gt; Example.com&lt;br&gt; 12345, Bandung&lt;br&gt; Indonesia &lt;/address&gt; Elemen &lt;cite&gt; # &lt;p&gt;&lt;cite&gt;Avengers: Endgame&lt;/cite&gt; directed by Anthony Russo; Joe Russo. Release in 2019.&lt;/p&gt; Elemen &lt;bdo&gt; # &lt;bdo dir=&quot;rtl&quot;&gt;Elemen ini akan tertulis dari kanan ke kiri&lt;/bdo&gt; `}),e.add({id:58,href:"/html/tutorial/comments/",title:"Komentar",description:"HTML Comments berfungsi untuk membantu mendokumentasikan sumber kode/source code HTML anda.",content:`HTML Comments # Apa Itu HTML Comments ? # HTML Comments berfungsi untuk membantu mendokumentasikan sumber kode/source code HTML anda.
Anda dapat menambahkan Comments ke file HTML, dengan sintaks berikut;
&lt;!-- Ini adalah cara penulisan comment di HTML --&gt; Contoh Penerapan Comment Pada HTML # Comment Biasa # &lt;!-- Ini adalah Comment --&gt; &lt;p&gt;Ini adalah paragraf.&lt;/p&gt; Menyembunyikan Content # &lt;h1&gt;Header 1.&lt;/h1&gt; &lt;!-- &lt;p&gt;Paragraf Pertama&lt;/p&gt; --&gt; &lt;p&gt;Paragraf Kedua&lt;/p&gt; Menyembunyikan Bagian Dalam Konten # &lt;p&gt;Aku menyukai warna &lt;!-- hitam, --&gt; merah dan kuning&lt;/p&gt; `}),e.add({id:59,href:"/html/tutorial/color/",title:"Color",description:"HTML Color adalah warna yang telah didefinisikan dengan nama atau dengan nilai RGB, HEX, HSL, RGBA, atau HSLA.",content:`HTML Color # Apa Itu HTML Color # HTML Color adalah warna yang telah didefinisikan dengan nama atau dengan nilai RGB, HEX, HSL, RGBA, atau HSLA.
Beberapa warna yang dapat di definisikan dengan nama warna:
Tomato, Orange, DodgerBlue, MediumSeaGreen, Violet, Light Gray, dan 136+ Warna Lainnya.
Contoh Penerapan Color Pada HTML # Background Color # Mendefinisikan warna latar pada elemen HTML.
&lt;h1 style=&quot;background-color:LightGray;&quot;&gt;Hello World&lt;/h1&gt; &lt;p style=&quot;background-color:Tomato;&quot;&gt;Lorem ipsum...&lt;/p&gt; Text Color # Mendefinisikan warna teks.
&lt;h1 style=&quot;color:Violet;&quot;&gt;Hello World&lt;/h1&gt; &lt;p style=&quot;color:DodgerBlue;&quot;&gt;Lorem ipsum...&lt;/p&gt; &lt;p style=&quot;color:MediumSeaGreen;&quot;&gt;Ut wisi enim...&lt;/p&gt; Border Color # Mendefinisikan warna dari border elemen.
&lt;h1 style=&quot;border:5px solid Tomato;&quot;&gt;Hello World&lt;/h1&gt; &lt;h1 style=&quot;border:5px solid DodgerBlue;&quot;&gt;Hello World&lt;/h1&gt; &lt;h1 style=&quot;border:5px solid Violet;&quot;&gt;Hello World&lt;/h1&gt; Color Value # Warna dapat ditentukan dengan nilai RGB, RGBA, HSL, HSLA, dan HEX.
Background Solid
&lt;h1 style=&quot;background-color:rgb(255, 99, 71);&quot;&gt;...&lt;/h1&gt; &lt;h1 style=&quot;background-color:#ff6347;&quot;&gt;...&lt;/h1&gt; &lt;h1 style=&quot;background-color:hsl(9, 100%, 64%);&quot;&gt;...&lt;/h1&gt; Background Yang Memiliki Transparansi
&lt;h1 style=&quot;background-color:rgba(255, 99, 71, 0.5);&quot;&gt;...&lt;/h1&gt; &lt;h1 style=&quot;background-color:hsla(9, 100%, 64%, 0.5);&quot;&gt;...&lt;/h1&gt; `}),e.add({id:60,href:"/python/tutorial/pengenalan-python/",title:"Pengenalan Python",description:"Pengenalan bahasa pemrograman python.",content:`Apa itu Python? # Python adalah bahasa pemrograman yang populer. Itu dibuat oleh Guido van Rossum, dan dirilis pada tahun 1991.
Python digunakan untuk:
pengembangan web (sisi server), pengembangan perangkat lunak, matematika, skrip sistem. Python dapat digunakan untuk keperluan apa saja? # Python dapat digunakan di server untuk membuat aplikasi web. Python dapat digunakan bersama perangkat lunak untuk membuat alur kerja. Python dapat terhubung ke sistem database. Itu juga dapat membaca dan memodifikasi file. Python dapat digunakan untuk menangani data besar dan melakukan matematika yang kompleks. Python dapat digunakan untuk pembuatan prototipe cepat, atau untuk pengembangan perangkat lunak siap produksi. Mengapa Python? # Python bekerja pada platform yang berbeda (Windows, Mac, Linux, Raspberry Pi, dll). Python memiliki sintaks sederhana yang mirip dengan bahasa Inggris. Python memiliki sintaks yang memungkinkan pengembang untuk menulis program dengan lebih sedikit baris daripada beberapa bahasa pemrograman lainnya. Python berjalan pada sistem interpreter, artinya kode dapat dieksekusi segera setelah ditulis. Ini berarti bahwa pembuatan prototipe bisa sangat cepat. Python dapat diperlakukan dengan cara prosedural, cara berorientasi objek atau cara fungsional. Versi Python # Versi utama terbaru dari Python adalah Python 3, yang akan kita gunakan dalam tutorial ini. Namun, Python 2, meskipun tidak diperbarui dengan apa pun selain pembaruan keamanan, masih cukup populer. Dalam tutorial ini Python akan ditulis dalam editor teks. Dimungkinkan untuk menulis Python dalam Lingkungan Pengembangan Terintegrasi, seperti Thonny, Pycharm, Netbeans atau Eclipse yang sangat berguna saat mengelola koleksi file Python yang lebih besar. Sintaks Python dibandingkan dengan bahasa pemrograman lain # Python dirancang agar mudah dibaca, dan memiliki beberapa kesamaan dengan bahasa Inggris dengan pengaruh dari matematika. Python menggunakan baris baru untuk menyelesaikan perintah, berbeda dengan bahasa pemrograman lain yang sering menggunakan titik koma atau tanda kurung. Python bergantung pada tanda kurung, menggunakan spasi, untuk mendefinisikan ruang lingkup; seperti ruang lingkup loop, fungsi dan kelas. Bahasa pemrograman lain sering menggunakan kurung kurawal untuk tujuan ini. Contoh &lsquo;Hello World&rsquo; dengan Python # print(&quot;Hello, World!&quot;) `}),e.add({id:61,href:"/html/tutorial/css/",title:"CSS",description:"CSS (Cascading Style Sheets) berfungsi sebagai pengformat tata letak juga tampilan bagi sebuah website.",content:`HTML CSS # Apa Itu HTML CSS? # CSS (Cascading Style Sheets) berfungsi sebagai pengformat tata letak juga tampilan bagi sebuah website.
CSS bisa digunakan dengan 3 cara,
Inline CSS - Menggunakan atribut &lt;style&gt; di dalam elemen HTML. Internal CSS - Menggunakan elemen &lt;style&gt; di bagian &lt;head&gt;. Eksternal CSS - Menggunakan elemen &lt;link&gt; untuk menautkan file HTML dengan file CSS. Contoh Penerapan CSS # Inline CSS
&lt;h1 style=&quot;color:blue;&quot;&gt;Heading Berwarna Biru.&lt;/h1&gt; &lt;p style=&quot;color:red;&quot;&gt;Paragraf Berwarna Merah.&lt;/p&gt; Internal CSS
&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;style&gt; body {background-color: black;} h1 {color: blue;} p {color: red;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Ini adalah Heading.&lt;/h1&gt; &lt;p&gt;Ini adalah Paragraf.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Eksternal CSS
&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Ini adalah Heading.&lt;/h1&gt; &lt;p&gt;Ini adalah Paragraf.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Dalam file CSS:
body { background-color: black; } h1 { color: blue; } p { color: red; } `}),e.add({id:62,href:"/python/tutorial/instalasi-python/",title:"Instalasi Python",description:"Memulai bahasa pemrograman python.",content:`Cek Instalasi Python # Untuk mengetahui apakah kita telah menginstal python (Windows), buka command prompt Windows, atau dari menu Run dengan menekan tombol Winkey + R kemudian ketikkan &lsquo;cmd&rsquo; kemudian tekan enter, selanjutnya ketikkan python --version seperti contoh dibawah:
C:\\Users\\ Your Name&gt;python --version Untuk OS Linux atau Mac, buka command prompt (linux) atau di Mac buka Terminal dan ketik:
python --version Instalasi Python # Jika belum menginstal Python, silakan download secara gratis dari situs resminya python.org
Berikut ini adalah panduan cara instal python di platform Linux, Windows dan Mac OS.
Instalasi Python pada Linux # Buka browser, kunjungi http://www.python.org/downloads/source/ Download versi terbaru Python berbentuk file zip untuk Unix/Linux Ekstrak file zip yang baru saja di download Edit file Modules/Setup jika ingin kostumisasi Python Jalankan ./configure script make make install Langkah ini akan menginstal Python di lokasi standar /usr/local/bin dan library di /usr/local/lib/pythonXX dimana XX adalah versi terbaru Python yang digunakan. Beberapa distro (distribution store) dari sistem operasi linux sudah terinstal Python di dalamnya. Jadi Kita tidak perlu menginstalnya lagi.
Instalasi Python pada Windows # Buka browser, kunjungi http://www.python.org/downloads/windows/ Buka (klik 2x) file installer python yang baru saja di download Ikuti langkah instalasi sampai selesai Instalasi Python pada MacOS # Buka browser, kunjungi http://www.python.org/download/mac/ Download versi terbaru Python untuk Macintosh Buka file yang baru saja di download Ikuti langkah instalasi sampai selesai `}),e.add({id:63,href:"/html/tutorial/hyperlink/",title:"Hyperlink",description:"Html hyperlink adalah sebuah tag html yang berisi link",content:`HTML HYPERLINK # Apa Sih Itu html hyperlink? # Html hyperlink adalah sebuah tag html yang berisi link
Langsung aja ke demo-nya # &lt;!-- href= tempat menaruh link yang akan di tuju --&gt; &lt;!-- target = ketika ditekan maka akan terjadi --&gt; &lt;!-- Macam-macam atribut target --&gt; &lt;!-- __self = merupakan default ketika di klik layar akan berubah menjadi link yang di tuju --&gt; &lt;!-- __blank = ketika di klik akan menambah window baru / layar baru --&gt; &lt;!-- __parent = ketika di klik membuka dokumen di bingkai induk --&gt; &lt;!-- __top = membuka file di seluruh bagian layar/window --&gt; &lt;a href=&quot;https://www.instagram.com/&quot; target=&quot;__blank&quot;&gt;&lt;/a&gt; Dari demo diatas bisa disimpulkan bahwa tag &lt;a&gt; berisi link menuju instagram # Kreasikan sendiri atribut ini ya :) # `}),e.add({id:64,href:"/python/tutorial/menjalankan-python/",title:"Menjalankan Python",description:"Memulai bahasa pemrograman python.",content:`Untuk menjalankan Python ada banyak cara yang bisa dilakukan. Kita dapat menggunakan shell, terminal atau menggunakan IDE (Integrated Development Environment). Di bawah ini adalah langkah-langkah menjalankan Python dengan cara yang paling mudah.
Cara menjalankan file python di Linux # Buka terminal CTRL+ALT+T Ketik python maka akan masuk ke Python shell. Tuliskan script Python, contoh: print(&quot;Selamat datang di Python&quot;). jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() atau
Gunakan teks editor, misalnya gedit. Buat file baru, dan ketikan script python, contoh: print(&quot;Selamat datang di Python&quot;). Save As dengan ekstensi .py (contoh: cetak.py). Jalankan file dengan menggunakan Terminal. Buka terminal CTRL+ALT+T. Masuk ke direktori dimana file Python disimpan (contoh: cd /Users/admin/Desktop/). Jalankan script Python dengan menggunakan python diikuti dengan nama file (contoh: python cetak.py). Script Python akan dieksekusi/dijalankan. Cara menjalankan file python di Windows # Menggunakan Shell
Buka IDLE (python shell di windows), kita bisa mencarinya di tombol START. Tuliskan script Python , contoh: print(&quot;Selamat datang di Python&quot;), jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() Menggunakan Script Editor
Untuk menjalankan script yang disimpan dalam file, buka IDLE (python shell di windows), kita dapat mencarinya di tombol START. Klik menu File - New File Tulis script Python pada window yang muncul, contoh: print(&quot;Belajar Python&quot;) print(&quot;di belajarpython.com&quot;) Simpan script lewat menu File - Save Jalankan program dengan klik menu Run - Run Module Cara menjalankan file python di Mac OS # Buka terminal. Ketik python maka kita akan masuk ke Python shell. Tuliskan script Python, contoh: print(&quot;Selamat datang di Python&quot;), jika sudah tekan tombol ENTER, dan script Python akan dijalankan/eksekusi. Untuk keluar dari Python shell ketik exit() atau
Gunakan teks editor. Buat file baru, dan ketikan script python, contoh: print(&quot;Selamat datang di Python&quot;). Save As dengan ekstensi .py (contoh: cetak.py). Jalankan file dengan menggunakan Terminal.
Buka terminal CTRL+ALT+T Masuk ke direktori dimana file Python disimpan (contoh: cd /Users/admin/Desktop/). Jalankan script Python dengan menggunakan python diikuti dengan nama file (contoh: python cetak.py). Script Python akan dieksekusi/dijalankan. `}),e.add({id:65,href:"/html/tutorial/images/",title:"Images",description:"HTML memiliki sebuah elemen `<img>` yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Images.",content:`HTML Images # Apa itu HTML Images? # HTML memiliki sebuah elemen &lt;img&gt; yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Images.
Nah cara penulisan tag &lt;img&gt; sendiri tidak memerlukan tag penutup, atau lebih jelasnya adalah seperti ini:
&lt;img src=&quot;&quot; alt=&quot;&quot;&gt; Atribut di dalam tag &lt;img&gt; # Terdapat setidaknya dua atribut yang biasa digunakan.
src - Digunakan untuk mengarahkan path dari suatu gambar. alt - Digunakan untuk membuat teks alternatif jika gambar gagal ditayangkan. Bagaimana cara menampilkan gambar? # Untuk menampilkan gambar, kita perlu mengarahkan tag &lt;img&gt; kepada file yang kita inginkan melalui atribut src=&quot;url&quot; atau bisa juga src=&quot;imagepath&quot;
Sebagai contoh saja misalkan ingin menampilkan gambar kucing.png yang berada satu folder dengan file HTML.
&lt;img src=&quot;kucing.png&quot; alt=&quot;kucing&quot;&gt; Jika file gambar terdapat pada direktori tertentu, kita dapat menuliskan terlebih dahulu direktorinya.
&lt;img src=&quot;images/kucing.png&quot; alt=&quot;kucing&quot;&gt; Jika file gambar ada di suatu link di internet.
&lt;img src=&quot;https://www.contoh.com/images/kucing.png&quot; alt=&quot;kucing&quot;&gt; Namun sebagai catatan jika ingin mengutip gambar dari suatu link di internet, pastikan tidak melanggar hak cipta dari kepemilikan gambar tersebut.
Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
`}),e.add({id:66,href:"/python/tutorial/aturan-penulisan/",title:"Aturan Penulisan",description:"Aturan penulisan dalam bahasa pemrograman python.",content:`Syntax bahasa Python hampir sama dengan bahasa pemrograman pada umumnya seperti Java atau PHP.
Syntax Dasar # Dibawah ini adalah contoh fungsi Python yang digunakan untuk mencetak. Di Python untuk mencetak cukup gunakan fungsi print() , dimana sesuatu yang akan dicetak harus diletakkan diantara kurung buka dan kurung tutup, bahkan di Python versi 2.x Anda tidak harus menggunakan tanda kurung kurawal, cukup pisahkan dengan spasi.
Jika ingin mencetak tipe data String langsung, Anda harus memasukanya ke dalam tanda kutip terlebih dahulu.
print(&quot;Hello World&quot;) Saat anda menjalankan script diatas, Anda akan melihat output berupa text &lsquo;Hello World&rsquo;
Python Case Sensitivity # Python bersifat case sensitif, ini artinya huruf besar dan huruf kecil memiliki perbedaan. Sebagai contoh jika Anda menggunakan fungsi print dengan huruf kecil print() akan berhasil. Lain hal jika anda menggunakan huruf kapital Print() atau PRINT() , akan muncul pesan error.
Aturan ini berlaku untuk nama variabel ataupun fungsi-fungsi lainnya.
`}),e.add({id:67,href:"/html/tutorial/picture/",title:"Picture",description:`HTML Picture # Apa itu HTML Picture? # HTML memiliki sebuah elemen &lt;picture&gt; yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Picture.
HTML Picture memiliki fungsi mirip seperti media query pada CSS, tetapi kita tidak memerlukan CSS untuk menggunakannya, hanya dengan HTML saja sudah bisa membuat img menjadi responsive pada website kalian.
Contoh kode # &lt;picture&gt;&lt;/picture&gt; Ada juga child dari &lt;picture&gt; ini yaitu &lt;source&gt; dan &lt;img&gt;`,content:`HTML Picture # Apa itu HTML Picture? # HTML memiliki sebuah elemen &lt;picture&gt; yang sangat berguna dalam melakukan membangun sebuah website. Tanpa gambar website akan terasa sangat membosankan, maka dari itu kalian perlu mempelajari tentang HTML Picture.
HTML Picture memiliki fungsi mirip seperti media query pada CSS, tetapi kita tidak memerlukan CSS untuk menggunakannya, hanya dengan HTML saja sudah bisa membuat img menjadi responsive pada website kalian.
Contoh kode # &lt;picture&gt;&lt;/picture&gt; Ada juga child dari &lt;picture&gt; ini yaitu &lt;source&gt; dan &lt;img&gt;
&lt;picture&gt; &lt;source&gt; &lt;img src=&quot;&quot; alt=&quot;&quot;&gt; &lt;/picture&gt; Untuk menampilkan gambar, kita perlu mengarahkan tag &lt;img&gt; kepada file yang kita inginkan melalui atribut src=&quot;url&quot; atau bisa juga src=&quot;imagepath&quot;
Belum belajar tentang tag HTML img? Silahkan pelajari di HTML Image
Terdapat beberapa attribut yang biasa digunakan dalam tag &lt;source&gt;, yaitu:
srcset - Digunakan untuk mengarahkan path dari suatu gambar. sizes - Digunakan untuk mengatur ukuran gambar. media - Digunakan untuk mengatur media query. Contoh kode # &lt;picture&gt; &lt;source srcset=&quot;img1.png&quot;&gt; &lt;source srcset=&quot;img2.png&quot;&gt; &lt;source srcset=&quot;img3.png&quot;&gt; &lt;img src=&quot;img1.png&quot; alt=&quot;gambarku&quot;&gt; &lt;/picture&gt; atau
&lt;picture&gt; &lt;source media=&quot;(min-width: 960px)&quot; srcset=&quot;img1.png&quot;&gt; &lt;source media=&quot;(min-width: 600px)&quot; srcset=&quot;img2.png&quot;&gt; &lt;source srcset=&quot;img3.png&quot;&gt; &lt;img src=&quot;img1.png&quot; alt=&quot;kucing-kawin&quot;&gt; &lt;/picture&gt; Contoh pengimplementasiannya: # Silahkan buka index.html, copy dan paste seluruh isi kodenya. Buka vscode atau IDE favorit kalian. Buatlah file index.html &amp; jalankan index.html pada browser kalian. Maka akan terlihat gambar kucing (lagi serius). Coba kecilkan browser kalian perlahan dari samping. Maka akan terlihat gambar kucing (lagi serius) berubah menjadi (lagi senyum), berubah lagi menjadi (lagi nangis) seiring browser kalian bertambah kecil. Semoga bermanfaat!
Source: MDN Web Docs
`}),e.add({id:68,href:"/python/tutorial/komentar-program/",title:"Komentar Program",description:"Komentar program dalam python.",content:`Apa itu komentar program? # Komentar (comment) adalah kode di dalam script Python yang tidak dieksekusi atau tidak dijalankan komputer. Komentar hanya digunakan untuk menandai atau memberikan keterangan tertulis pada script.
Komentar biasa digunakan untuk membiarkan orang lain memahami apa yang dilakukan script. atau untuk mengingatkan kepada programmer sendiri jika suatu saat kembali mengedit script tersebut.
Untuk menggunakan komentar Kita cukup menulis tanda pagar #, diikuti dengan komentar.
Dibawah ini adalah contoh penggunaan komentar pada Python
Komentar satu baris # #Ini adalah komentar # Tulisan ini tidak akan dieksekusi #komentar dengan tanda pagar hanya bisa digunakan #untuk #satu #baris Komentar beberapa baris # &quot;&quot;&quot; Penulisan Komentar lebih dari satu baris yaitu dengan menggunakan kutip dua 3 kali dan ditutup dengan kutip dua 3 kali juga &quot;&quot;&quot; print(&quot;Hello World&quot;) #ini juga komentar #print(&quot;Welcome&quot;) # komentar bisa berisi spesial karakter !@#$%^&amp;*(),./;'[]\\ #mencetak nama print(&quot;Budi&quot;) #mencetak angka/integer print(123) Saat menjalankan script diatas, Kita akan melihat output berupa Hello World, Budi dan 123, karena tulisan/komentar yang ditulis tidak dieksekusi.
`}),e.add({id:69,href:"/html/tutorial/tables/",title:"Tables",description:"HTML Table adalah elemen untuk menyajikan data berupa tabel.",content:`HTML Tables # Apa Itu HTML Table ? # HTML Table adalah elemen untuk menyajikan data berupa tabel.
Tag &lt;table&gt; mendefinisikan tabel HTML.
Setiap baris tabel didefinisikan dengan tag &lt;tr&gt; Setiap header tabel didefinisikan dengan tag &lt;th&gt;, secara default, teks dalam elemen &lt;th&gt; dicetak tebal dan di tengah. Setiap data/sel tabel didefinisikan dengan tag &lt;td&gt;, secara default, teks dalam elemen &lt;td&gt; teratur dan rata kiri. Contoh:
&lt;table style=&quot;width:100%&quot;&gt; &lt;tr&gt; &lt;th&gt;Nama Barang&lt;/th&gt; &lt;th&gt;Jumlah Stock&lt;/th&gt; &lt;th&gt;Harga satuan&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Buku&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;Rp.10000,-&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Pensil&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;td&gt;Rp.3000,-&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; Colspan dan Rowspan # Colspan dan Rowspan adalah atribut pada HTML Table yang digunakan untuk melebarkan sebuah kolom secara vertikal atau horizontal. Colspan dan Rowspan biasanya diterapkan pada tabel yang kompleks dan multi-dimensi. Atribut colspan dan rowspan dapat digunakan pada tag th dan td.
Contoh penerapan Colspan dan Rowspan dapat dilihat pada gambar berikut.
Berikut penjelasan tentang atribut Colspan dan Rowspan.
colspan digunakan untuk merentangkan kolom secara horizontal atau terhadap kolom selanjutnya rowspan digunakan untuk merentangkan kolom secara vertikal atau terhadap baris selanjutnya Contoh:
&lt;table style=&quot;width:100%&quot; border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th rowspan=&quot;2&quot;&gt;Nama Barang&lt;/th&gt; &lt;th colspan=&quot;2&quot;&gt;Toko A&lt;/th&gt; &lt;th colspan=&quot;2&quot;&gt;Toko B&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Jumlah Stok&lt;/th&gt; &lt;th&gt;Harga Satuan&lt;/th&gt; &lt;th&gt;Jumlah Stok&lt;/th&gt; &lt;th&gt;Harga Satuan&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Buku&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;Rp.10000,-&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;td&gt;Rp.9500,-&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Pensil&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;td&gt;Rp.3000,-&lt;/td&gt; &lt;td&gt;12&lt;/td&gt; &lt;td&gt;Rp.3500,-&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; `}),e.add({id:70,href:"/python/tutorial/tipe-data/",title:"Tipe data",description:"Tipe data.",content:`Apa itu tipe data? # Tipe data adalah suatu media atau memori pada komputer yang digunakan untuk menampung informasi.
Python sendiri mempunyai tipe data yang cukup unik bila kita bandingkan dengan bahasa pemrograman yang lain.
Berikut adalah tipe data dari bahasa pemrograman Python :
Tipe Data Contoh Penjelasan Boolean True atau False Menyatakan benar True yang bernilai 1, atau salah False yang bernilai 0 String &ldquo;Ayo belajar Python&rdquo; Menyatakan karakter/kalimat bisa berupa huruf angka, dll (diapit tanda &quot; atau &lsquo;) Integer 25 atau 1209 Menyatakan bilangan bulat Float 3.14 atau 0.99 Menyatakan bilangan yang mempunyai koma Hexadecimal 9a atau 1d3 Menyatakan bilangan dalam format heksa (bilangan berbasis 16) Complex 1 + 5j Menyatakan pasangan angka real dan imajiner List [&lsquo;xyz&rsquo;, 786, 2.23] Data untaian yang menyimpan berbagai tipe data dan isinya bisa diubah-ubah Tuple (&lsquo;xyz&rsquo;, 768, 2.23) Data untaian yang menyimpan berbagai tipe data tapi isinya tidak bisa diubah Dictionary {&rsquo;nama&rsquo;: &lsquo;adi&rsquo;,&lsquo;id&rsquo;:2} Data untaian yang menyimpan berbagai tipe data berupa pasangan penunjuk dan nilai Untuk mencoba berbagai macam tipe data, silahkan coba script Python dibawah ini.
#tipe data Boolean print(True) #tipe data String print(&quot;Ayo belajar Python&quot;) print('Belajar Python Sangat Mudah') #tipe data Integer print(20) #tipe data Float print(3.14) #tipe data Hexadecimal print(9a) #tipe data Complex print(5j) #tipe data List print([1,2,3,4,5]) print([&quot;satu&quot;, &quot;dua&quot;, &quot;tiga&quot;]) #tipe data Tuple print((1,2,3,4,5)) print((&quot;satu&quot;, &quot;dua&quot;, &quot;tiga&quot;)) #tipe data Dictionary print({&quot;nama&quot;:&quot;Budi&quot;, 'umur':20}) #tipe data Dictionary dimasukan ke dalam variabel biodata biodata = {&quot;nama&quot;:&quot;Andi&quot;, 'umur':21} #proses inisialisasi variabel biodata print(biodata) #proses pencetakan variabel biodata yang berisi tipe data Dictionary print(type(biodata)) #fungsi untuk mengecek jenis tipe data. akan tampil &lt;class 'dict'&gt; yang berarti dict adalah tipe data dictionary `}),e.add({id:71,href:"/html/tutorial/lists/",title:"Lists",description:"elemen untuk menyajikan data berupa list/daftar.",content:`HTML Lists # Apa Itu HTML List ? # HTML List adalah elemen untuk menyajikan data berupa list/daftar.
Ada tiga macam list dalam HTML dan masing-masing memiliki tujuan dan makna tertentu.
Unordered list - Digunakan untuk membuat daftar item, tanpa urutan tertentu. Ordered list - Digunakan untuk membuat daftar item, dalam urutan tertentu. Description list - Digunakan untuk membuat daftar item dan deskripsinya. Unordered List # Unordered list adalah daftar item yang tidak memiliki urutan khusus. Unordered list dibuat dengan tag &lt;ul&gt;, dan untuk item-nya dibuat menggunakan tag &lt;li&gt;.
Contoh:
&lt;ul&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; Hasilnya:
Secara default, list akan diurutkan dengan simbol bullet (disc).
Bagaimana jika ingin mengurutkan dengan simbol lainnya?
Untuk mengganti disc dengan simbol lain, cukup berikan atribut type pada tag ul seperti berikut.
Type disc untuk simbol bullet (default). Type square untuk simbol persegi. Type none untuk menghilangkan simbol atau tanpa simbol. Type circle untuk simbol lingkaran. Contoh:
&lt;h3&gt;List menggunakan simbol bullet&lt;/h3&gt; &lt;ul type=&quot;disc&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;List menggunakan simbol persegi&lt;/h3&gt; &lt;ul type=&quot;square&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;List tanpa simbol&lt;/h3&gt; &lt;ul type=&quot;none&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;List menggunakan simbol lingkaran&lt;/h3&gt; &lt;ul type=&quot;circle&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ul&gt; Hasilnya:
Ordered List # Ordered list adalah daftar item yang memiliki urutan tertentu. Ordered list dibuat dengan tag &lt;ol&gt;, dan untuk item-nya dibuat menggunakan tag &lt;li&gt;.
Contoh:
&lt;ol&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; Hasilnya:
Secara default, list akan diurutkan berdasarkan angka 1 sampai seterusnya.
Bagaimana jika ingin mengurutkan list dengan menggunakan a, b, c atau angka romawi?
Untuk mengganti angka dengan huruf ataupun angka romawi, cukup berikan atribut type pada tag ol seperti berikut.
Type a untuk huruf alfabet a, b, c dan seterusnya. Type A untuk huruf alfabet A, B, C dan seterusnya. Type i untuk angka romawi i, ii, iii dan seterusnya. Type I untuk angka romawi I, II, III dan seterusnya. Contoh:
&lt;h3&gt;List menggunakan alfabet huruf kecil&lt;/h3&gt; &lt;ol type=&quot;a&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;List menggunakan alfabet huruf kapital&lt;/h3&gt; &lt;ol type=&quot;A&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;List menggunakan angka romawi&lt;/h3&gt; &lt;ol type=&quot;i&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;List menggunakan angka romawi kapital&lt;/h3&gt; &lt;ol type=&quot;I&quot;&gt; &lt;li&gt;Kucing&lt;/li&gt; &lt;li&gt;Anjing&lt;/li&gt; &lt;li&gt;Sapi&lt;/li&gt; &lt;/ol&gt; Hasilnya:
Description Lists # Description list adalah daftar item yang berisi deskripsi dari sesuatu. Description list dibuat dengan tag &lt;dl&gt;, untuk membuat kata yang akan dideskripsikan menggunakan &lt;dt&gt;, dan untuk mendeskiprsikan kata yang sudah dibuat tadi, kita dapat menggunakan tag &lt;dd&gt;.
Contoh:
&lt;dl&gt; &lt;dt&gt;Kucing&lt;/dt&gt; &lt;dd&gt;Kucing adalah hewan berbulu yang menggemaskan&lt;/dd&gt; &lt;dt&gt;Anjing&lt;/dt&gt; &lt;dd&gt;Anjing adalah hewan peliharaan yang setia&lt;/dd&gt; &lt;dt&gt;Sapi&lt;/dt&gt; &lt;dd&gt;Sapi adalah hewan ternak yang dapat diperah&lt;/dd&gt; &lt;/dl&gt; Hasilnya:
`}),e.add({id:72,href:"/python/tutorial/variabel/",title:"Variabel dalam Python",description:"Variabel dalam Python.",content:`Apa itu variabel? # Variabel adalah lokasi memori yang dicadangkan untuk menyimpan nilai-nilai. Ini berarti bahwa ketika Kita membuat sebuah variabel Anda memesan beberapa ruang di memori. Variabel menyimpan data yang dilakukan selama program dieksekusi, yang nantinya isi dari variabel tersebut dapat diubah oleh operasi - operasi tertentu pada program yang menggunakan variabel.
Variabel dapat menyimpan berbagai macam tipe data. Di dalam pemrograman Python, variabel mempunyai sifat yang dinamis, artinya variabel Python tidak perlu didekralasikan tipe data tertentu dan variabel Python dapat diubah saat program dijalankan.
Penulisan Variabel # Penulisan variabel Python sendiri juga memiliki aturan tertentu, yaitu :
Karakter pertama harus berupa huruf atau garis bawah/underscore _ Karakter selanjutnya dapat berupa huruf, garis bawah/underscore _ atau angka Karakter pada nama variabel bersifat sensitif (case-sensitif). Artinya huruf kecil dan huruf besar dibedakan. Sebagai contoh, variabel namaDepan dan namadepan adalah variabel yang berbeda. Untuk mulai membuat variabel di Python caranya sangat mudah, Anda cukup menuliskan variabel lalu mengisinya dengan suatu nilai dengan cara menambahkan tanda sama dengan = diikuti dengan nilai yang ingin dimasukan. Contoh Penulisan Variabel # Dibawah ini adalah contoh penggunaan variabel dalam bahasa pemrograman Python
#proses memasukan data ke dalam variabel nama = &quot;John Doe&quot; #proses mencetak variabel print(nama) #nilai dan tipe data dalam variabel dapat diubah umur = 20 #nilai awal print(umur) #mencetak nilai umur type(umur) #mengecek tipe data umur umur = &quot;dua puluh satu&quot; #nilai setelah diubah print(umur) #mencetak nilai umur type(umur) #mengecek tipe data umur namaDepan = &quot;Budi&quot; namaBelakang = &quot;Susanto&quot; nama = namaDepan + &quot; &quot; + namaBelakang umur = 22 hobi = &quot;Berenang&quot; print(&quot;Biodata\\n&quot;, nama, &quot;\\n&quot;, umur, &quot;\\n&quot;, hobi) #contoh variabel lainya inivariabel = &quot;Halo&quot; ini_juga_variabel = &quot;Hai&quot; _inivariabeljuga = &quot;Hi&quot; inivariabel222 = &quot;Bye&quot; panjang = 10 lebar = 5 luas = panjang * lebar print(luas) `}),e.add({id:73,href:"/html/tutorial/block-inline/",title:"Block Inline",description:"HTML Block & Inline Element",content:`HTML Block &amp; Inline Element # Block-level Element # Elemen HTML secara historis dikategorikan sebagai elemen &ldquo;tingkat blok&rdquo; atau elemen &ldquo;tingkat sebaris&rdquo;. Karena ini adalah karakteristik presentasi, saat ini ditentukan oleh CSS di Flow Layout. Elemen tingkat Blok menempati seluruh ruang horizontal elemen induknya (wadah), dan ruang vertikal sama dengan tinggi isinya, sehingga menciptakan &ldquo;blok&rdquo;.
Elemen level blok selalu dimulai pada baris baru. Elemen level blok selalu menggunakan lebar penuh yang tersedia (membentang ke kiri dan kanan sejauh mungkin). Elemen level blok memiliki margin atas dan bawah, sedangkan elemen inline tidak. Contoh: # &lt;!-- Elemen Div ini adalah block level elemen --&gt; &lt;div&gt;ini adalah block level elemen&lt;/div&gt; Ini adalah Block Level Elemen HTML # &lt;div&gt; | Divisi Dokumen &lt;section&gt; | Bagian dari halaman web &lt;main&gt; | Berisi konten utama yang unik untuk dokumen &lt;nav&gt; | Berisi link navigasi &lt;footer&gt; | bagian atau halaman footer &lt;header&gt; | bagian atau halaman header &lt;form&gt; | Memasukan formulir &lt;table&gt; | Tabel &lt;p&gt; | Paragraf &lt;ul&gt; | Daftar tidak berurutan &lt;pre&gt; | Teks yang telah diformat sebelumnya &lt;li&gt; | Daftar barang &lt;ol&gt; | daftar pesanan &lt;hr&gt; | Garis Horizontal &lt;figure&gt; | Mengelompokkan konten media dengan keterangan &lt;figcaption&gt; | Keterangan figur &lt;address&gt; | Keterangan Kontak &lt;textarea&gt; | Input data lebih dari satu baris &lt;fieldset&gt; | Label Set bidang &lt;hgroup&gt; | Informasi header grup &lt;article&gt; | Isi konten &lt;blockquote&gt; | Long (&ldquo;block&rdquo;) quotation &lt;details&gt; | Menampilkan rincian konten lebih lengkap dll Inline Elemen HTML # Elemen HTML (Hypertext Markup Language) secara historis dikategorikan sebagai elemen &ldquo;tingkat blok&rdquo; atau elemen &ldquo;tingkat sebaris&rdquo;. Karena ini adalah karakteristik presentasi, saat ini ditentukan oleh CSS di Flow Layout.
Elemen sebaris(inline) tidak dimulai pada baris baru. Elemen sebaris(inline) hanya membutuhkan lebar sebanyak yang diperlukan. Contoh: # &lt;!-- Elemen span ini adalah elemen sebaris(inline) --&gt; &lt;span&gt;ini adalah elemen inline&lt;/span&gt; Ini adalah Inline Elemen HTML # &lt;a&gt; &lt;abbr&gt; &lt;audio&gt; &lt;br&gt; &lt;button&gt; &lt;canvas&gt; &lt;code&gt; &lt;data&gt; &lt;datalist&gt; &lt;em&gt; &lt;embed&gt; &lt;i&gt; &lt;iframe&gt; &lt;img&gt; &lt;input&gt; &lt;label&gt; &lt;map&gt; &lt;mark&gt; &lt;object&gt; &lt;script&gt; &lt;textarea&gt; &lt;video&gt; dll `}),e.add({id:74,href:"/python/tutorial/operator/",title:"Operator di dalam Python",description:"Operator dalam Python.",content:`Apa itu Operator? # Operator adalah konstruksi yang dapat memanipulasi nilai dari operan.
Sebagai contoh operasi 4 + 5 = 9. Disini 4 dan 5 adalah operan dan + adalah operator.
Operator Aritmatika # Operator Contoh Penjelasan Penjumlahan + 1 + 3 = 4 Menjumlahkan nilai dari masing-masing operan atau bilangan Pengurangan - 4 - 1 = 3 Mengurangi nilai operan di sebelah kiri menggunakan operan di sebelah kanan Perkalian * 2 * 4 = 8 Mengalikan operan/bilangan Pembagian / 10 / 5 = 2 Untuk membagi operan di sebelah kiri menggunakan operan di sebelah kanan Sisa Bagi % 11 % 2 = 1 Mendapatkan sisa pembagian dari operan di sebelah kiri operator ketika dibagi oleh operan di sebelah kanan Pangkat ** 8 ** 2 = 64 Memangkatkan operan disebelah kiri operator dengan operan di sebelah kanan operator Pembagian Bulat // 10 // 3 = 3 Sama seperti pembagian. Hanya saja angka dibelakang koma dihilangkan Dibawah ini adalah contoh penggunaan Operator Aritmatika dalam bahasa pemrograman Python
#OPERATOR ARITMATIKA #Penjumlahan print(13 + 2) apel = 7 jeruk = 9 buah = apel + jeruk # print(buah) #Pengurangan hutang = 10000 bayar = 5000 sisaHutang = hutang - bayar print(&quot;Sisa hutang Anda adalah &quot;, sisaHutang) #Perkalian panjang = 15 lebar = 8 luas = panjang * lebar print(luas) #Pembagian kue = 16 anak = 4 kuePerAnak = kue / anak print(&quot;Setiap anak akan mendapatkan bagian kue sebanyak &quot;, kuePerAnak) #Sisa Bagi / Modulus bilangan1 = 14 bilangan2 = 5 hasil = bilangan1 % bilangan2 print(&quot;Sisa bagi dari bilangan &quot;, bilangan1, &quot; dan &quot;, bilangan2, &quot; adalah &quot;, hasil) #Pangkat bilangan3 = 8 bilangan4 = 2 hasilPangkat = bilangan3 ** bilangan4 print(hasilPangkat) #Pembagian Bulat print(10//3) #10 dibagi 3 adalah 3.3333. Karena dibulatkan maka akan menghasilkan nilai 3 Operator Perbandingan # Operator perbandingan (comparison operators) digunakan untuk membandingkan suatu nilai dari masing-masing operan.
Operator Contoh Penjelasan Sama dengan == 1 == 1 bernilai True Jika masing-masing operan memiliki nilai yang sama, maka kondisi bernilai benar atau True. Tidak sama dengan != 2 != 2 bernilai False Akan menghasilkan nilai kebalikan dari kondisi sebenarnya. Tidak sama dengan &lt;&gt; 2 &lt;&gt; 2 bernilai False Akan menghasilkan nilai kebalikan dari kondisi sebenarnya. Lebih besar dari &gt; 5 &gt; 3 bernilai True Jika nilai operan kiri lebih besar dari nilai operan kanan, maka kondisi menjadi benar. Lebih kecil dari &lt; 5 &lt; 3 bernilai True Jika nilai operan kiri lebih kecil dari nilai operan kanan, maka kondisi menjadi benar. Lebih besar atau sama dengan &gt;= 5 &gt;= 3 bernilai True Jika nilai operan kiri lebih besar dari nilai operan kanan, atau sama, maka kondisi menjadi benar. Lebih kecil atau sama dengan &lt;= 5&lt;= 3 bernilai True Jika nilai operan kiri lebih kecil dari nilai operan kanan, atau sama, maka kondisi menjadi benar. Operator Penugasan # Operator penugasan digunakan untuk memberikan atau memodifikasi nilai ke dalam sebuah variabel.
Operator Contoh Penjelasan Sama dengan = a = 1 Memberikan nilai di kanan ke dalam variabel yang berada di sebelah kiri. Tambah sama dengan += a += 2 Memberikan nilai variabel dengan nilai variabel itu sendiri ditambah dengan nilai di sebelah kanan. Kurang sama dengan -= a -= 2 Memberikan nilai variabel dengan nilai variabel itu sendiri dikurangi dengan nilai di sebelah kanan. Kali sama dengan *= a *= 2 Memberikan nilai variabel dengan nilai variabel itu sendiri dikali dengan nilai di sebelah kanan. Bagi sama dengan /= a /= 4 Memberikan nilai variabel dengan nilai variabel itu sendiri dibagi dengan nilai di sebelah kanan. Sisa bagi sama dengan %= a %= 3 Memberikan nilai variabel dengan nilai variabel itu sendiri dibagi dengan nilai di sebelah kanan. Yang diambil nantinya adalah sisa baginya. Pangkat sama dengan **= a **= 3 Memberikan nilai variabel dengan nilai variabel itu sendiri dipangkatkan dengan nilai di sebelah kanan. Pembagian bulat sama dengan //= a //= 3 Membagi bulat operan sebelah kiri operator dengan operan sebelah kanan operator kemudian hasilnya diisikan ke operan sebelah kiri. Prioritas Eksekusi Operator di Python # Dari semua operator diatas, masing-masing mempunyai urutan prioritas yang nantinya prioritas pertama akan dilakukan paling pertama, begitu seterusnya sampai dengan prioritas terakhir.
Operator Keterangan ** Aritmatika ~, +, - Bitwise *, /, %, // Aritmatika +, -	Aritmatika \\&gt;&gt;, \\&lt;&lt; Bitwise &amp; Bitwise ^, |	Bitwise &lt;=, &lt;, &gt;, &gt;=	Perbandingan &lt;&gt; , ==, !=	Perbandingan =, %=, /=, //=, -=, +=, *=, **= Penugasan is, is not Identitas in, not in Membership (Keanggotaan) not, or, and Logika `}),e.add({id:75,href:"/html/tutorial/classes/",title:"Clases",description:"HTML classes adalah sebuah panggilan untuk melakukan pengelompokan atau class. misalnya saya ingin membuat class header dan class untuk paragraphs.",content:`HTML CLASSES # Apa itu HTML classes ? # HTML classes adalah sebuah panggilan untuk melakukan pengelompokan atau class. misalnya saya ingin membuat class header dan class untuk paragraphs.
Langsung saja ke demonya agar lebih paham # Untuk melakukan class/pengelompokan terdapat sebuah tag yang bernama &lt;div&gt; yang dimana sebuah element harus diletakkan di dalam &lt;div&gt;, biasanya &lt;div&gt; akan diberi sebuah property yaitu class=&quot;&quot; atau id=&quot;&quot;
Contoh # Penggunaan tag &lt;div&gt;dan property class
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Pengelompokan/class&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- Harus di bungkus dalam tag &lt;div&gt; --&gt; &lt;!-- Yang diberi nama class yaitu header --&gt; &lt;div class=&quot;box&quot;&gt; &lt;h1&gt;Hello world&lt;/h1&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Contoh lagi # &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Contoh ke 2&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;main&quot;&gt; &lt;p&gt;Halo nama saya kuro&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Styling dengan css # Keuntungan menggunakan class ini kita bisa melakukan style di class itu. Jika kita ingin memberi style pada sebuah class maka kita perlu melakukan .+nama class. Jika menggunakan id maka lakukan #+nama id
Contoh styling menggunakan nama class # /* sebuah titik di depan nama class */ .box { width: 100px; height: 100px; background-color: red; } Artinya saya akan memberi style pada sebuah class yang bernama box dengan property width,height,dan background-color
Dengan element di dalamnya # .box h1 { color: blue; } Artinya saya akan memberi style pada sebuah class yang didalamnya terdapat tag &lt;h1&gt; dengan property color.
Contoh styling menggunakan id # #main { width: 100px; height: 100px; background-color: red; } Artinya saya akan memberi style pada sebuah id yang bernama main dengan property width,height,dan background-color
Dengan element di dalamnya # #main p { color: purple; } Artinya saya akan memberi style pada sebuah id yang bernama main yang di dalamnya terdapat tag &lt;p&gt; dengan property color
Note # untuk penamaan class dan id itu bebas atau sesuai keinginan. Jika memakai id hanya dapat boleh satu dalam suatu halaman, tidak boleh sama dengan element lain. Jika memakai class diperbolehkan sama dengan element lain.
`}),e.add({id:76,href:"/python/tutorial/kondisi/",title:"Kondisi di dalam Python",description:"Kondisi dalam Python.",content:`Kondisi If # Pengambilan keputusan (kondisi if) digunakan untuk mengantisipasi kondisi yang terjadi saat jalanya program dan menentukan tindakan apa yang akan diambil sesuai dengan kondisi.
Pada python ada beberapa statement/kondisi diantaranya adalah if, else dan elif Kondisi if digunakan untuk mengeksekusi kode jika kondisi bernilai benar True.
Jika kondisi bernilai salah False maka statement/kondisi if tidak akan di-eksekusi.
Dibawah ini adalah contoh penggunaan kondisi if pada Python
#Kondisi if adalah kondisi yang akan dieksekusi oleh program jika bernilai benar atau TRUE nilai = 9 #jika kondisi benar/TRUE maka program akan mengeksekusi perintah dibawahnya if(nilai &gt; 7): print(&quot;Sembilan Lebih Besar Dari Angka Tujuh&quot;) # Kondisi Benar, Dieksekusi #jika kondisi salah/FALSE maka program tidak akan mengeksekusi perintah dibawahnya if(nilai &gt; 10): print(&quot;Sembilan Lebih Besar Dari Angka Sepuluh&quot;) # Kondisi Salah, Maka tidak tereksekusi Dari contoh diatas, jika program dijalankan maka akan mencetak string &ldquo;Sembilan Lebih Besar Dari Angka Tujuh&rdquo; sebanyak 1 kali yaitu pada if pertama. Di if kedua statement bernilai salah, jadi perintah print(&ldquo;Sembilan Lebih Besar Dari Angka Sepuluh&rdquo;) tidak akan dieksekusi.
Kondisi If Else # Pengambilan keputusan (kondisi if else) tidak hanya digunakan untuk menentukan tindakan apa yang akan diambil sesuai dengan kondisi, tetapi juga digunakan untuk menentukan tindakan apa yang akan diambil/dijalankan jika kondisi tidak sesuai.
Pada python ada beberapa statement/kondisi diantaranya adalah if, else dan elif Kondisi if digunakan untuk mengeksekusi kode jika kondisi bernilai benar.
Kondisi if else adalah kondisi dimana jika pernyataan benar True maka kode dalam if akan dieksekusi, tetapi jika bernilai salah False maka akan mengeksekusi kode di dalam else.
Dibawah ini adalah contoh penggunaan kondisi if else pada Python
#Kondisi if else adalah jika kondisi bernilai TRUE maka akan dieksekusi pada if, tetapi jika bernilai FALSE maka akan dieksekusi kode pada else nilai = 3 #Jika pernyataan pada if bernilai TRUE maka if akan dieksekusi, tetapi jika FALSE kode pada else yang akan dieksekusi. if(nilai &gt; 7): print(&quot;Selamat Anda Lulus&quot;) else: print(&quot;Maaf Anda Tidak Lulus&quot;) Pada contoh diatas, jika program dijalankan maka akan mencetak string &ldquo;Maaf Anda Tidak Lulus&rdquo; karena pernyataan pada if bernilai False
Kondisi Elif # Pengambilan keputusan (kondisi if elif) merupakan lanjutan/percabangan logika dari “kondisi if”. Dengan elif kita bisa membuat kode program yang akan menyeleksi beberapa kemungkinan yang bisa terjadi. Hampir sama dengan kondisi “else”, bedanya kondisi “elif” bisa banyak dan tidak hanya satu.
Dibawah ini adalah contoh penggunaan kondisi elif pada Python
#Contoh penggunaan kondisi elif hari_ini = &quot;Minggu&quot; if(hari_ini == &quot;Senin&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Selasa&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Rabu&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Kamis&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Jumat&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Sabtu&quot;): print(&quot;Saya akan kuliah&quot;) elif(hari_ini == &quot;Minggu&quot;): print(&quot;Saya akan libur&quot;) Pada contoh diatas, jika program dijalankan maka akan mencetak string &ldquo;Saya akan libur&rdquo;.
`}),e.add({id:77,href:"/html/tutorial/html-id/",title:"HTML ID",description:"ID adalah attribute pada HTML yang digunakan untuk memberikan tanda pada element HTML yang sifatnya unique.",content:`HTML ID # ID adalah attribute pada HTML yang digunakan untuk memberikan tanda pada element HTML yang sifatnya unique. Unique? Artinya kalian tidak boleh memiliki element dengan ID yang sama di dalam HTML. Cara mengakses ID di dalam CSS adalah dengan tanda pagar (#), misalnya seperti di bawah ini:
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;HTML ID&lt;/title&gt; &lt;style&gt; #coba-id { color: lightblue; background-color: teal; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 id=&quot;coba-id&quot;&gt;memberi style pada id&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; Perbedaan ID dengan class # Element HTML boleh memiliki class yang sama, sementara ID tidak. ID memiliki specifity yang lebih besar dibanding dengan class, apa maksudnya ini? Lihat contoh dibawah agar lebih jelas. &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Contoh Specifity Pada ID&lt;/title&gt; &lt;style&gt; #ini-id { color: lightgreen; background-color: blue; } .ini-class { background-color: red; color: orange; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 id=&quot;ini-id&quot; class=&quot;ini-class&quot;&gt;ID Memiliki Specifity lebih besar dibandingkan class&lt;/h1&gt; &lt;!-- h1 di atas akan memiliki warna lightgreen dengan background blue, sesuai dengan style yang diberikan pada ID. --&gt; &lt;!-- Hal ini disebabkan karena ID memiliki speficity lebih besar dibandingkan dengan class. --&gt; &lt;/body&gt; &lt;/html&gt; Catatan:
Penulisan ID bersifat case sensitif, berarti id=&quot;test-id&quot; dengan id=&quot;TEST-ID&quot; itu berbeda. Penulisan ID harus memiliki setidaknya 1 karakter. Penulisan ID tidak boleh diawali dengan angka. Penulisan ID tidak boleh mengandung spasi, tab, dan sejenisnya. Referensi:
W3School MDN `}),e.add({id:78,href:"/python/tutorial/perulangan/",title:"Perulangan di dalam Python",description:"Perulangan dalam Python.",content:`Apa itu loop? # Secara umum, pernyataan pada bahasa pemrograman akan dieksekusi secara berurutan. Pernyataan pertama dalam sebuah fungsi dijalankan pertama, diikuti oleh yang kedua, dan seterusnya. Tetapi akan ada situasi dimana Anda harus menulis banyak kode, dimana kode tersebut sangat banyak. Jika dilakukan secara manual maka Anda hanya akan membuang-buang tenaga dengan menulis beratus-ratus bahkan beribu-ribu kode. Untuk itu Anda perlu menggunakan pengulangan di dalam bahasa pemrograman Python.
Jenis loop dalam Python # Di dalam bahasa pemrograman Python pengulangan dibagi menjadi 3 bagian, yaitu :
While Loop For Loop Nested Loop While Loop # Pengulangan While Loop di dalam bahasa pemrograman Python dieksesusi statement berkali-kali selama kondisi bernilai benar atau True.
Dibawah ini adalah contoh penggunaan pengulangan While Loop.
#Contoh penggunaan While Loop #Catatan: Penentuan ruang lingkup di Python bisa menggunakan tab alih-alih menggunakan tanda kurung count = 0 while (count &lt; 9): print (&quot;The count is: &quot;, count) count = count + 1 print (&quot;Good bye!&quot;) For Loop # Pengulangan for pada Python memiliki kemampuan untuk mengulangi item dari urutan apapun, seperti list atau string.
Dibawah ini adalah contoh penggunaan pengulangan For Loop.
#Contoh pengulangan for sederhana angka = [1,2,3,4,5] for x in angka: print(x) #Contoh pengulangan for buah = [&quot;nanas&quot;, &quot;apel&quot;, &quot;jeruk&quot;] for makanan in buah: print (&quot;Saya suka makan&quot;, makanan) Nested Loop # Bahasa pemrograman Python memungkinkan penggunaan satu lingkaran di dalam loop lain. Bagian berikut menunjukkan beberapa contoh untuk menggambarkan konsep tersebut.
Dibawah ini adalah contoh penggunaan Nested Loop.
#Contoh penggunaan Nested Loop #Catatan: Penggunaan modulo pada kondisional mengasumsikan nilai selain nol sebagai True(benar) dan nol sebagai False(salah) i = 2 while(i &lt; 100): j = 2 while(j &lt;= (i/j)): if not(i%j): break j = j + 1 if (j &gt; i/j) : print(i, &quot; is prime&quot;) i = i + 1 print(&quot;Good bye!&quot;) `}),e.add({id:79,href:"/html/tutorial/iframe/",title:"Iframe",description:"Iframe adalah singkatan dari Inline Frame, sebuah komponen dari file HTML yang memungkinkan Anda menyematkan video, dokumen, dan file lainnya ke dalam sebuah halaman website.",content:`HTML Iframe # Iframe adalah singkatan dari Inline Frame, sebuah komponen dari file HTML yang memungkinkan Anda menyematkan video, dokumen, dan file lainnya ke dalam sebuah halaman website.
Proses untuk menyematkan file dengan teknik ini disebut sebagai embed iframe. Pada sebuah file HTML, penggunaan iframe ditandai dengan adanya tag &lt;iframe&gt;.
Ketika menggunakan iframe HTML, file yang disematkan bisa berasal dari halaman lain website Anda. Namun, bisa juga dari website lain. Contoh yang paling umum dari penggunaan iframe adalah penyematan video YouTube.
Contoh # &lt;iframe src=&quot;url&quot; title=&quot;isi dari deksripsi iframe&quot;&gt;&lt;/iframe&gt; Contoh menghilangkan border pada iframe jika terdapat border
&lt;iframe src=&quot;url&quot; style=&quot;border:none;&quot; title=&quot;contoh&quot;&gt;&lt;/iframe&gt; `}),e.add({id:80,href:"/python/tutorial/number/",title:"Number di dalam Python",description:"Number di dalam Python.",content:`Number adalah tipe data Python yang menyimpan nilai numerik. Number adalah tipe data yang tidak berubah. Ini berarti, mengubah nilai dari sejumlah tipe data akan menghasilkan objek yang baru dialokasikan.
Objek Number dibuat saat Kita memberikan nilai pada-nya. Sebagai contoh : angkaPertama = 1 angkaKedua = 33
Python mendukung beberapa tipe data Number diantaranya :
Int Float Complex Berikut ini adalah beberapa contoh dari Tipe data Number pada Python :
Int Float Complex 20 0.1 3.14j 300 1.20 35.j -13 -41.2 3.12e-12j 020 32.23+e123 .873j -0103 -92. -.123+0J -0x212 -32.52e10 3e+123J 0x56 60.2-E13 4.31e-4j Konversi Tipe Data Number Python # Pada Python kita bisa mengkonversi tipe data dengan menggunakan fungsi. Dibawah ini adalah beberapa fungsi untuk mengkonversi tipe data number Python.
int(x) untuk meng-konversi x menjadi plain integer. long(x) untuk meng-konversi x menjadi long integer. float(x) untuk meng-konversi x menjadi floating point number. complex(x)untuk meng-konversi x menjadi complex number dengna real part x dan imaginary part zero. complex(x, y) untuk meng-konversi x dan y menjadi complex number dengan real part x dan imaginary part y. x dan numeric expressions y. Fungsi Matematika Python # Pada bahasa pemrograman Python terdapat fungsi untuk melakukan perhitungan matematis, berikut adalah daftarnya :
Nama Penggunaan Penjelasan Absolute abs(x) Nilai absolut dari x:(positive) jarak antara x and 0. Ceiling ceil(x) Ceiling dari x: integer terkecil yang kurang dari x. Cmp cmp(x, y)	-1 if x &lt; y, 0 if x == y, or 1 if x &gt; y. Tidak berlaku lagi dengan Python 3. Sebaliknya gunakan return (x&gt;y)-(x Eksponen exp(x) Nilai eksponen dari x: ex Fabs fabs(x) Nilai absolut dari x. Floor floor(x) Nilai dasar dari x: internet terbesar tidak lebih besar dari x. Log log(x) Logaritma dari x, untuk x &gt; 0. Log 10 log10(x) Basis 10 logaritma dari x, untuk x &gt; 0. Max max(x1, x2,&hellip;) Argumen terbesar: Nilai terdekat dengan tak terhingga positif Min min(x1, x2,&hellip;) Argumen terkecil: nilai yang paling mendekati tak berhingga negatif. Modf modf(x) Bagian pecahan dan bilangan bulat dari x dalam tupel dua item. Kedua bagian memiliki tanda yang sama dengan x. Bagian integer dikembalikan sebagai float. Pow pow(x, y) Nilai x ** y. Round round(x [,n]) X dibulatkan menjadi n digit dari titik desimal. Putaran Python jauh dari nol sebagai tie-breaker: round (0.5) adalah 1.0 dan round (-0.5) adalah -1.0. Akar Kuadrat sqrt(x) Akar kuadrat x untuk x&gt; 0. Fungsi Nomor Acak Python # Nomor acak digunakan untuk aplikasi permainan, simulasi, pengujian, keamanan, dan privasi. Python mencakup fungsi berikut yang umum digunakan. Berikut adalah daftarnya :
Nama Penggunaan Penjelasan Choice choice(seq) Item acak dari list, tuple, atau string. RandRange randrange ([start,] stop [,step]) Elemen yang dipilih secara acak dari jangkauan (start, stop, step). Random random() A random float r, sehingga 0 kurang dari atau sama dengan r dan r kurang dari 1 Seed seed([x]) Menetapkan nilai awal integer yang digunakan dalam menghasilkan bilangan acak. Panggil fungsi ini sebelum memanggil fungsi modul acak lainnya. Tidak ada pengembalian Shuffle shuffle(lst) Mengacak daftar dari daftar di tempat. Tidak ada pengembalian Floor floor(x) The floor of x: the largest integer not greater than x. Uniform uniform(x, y) Sebuah float acak r, sedemikian rupa sehingga x kurang dari atau sama dengan r dan r kurang dari y. Fungsi Trigonometri Python # Python mencakup fungsi berikut yang melakukan perhitungan trigonometri. Berikut adalah daftarnya :
Nama Penggunaan Penjelasan Acos acos(x) Kembalikan kosinus x, di radian. Asin asin(x) Kembalikan busur sinus x, dalam radian. Atan atan(x) Kembalikan busur singgung x, di radian. Atan 2 atan2(y, x) Kembali atan (y / x), di radian. Kosinus cos(x) Kembalikan kosinus x radian. Hypot hypot(x, y) Kembalikan norma Euclidean, sqrt (x * x + y * y). Sin sin(x) Kembalikan sinus dari x radian. Tan tan(x) Kembalikan tangen x radian. Derajat degrees(x) Mengonversi sudut x dari radian ke derajat. Radian radians(x) Mengonversi sudut x dari derajat ke radian. Konstanta Matematika Python # Berikut adalah daftar konstanta matematika dalam python:
Nama Penggunaan Penjelasan Pi pi Konstanta Pi matematika e e Konstanta e matematika `}),e.add({id:81,href:"/html/tutorial/script/",title:"Script",description:"Dalam HTML, tag `<script>` digunakan untuk menyisipkan script, biasanya menggunakan Javascript.",content:`HTML Script # Dalam HTML, tag &lt;script&gt; digunakan untuk menyisipkan script, biasanya menggunakan Javascript. Kenapa kita membutuhkan script? Hal ini diperlukan untuk membuat website kita menjadi semakin interaktif. Kalian bisa menuliskan script langsung di dalam HTML atau bisa juga dipisah menjadi file yang berbeda lalu tambahkan attribute src=&quot;&quot; untuk menyambungkan script tersebut.
Memanipulasi website dengan Javascript disebut dengan DOM Manipulation. Kalian bisa belajar tentang DOM Manipulation di repository bellshade Javascript.
Contoh Penggunaan &lt;script&gt; # &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Script&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 id=&quot;h1&quot;&gt;Belum diklik!&lt;/h1&gt; &lt;button id=&quot;button&quot;&gt;Klik Saya!&lt;/button&gt; &lt;script&gt; document.getElementById(&quot;button&quot;).addEventListener(&quot;click&quot;, function () { document.getElementById(&quot;h1&quot;).innerText = &quot;Sudah diklik!&quot;; }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; Attribute yang ada pada &lt;script&gt; # Attribute value Deskripsi async async Digunakan untuk membuat script didownload saat HTML sedang diparse, lalu setelah selesai didownload, script langsung dieksekusi/dijalankan tanpa perlu menunggu pada titik yang memiliki tag &lt;script&gt;. (Attribute ini hanya bisa digunakan pada script eksternal) crossorigin anonymous, use-credential Membuat mode request menjadi HTTP CORS Request. defer defer Digunakan untuk membuat script didownload pada saat HTML sedang diparse. Setelah selesai didownload, script tidak langsung dieksekusi. Script baru dieksekusi dan dijalankan ketika HTML telah selesai diparse. (Attribute ini hanya bisa digunakan pada script eksternal) integrity hash file Digunakan untuk mengizinkan browser memeriksa script yang diambil untuk memastikan bahwa jangan jalankan apabila sumber dimanipulasi. nomodule true, false Digunakan untuk menentukan bahwa script tidak boleh dijalankan di browser yang mendukung modul ES2015. reffererpolicy no-referrer, no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url Digunakan untuk menentukan informasi mana yang akan dikirim saat mengambil script. src URL Digunakan untuk menentukan url dari file script yang akan digunakan. type scripttype Digunakan untuk menentukan jenis media dari script. Referensi:
W3School `}),e.add({id:82,href:"/python/tutorial/string/",title:"String di dalam Python",description:"String di dalam Python.",content:`String adalah jenis yang paling populer di bahasa pemrograman. Kita bisa membuatnya hanya dengan melampirkan karakter dalam tanda kutip. Python memperlakukan tanda kutip tunggal sama dengan tanda kutip ganda. Membuat string semudah memberi nilai pada sebuah variabel.
Dibawah ini adalah contoh sederhana dari sebuah string pada bahasa pemrograman Python.
print(&ldquo;Hello World&rdquo;) Mengakses Nilai dalam String Python tidak menggunakan tipe karakter titik koma ; Ini diperlakukan sebagai string dengan panjang satu, sehingga juga dianggap sebagai substring.
Untuk mengakses substring, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan substring Anda. Sebagai contoh :
name = &lsquo;John Doe&rsquo; message = &ldquo;John Doe belajar bahasa python di Belajarpython&rdquo; print (&ldquo;name[0]: &ldquo;, name[0]) print (&ldquo;message[1:4]: &ldquo;, message[1:4]) Bila kode diatas dieksekusi, maka akan menghasilkan hasil sebagai berikut :
name[0]: J message[1:4]: ohn
Mengupdate String Anda dapat “memperbarui” string yang ada dengan (kembali) menugaskan variabel ke string lain. Nilai baru dapat dikaitkan dengan nilai sebelumnya atau ke string yang sama sekali berbeda sama sekali. Sebagai contoh
message = &lsquo;Hello World&rsquo; print (&ldquo;Updated String :- &ldquo;, message[:6] + &lsquo;Python&rsquo;) Bila kode diatas dieksekusi, maka akan menghasilkan hasil sebagai berikut :
Updated String :- Hello Python
Escape Characters / Karakter Escape Python Dibawah ini adalah tabel dari daftar karakter escape atau karakter non-printable yang dapat diwakili/ditulis dengan awalan notasi backslash.
Notasi Backslash	Karakter Hexadecimal	Penjelasan \\a	0x07	Bell atau alert \\b	0x08	Backspace \\cx	Control-x \\C-x	Control-x \\e	0x1b	Escape \\f	0x0c	Formfeed \\M-\\C-x	Meta-Control-x \\n	0x0a	Newline \\nnn	Octal notation, dimana n berada di range 0.7 \\r	0x0d	Carriage return \\s	0x20	Space \\t	0x09	Tab \\v	0x0b	Vertical tab \\x	Character x \\xnn	Notasi Hexadecimal, dimana n berada di range 0.9, a.f, atau A.F Operator Spesial String Python Asumsikan variabel string adalah ‘Belajar’ dan variabel b adalah ‘Python’, lalu dibawah ini adalah operator yang bisa dipakai pada kedua string di variabel tersebut. a = &ldquo;Belajar&rdquo; b = &ldquo;Python&rdquo;
Berikut adalah daftar operator spesial string pada Python :
Operator	Contoh Penjelasan
a + b	akan menghasilkan BelajarPython Concatenation - Menambahkan nilai pada kedua sisi operator a*2	akan menghasilkan BelajarBelajar Pengulangan - Membuat string baru, menggabungkan beberapa salinan dari string yang sama []	a[1]	akan menghasilkan e Slice - Memberikan karakter dari indeks yang diberikan [ : ]	a[1:4]	akan menghasilkan ela Range Slice - Memberikan karakter dari kisaran yang diberikan in	B in a	akan menghasilkan 1 Keanggotaan - Mengembalikan nilai true jika ada karakter dalam string yang diberikan not in	Z not in a	akan menghasilkan 1 Keanggotaan - Mengembalikan nilai true jika karakter tidak ada dalam string yang diberikan r/R	print r’\\n’ prints \\n dan print R’\\n’prints \\n Raw String -	Menekan arti aktual karakter Escape. Sintaks untuk string mentah sama persis dengan string biasa kecuali operator string mentah, huruf “r”, yang mendahului tanda petik. “R” bisa berupa huruf kecil (r) atau huruf besar (R) dan harus ditempatkan tepat sebelum tanda kutip pertama. %	Format - Melakukan format String Operator Format String Python Salah satu fitur Python yang paling keren adalah format string operator %. Operator ini unik untuk string dan membuat paket memiliki fungsi dari keluarga printf C () C. berikut adalah contoh sederhananya : print (&ldquo;My name is %s and weight is %d kg!&rdquo; % (&lsquo;Zara&rsquo;, 21)) Berikut adalah daftar lengkap simbol yang bisa digunakan bersamaan dengan % :
Operator	Penjelasan %c	character %s	Konversi string melalui str () sebelum memformat %i	Dianggap sebagai bilangan bulat desimal %d	Dianggap sebagai bilangan bulat desimal %u	Unsigned decimal integer %o	Bilangan bulat oktal %x	Bilangan bulat heksadesimal (huruf kecil) %X	Bilangan bulat heksadesimal (huruf besar) %e	Notasi eksponensial (dengan huruf kecil ‘e’) %E	Notasi eksponensial (dengan huruf besar ‘E’) %f	Bilangan real floating point %g	Yang lebih pendek dari% f dan% e %G	Lebih pendek dari% f dan% E Triple Quote Python Python triple quotes digunakan dengan membiarkan string untuk ditulis dalam beberapa baris, termasuk kata kerja NEWLINEs, TABs, dan karakter khusus lainnya. Sintaks untuk triple quotes terdiri dari tiga tanda kutip tunggal atau ganda ditulis berturut-turut : Berikut adalah contohnya :
kutipantiga = &ldquo;&ldquo;&ldquo;this is a long string that is made up of several lines and non-printable characters such as TAB ( \\t ) and they will show up that way when displayed. NEWLINEs within the string, whether explicitly given like this within the brackets [ \\n ], or just a NEWLINE within the variable assignment will also show up. &quot;&rdquo;&rdquo; print (kutipantiga) String Unicode Python Pada Python 3, semua string diwakili dalam Unicode. Sedangkan pada Python 2 disimpan secara internal sebagai 8-bit ASCII, maka diperlukanlampiran ‘u’ untuk membuatnya menjadi Unicode. Tetapi hal ini tidak lagi diperlukan sekarang. :
Metode String Built-in
Python menyertakan metode built-in berikut untuk memanipulasi string
Metode	Penjelasan capitalize()	Meng-kapitalkan huruf pertama string center(width, fillchar)	Mengembalikan string yang dilapisi dengan fillchar dengan string asli yang dipusatkan pada total width kolom. count(str, beg = 0,end = len(string))	Menghitung berapa kali str yang terjadi dalam string atau dalam substring string jika memulai indeks beg dan end index end diberikan. decode(encoding = &lsquo;UTF-8&rsquo;,errors = &lsquo;strict&rsquo;)	Dekode string menggunakan codec yang terdaftar untuk pengkodean. Encoding default ke pengkodean string default. encode(encoding = &lsquo;UTF-8&rsquo;,errors = &lsquo;strict&rsquo;)	Mengembalikan versi string yang dikodekan string; Pada kesalahan, default adalah menaikkan ValueError kecuali jika kesalahan diberikan dengan ‘ignore’ atau ‘replace’. endswith(suffix, beg = 0, end = len(string))	Menentukan apakah string atau substring string (jika memulai indeks memohon dan mengakhiri akhir indeks diberikan) berakhir dengan akhiran; Mengembalikan nilai true jika benar dan salah. expandtabs(tabsize = 8)	Memperluas tab dalam string ke banyak ruang; Default ke 8 spasi per tab jika tabsize tidak tersedia. find(str, beg = 0 end = len(string))	Tentukan jika str terjadi dalam string atau dalam substring string jika memulai indeks beg dan end index end diberikan return index jika ditemukan dan -1 sebaliknya. index(str, beg = 0, end = len(string))	Sama seperti find (), namun menimbulkan pengecualian jika str tidak ditemukan. isalnum()	Mengembalikan true jika string memiliki minimal 1 karakter dan semua karakternya alfanumerik dan false sebaliknya. isalpha()	Mengembalikan true jika string memiliki minimal 1 karakter dan semua karakter adalah abjad dan false sebaliknya. isdigit()	Mengembalikan true jika string hanya berisi digit dan false sebaliknya. islower()	Mengembalikan true jika string memiliki setidaknya 1 karakter casing dan semua karakter casing dalam huruf kecil dan false sebaliknya. isnumeric()	Mengembalikan true jika string unicode hanya berisi karakter numerik dan false sebaliknya. isspace()	Mengembalikan true jika string hanya berisi karakter spasi dan false sebaliknya. istitle()	Mengembalikan true jika string benar “titlecased” dan false sebaliknya. isupper()	Mengembalikan true jika string memiliki setidaknya satu karakter casing dan semua karakter casing ada dalam huruf besar dan false sebaliknya. join(seq)	Merges (concatenates) representasi string elemen dalam urutan seq menjadi string, dengan string pemisah. len(string)	Mengembalikan panjang string ljust(width[, fillchar])	Mengembalikan string berlapis ruang dengan string asli dibiarkan dibenarkan ke kolom lebar total. lower()	Mengonversi semua huruf besar dalam bentuk string menjadi huruf kecil. lstrip()	Menghapus semua spasi utama dalam string. maketrans()	Mengembalikan tabel terjemahan untuk digunakan dalam fungsi terjemahan. max(str)	Mengembalikan karakter alfabetik dari string str. min(str)	Mengembalikan min karakter abjad dari string str. replace(old, new [, max])	Menggantikan semua kemunculan lama dalam string dengan kejadian baru atau paling maksimal jika max diberikan. rfind(str, beg = 0,end = len(string))	Sama seperti find (), tapi cari mundur dalam string. rindex( str, beg = 0, end = len(string))	Sama seperti index (), tapi cari mundur dalam string. rjust(width,[, fillchar])	Mengembalikan string berlapis ruang dengan senar asli benar-dibenarkan untuk total kolom lebar. rstrip()	Menghapus semua spasi spasi string. split(str=&rdquo;&rdquo;, num=string.count(str))	Membagi string sesuai dengan pemisah str (ruang jika tidak disediakan) dan mengembalikan daftar substring; Terpecah menjadi paling banyak substring jika diberikan. splitlines( num=string.count(&rsquo;\\n&rsquo;))	Membagi string sama sekali (atau num) NEWLINEs dan mengembalikan daftar setiap baris dengan NEWLINEs dihapus. startswith(str, beg=0,end=len(string)	Determines if string or a substring of string (if starting index beg and ending index end are given) starts with substring str; returns true if so and false otherwise. strip([chars])	Lakukan kedua lstrip () dan rstrip () pada string swapcase()	Kasus invers untuk semua huruf dalam string. title()	Mengembalikan versi string “titlecased”, yaitu, semua kata diawali dengan huruf besar dan sisanya huruf kecil. translate(table, deletechars=&rdquo;&rdquo;)	Menerjemahkan string sesuai dengan tabel terjemahan str (256 karakter), menghapus string del. upper()	Mengonversi huruf kecil dalam bentuk string ke huruf besar. zfill (width)	Mengembalikan string asli yang tertinggal dengan angka nol ke total karakter lebar; Dimaksudkan untuk angka, zfill () mempertahankan tanda apapun yang diberikan (kurang satu nol). isdecimal()	Mengembalikan nilai true jika string unicode hanya berisi karakter desimal dan false sebaliknya.
`}),e.add({id:83,href:"/html/tutorial/file-path/",title:"File Path",description:"File path menjelaskan tentang lokasi file, gambar, dll. lebih dikenal dengan struktur folder website",content:`File Path Pada HTML # File path menjelaskan tentang lokasi file, gambar, dll. lebih dikenal dengan struktur folder website
Contoh # File HTML dan File Lainnya Bersamaan # &lt;img src=&quot;gambar_pemandangan.jpg&quot;&gt; Maka file gambar tersebut terletak sama dengan file html
📂HTML-CSS/ ├── 📄index.html └── 🚞gambar_pemandangan.jpg File HTML Terpisah dan File Lainnya Dalam Folder Lain # &lt;img src=&quot;picture/gambar_saya.jpg&quot;&gt; Maka file tersebut terdapat pada folder picture
📂HTML-CSS/ ├── 📄index.html └── 📂Pictures/ └── 🚞gambar_pemandangan.jpg File HTML Terpisah dan File Lainnya dengan URL # &lt;img src=&quot;https://gambarsaya.url/gambar.jpg&quot;&gt; Contoh Selain dengan Gambar # Memanggil file CSS dan file html terpisah
&lt;link rel=&quot;stylesheet&quot; href=&quot;folder_lain/file.css&quot; /&gt; Memanggil file JavaScript dan file HTML terpisah
&lt;script src=&quot;folder_lain/file.js&quot;&gt;&lt;/script&gt; `}),e.add({id:84,href:"/python/tutorial/list/",title:"Lists di dalam Python",description:"Lists di dalam Python.",content:`Dalam bahasa pemrograman Python, struktur data yang paling dasar adalah urutan atau lists. Setiap elemen-elemen berurutan akan diberi nomor posisi atau indeksnya. Indeks pertama dalam list adalah nol, indeks kedua adalah satu dan seterusnya.
Python memiliki enam jenis urutan built-in, namun yang paling umum adalah list dan tuple. Ada beberapa hal yang dapat Kita lakukan dengan semua jenis list. Operasi ini meliputi pengindeksan, pengiris, penambahan, perbanyak, dan pengecekan keanggotaan. Selain itu, Python memiliki fungsi built-in untuk menemukan panjang list dan untuk menemukan elemen terbesar dan terkecilnya.
Membuat List Python # List adalah tipe data yang paling serbaguna yang tersedia dalam bahasa Python, yang dapat ditulis sebagai daftar nilai yang dipisahkan koma (item) antara tanda kurung siku. Hal penting tentang daftar adalah item dalam list tidak boleh sama jenisnya.
Membuat list sangat sederhana, tinggal memasukkan berbagai nilai yang dipisahkan koma di antara tanda kurung siku. Dibawah ini adalah contoh sederhana pembuatan list dalam bahasa Python.
#Contoh sederhana pembuatan list pada bahasa pemrograman python list1 = ['kimia', 'fisika', 1993, 2017] list2 = [1, 2, 3, 4, 5 ] list3 = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;] Akses Nilai Dalam List Python # Untuk mengakses nilai dalam list python, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan nilai yang tersedia pada indeks tersebut.
Berikut adalah contoh cara mengakses nilai di dalam list python :
#Cara mengakses nilai di dalam list Python list1 = ['fisika', 'kimia', 1993, 2017] list2 = [1, 2, 3, 4, 5, 6, 7 ] print (&quot;list1[0]: &quot;, list1[0]) print (&quot;list2[1:5]: &quot;, list2[1:5]) Setelah Kita menjalankan kode diatas, hasilnya akan seperti dibawah ini :
list1[0]: fisika list2[1:5]: [2, 3, 4, 5]
Update Nilai Dalam List Python # Kita dapat memperbarui satu atau beberapa nilai di dalam list dengan memberikan potongan di sisi kiri operator penugasan, dan Kita juga dapat menambahkan nilai ke dalam list dengan metode append (). Sebagai contoh :
list = ['fisika', 'kimia', 1993, 2017] print (&quot;Nilai ada pada index 2 : &quot;, list[2]) list[2] = 2001 print (&quot;Nilai baru ada pada index 2 : &quot;, list[2]) Hapus Nilai Dalam List Python # Untuk menghapus nilai di dalam list python, Kita dapat menggunakan salah satu pernyataan del jika kita tahu persis elemen yang akan dihapus. Kita dapat menggunakan metode remove() jika tidak tahu persis item mana yang akan dihapus. Sebagai contoh :
#Contoh cara menghapus nilai pada list python list = ['fisika', 'kimia', 1993, 2017] print (list) del list[2] print (&quot;Setelah dihapus nilai pada index 2 : &quot;, list) Operasi Dasar Pada List Python # List Python merespons operator + dan * seperti string; Itu artinya penggabungan dan pengulangan di sini juga berlaku, kecuali hasilnya adalah list baru, bukan sebuah String.
Sebenarnya, list merespons semua operasi urutan umum yang kami gunakan pada String di bab sebelumnya. Dibawah ini adalah tabel daftar operasi dasar pada list python.
Python Expression Hasil len([1, 2, 3, 4]) 4 Length[1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] Concatenation[&lsquo;Halo!&rsquo;] * 4 [&lsquo;Halo!&rsquo;, &lsquo;Halo!&rsquo;, &lsquo;Halo!&rsquo;, &lsquo;Halo!&rsquo;] Repetition2 in [1, 2, 3] True Membership for x in [1,2,3] : print (x,end = &rsquo; &lsquo;) 1 2 3 Indexing, Slicing dan Matrix Pada List Python # Karena list adalah urutan, pengindeksan dan pengiris bekerja dengan cara yang sama untuk list seperti yang mereka lakukan untuk String.
Dengan asumsi input berikut :
L = ['C++'', 'Java', 'Python']
Python Expression Hasil L[2] &lsquo;Python&rsquo;	Offset mulai dari nol L[-2] &lsquo;Java&rsquo;	Negatif: hitung dari kanan [1:] [&lsquo;Java&rsquo;, &lsquo;Python&rsquo;]	Slicing mengambil bagian Method dan Fungsi Build-in Pada List Python # Python menyertakan fungsi built-in sebagai berikut :
Python Function Penjelasan cmp(list1, list2) #	Tidak lagi tersedia dengan Python 3 len(list) Memberikan total panjang list. max(list) Mengembalikan item dari list dengan nilai maks. min(list) Mengembalikan item dari list dengan nilai min. list(seq) Mengubah tuple menjadi list. Python menyertakan methods built-in sebagai berikut # Python Methods Penjelasan list.append(obj) Menambahkan objek obj ke list list.count(obj) Jumlah pengembalian berapa kali obj terjadi dalam list list.extend(seq) Tambahkan isi seq ke list list.index(obj) Mengembalikan indeks terendah dalam list yang muncul obj list.insert(index, obj) Sisipkan objek obj ke dalam list di indeks offset list.pop(obj = list[-1]) Menghapus dan mengembalikan objek atau obj terakhir dari list list.remove(obj) Removes object obj from list list.reverse() Membalik list objek di tempat list.sort([func]) Urutkan objek list, gunakan compare func jika diberikan `}),e.add({id:85,href:"/html/tutorial/head/",title:"Head",description:"merupakan salah satu element utama dalam HTML. Element `<head>` digunakan sebagai wadah untuk metadata pada HTML.",content:`HTML Head # &lt;head&gt; merupakan salah satu element utama dalam HTML. Element &lt;head&gt; digunakan sebagai wadah untuk metadata pada HTML. Apa itu metadata? Pada HTML, metadata adalah data yang berisi tentang informasi dokumen HTML, dan metadata tidak akan ditampilkan ketika kode dijalankan. Metadata biasanya digunakan untuk menentukan judul dokumen, style, script, dan informasi meta lainnya. Element yang biasa dimasukkan pada tag &lt;head&gt; adalah &lt;title&gt;, &lt;style&gt;, &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;, dan &lt;base&gt;.
&lt;title&gt; # &lt;title&gt; digunakan untuk memberikan judul pada halaman website. &lt;title&gt; hanya boleh berisi teks dan akan ditampilkan pada bar tab dalam browser. Element ini wajib ada pada dokumen HTML. Element ini juga sangat penting untuk Search Engine Optimization (SEO) karena akan ditampilkan pada mesin pencari.
&lt;style&gt; # &lt;style&gt; digunakan untuk mempercantik halaman website kita. Materi ini sudah pernah dibahas di sini, silahkan cek materi tersebut agar lebih jelas.
&lt;link&gt; # &lt;link&gt; digunakan untuk menghubungkan HTML dengan sumber daya eksternal yang dibutuhkan. Element ini paling sering digunakan untuk menghubungkan HTML dengan CSS eksternal, namun bisa juga digunakan untuk menambahkan favicon pada halaman website. Favicon adalah gambar kecil yang ditampilkan di sebelah judul pada tab browser. Untuk menambahkannya, kalian bisa menggunakan tag &lt;link&gt; seperti ini:
&lt;!DOCTYPE html&gt; &lt;html lang=&quot;id&quot;&gt; &lt;head&gt; &lt;title&gt;Bellshade&lt;/title&gt; &lt;link rel=&quot;shortcut icon&quot; href=&quot;bellshade.png&quot; type=&quot;image/x-icon&quot; /&gt; &lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt; &lt;meta&gt; # &lt;meta&gt; digunakan untuk menentukan karakter set, deskripsi halaman, pembuat halaman, dan lainnya. Selebihnya, lihat materi ini untuk penjelasan lebih detail tentang &lt;meta&gt;
&lt;script&gt; # &lt;script&gt; digunakan untuk menyisipkan script, biasanya menggunakan JavaScript. Coba lihat materi ini karena sudah pernah dibahas sebelumnya.
&lt;base&gt; # &lt;base&gt; digunakan untuk menentukkan URL dasar sebuah dokumen, artinya kita akan membuat sebuah alamat URL sebagai sandaran untuk semua relative URL. Kalian hanya boleh menggunakan satu element &lt;base&gt;. Di dalam element &lt;base&gt; kalian bisa menggunakan href, target, atapun keduanya. Jika kita menambahkan atribut target pada element ini, maka default semua hyperlink akan memiliki atribut yang diberikan pada element &lt;base&gt;.
`}),e.add({id:86,href:"/python/tutorial/tuple/",title:"Tuple di dalam Python",description:"Tuple di dalam Python.",content:`Sebuah tupel adalah urutan objek Python yang tidak berubah. Tupel adalah urutan, seperti daftar. Perbedaan utama antara tupel dan daftarnya adalah bahwa tupel tidak dapat diubah tidak seperti List Python. Tupel menggunakan tanda kurung, sedangkan List Python menggunakan tanda kurung siku.
Membuat tuple semudah memasukkan nilai-nilai yang dipisahkan koma. Secara opsional, Anda dapat memasukkan nilai-nilai yang dipisahkan koma ini di antara tanda kurung juga. Sebagai contoh :
#Contoh sederhana pembuatan tuple pada bahasa pemrograman python
tup1 = (&lsquo;fisika&rsquo;, &lsquo;kimia&rsquo;, 1993, 2017) tup2 = (1, 2, 3, 4, 5 ) tup3 = &ldquo;a&rdquo;, &ldquo;b&rdquo;, &ldquo;c&rdquo;, &ldquo;d&rdquo; Tupel kosong ditulis sebagai dua tanda kurung yang tidak berisi apa-apa, contohnya : tup1 = (); Untuk menulis tupel yang berisi satu nilai, Anda harus memasukkan koma, meskipun hanya ada satu nilai, contohnya : tup1 = (50,) Seperti indeks String, indeks tuple mulai dari 0, dan mereka dapat diiris, digabungkan, dan seterusnya
Akses Nilai Dalam Tuple Python Untuk mengakses nilai dalam tupel, gunakan tanda kurung siku untuk mengiris beserta indeks atau indeks untuk mendapatkan nilai yang tersedia pada indeks tersebut. Sebagai contoh :
#Cara mengakses nilai tuple
tup1 = (&lsquo;fisika&rsquo;, &lsquo;kimia&rsquo;, 1993, 2017) tup2 = (1, 2, 3, 4, 5, 6, 7 )
print (&ldquo;tup1[0]: &ldquo;, tup1[0]) print (&ldquo;tup2[1:5]: &ldquo;, tup2[1:5]) Setelah Anda mengeksekusi kode diatas, hasilnya akan seperti dibawah ini :
tup1[0]: fisika tup2[1:5]: (2, 3, 4, 5)
Update Nilai Dalam Tuple Python Tuple tidak berubah, yang berarti Anda tidak dapat memperbarui atau mengubah nilai elemen tupel. Anda dapat mengambil bagian dari tupel yang ada untuk membuat tupel baru seperti ditunjukkan oleh contoh berikut.
tup1 = (12, 34.56) tup2 = (&lsquo;abc&rsquo;, &lsquo;xyz&rsquo;)
Aksi seperti dibawah ini tidak bisa dilakukan pada tuple python # Karena memang nilai pada tuple python tidak bisa diubah # tup1[0] = 100; # Jadi, buatlah tuple baru sebagai berikut # tup3 = tup1 + tup2 print (tup3) Hapus Nilai Dalam Tuple Python Menghapus elemen tuple individual tidak mungkin dilakukan. Tentu saja, tidak ada yang salah dengan menggabungkan tupel lain dengan unsur-unsur yang tidak diinginkan dibuang.
Untuk secara eksplisit menghapus keseluruhan tuple, cukup gunakan del statement. Sebagai contoh
tup = (&lsquo;fisika&rsquo;, &lsquo;kimia&rsquo;, 1993, 2017) print(tup)
hapus tuple dengan statement del # del tup
lalu buat kembali tuple yang baru dengan elemen yang diinginkan # tup = (&lsquo;Bahasa&rsquo;, &lsquo;Literasi&rsquo;, 2020) print(&ldquo;Setelah menghapus tuple :&rdquo;, tup) Operasi Dasar Pada Tuple Python Tupel merespons operator + dan * sama seperti String; Mereka berarti penggabungan dan pengulangan di sini juga berlaku, kecuali hasilnya adalah tupel baru, bukan string.
Sebenarnya, Tuple merespons semua operasi urutan umum yang kami gunakan pada String di bab sebelumnya. Dibawah ini adalah tabel daftar operasi dasar pada Tuple python
Python Expression	Hasil	Penjelasan len((1, 2, 3))	3	Length (1, 2, 3) + (4, 5, 6)	(1, 2, 3, 4, 5, 6)	Concatenation (‘Halo!’,) * 4	(‘Halo!’, ‘Halo!’, ‘Halo!’, ‘Halo!’)	Repetition 3 in (1, 2, 3)	True	Membership for x in (1,2,3) : print (x, end = ‘ ‘)	1 2 3	Iteration Indexing, Slicing dan Matrix Pada Tuple Python Karena tupel adalah urutan, pengindeksan dan pengiris bekerja dengan cara yang sama untuk tupel seperti pada String, dengan asumsi masukan berikut
Dengan asumsi input berikut : T = (&lsquo;C++&rsquo;, &lsquo;Java&rsquo;, &lsquo;Python&rsquo;)
Python Expression	Hasil	Penjelasan T[2]	&lsquo;Python&rsquo;	Offset mulai dari nol T[-2]	&lsquo;Java&rsquo;	Negatif: hitung dari kanan T[1:]	(&lsquo;Java&rsquo;, &lsquo;Python&rsquo;)	Slicing mengambil bagian Fungsi Build-in Pada Tuple Python Python menyertakan fungsi built-in sebagai berikut
Python Function	Penjelasan cmp(tuple1, tuple2)	# Tidak lagi tersedia dengan Python 3 len(tuple)	Memberikan total panjang tuple. max(tuple)	Mengembalikan item dari tuple dengan nilai maks. min(tuple)	Mengembalikan item dari tuple dengan nilai min. tuple(seq)	Mengubah seq menjadi tuple.
`}),e.add({id:87,href:"/python/tutorial/dictionary/",title:"Dictionary",description:"Dictionary dalam Python.",content:`Dictionary Python berbeda dengan List ataupun Tuple. Karena setiap urutanya berisi key dan value. Setiap key dipisahkan dari value-nya oleh titik dua (:), item dipisahkan oleh koma, dan semuanya tertutup dalam kurung kurawal. Dictionary kosong tanpa barang ditulis hanya dengan dua kurung kurawal, seperti ini: {}.
Nilai kamus bisa berupa tipe apa pun, namun key harus berupa tipe data yang tidak berubah seperti string, angka, atau tupel.
Akses Nilai Dalam Dictionary Python # Untuk mengakses elemen Dictionary, Anda dapat menggunakan tanda kurung siku yang sudah dikenal bersama dengan key untuk mendapatkan nilainya. Berikut adalah contoh sederhananya :
Contoh cara membuat Dictionary pada Python # dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'} print (&quot;dict['Name']: &quot;, dict['Name']) print (&quot;dict['Age']: &quot;, dict['Age']) Update Nilai Dalam Dictionary Python # Anda dapat memperbarui Dictionary dengan menambahkan entri baru atau pasangan nilai kunci, memodifikasi entri yang ada, atau menghapus entri yang ada seperti ditunjukkan pada contoh sederhana yang diberikan di bawah ini.
# Update dictionary python dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'} dict['Age'] = 8; # Mengubah entri yang sudah ada dict['School'] = &quot;DPS School&quot; # Menambah entri baru print (&quot;dict['Age']: &quot;, dict['Age']) print (&quot;dict['School']: &quot;, dict['School']) Hapus Elemen Dictionary Python # Anda dapat menghapus elemen Dictionary individual atau menghapus keseluruhan isi Dictionary. Anda juga dapat menghapus seluruh Dictionary dalam satu operasi.
Untuk menghapus seluruh Dictionary secara eksplisit, cukup gunakan del statement. Berikut adalah contoh sederhana :
#Contoh cara menghapus pada Dictionary Python dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'} del dict['Name'] # hapus entri dengan key 'Name' dict.clear() # hapus semua entri di dict del dict # hapus dictionary yang sudah ada print (&quot;dict['Age']: &quot;, dict['Age']) print (&quot;dict['School']: &quot;, dict['School']) Fungsi Build-in Pada Dictionary Python # Python menyertakan fungsi built-in sebagai berikut :
Fungsi Python Penjelasan cmp(dict1, dict2) Membandingkan unsur keduanya. len(dict) Memberikan panjang total Dictionary. Ini sama dengan jumlah item dalam Dictionary. str(dict) Menghasilkan representasi string yang dapat dicetak dari Dictionary type(variable) Mengembalikan tipe variabel yang lulus. Jika variabel yang dilewatkan adalah Dictionary, maka akan mengembalikan tipe Dictionary. Method Build-in Pada Dictionary Python # Python menyertakan method built-in sebagai berikut :
Method Python Penjelasan dict.clear() Menghapus semua elemen Dictionary dict.copy() Mengembalikan salinan Dictionary dict.fromkeys() Buat Dictionary baru dengan kunci dari seq dan nilai yang disetel ke nilai. dict.get(key, default=None) For key, nilai pengembalian atau default jika tombol tidak ada dalam Dictionary dict.has_key(key) Mengembalikan true jika key dalam Dictionary, false sebaliknya dict.items() Mengembalikan daftar dari pasangan tuple dictionary (key, value) dict.keys() Mengembalikan daftar key dictionary dict.setdefault(key, default=None) Mirip dengan get (), tapi akan mengatur dict [key] = default jika kunci belum ada di dict dict.update(dict2) Menambahkan pasangan kunci kata kunci dict2 ke dict dict.values() Mengembalikan daftar nilai dictionary `}),e.add({id:88,href:"/html/tutorial/link/",title:"Link",description:"mendefinisikan hubungan antara dokumen saat ini dan sumber daya eksternal.",content:`HTML Tag &lt;link&gt; # Contoh # Tautan ke external style sheet:
&lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot; /&gt; &lt;/head&gt; Definisi dan Penggunaan # Tag &lt;link&gt; mendefinisikan hubungan antara dokumen saat ini dan sumber daya eksternal. Tag &lt;link&gt; paling sering digunakan untuk menautkan ke external style sheet atau untuk menambahkan favicon ke situs web Anda. Elemen &lt;link&gt; adalah elemen kosong, hanya berisi atribut. Browser Pendukung # Elemen Google Chrome Internet Explorer/Edge Mozilla Firefox Safari Opera Link Yes Yes Yes Yes Yes Atribut Global HTML # Tag &lt;link&gt; juga masuk dalam kategori tabel Atribut Global HTML
Atribut Event HTML # Tag &lt;link&gt; juga masuk dalam kategori tabel Atribut Event HTML
Pengaturan CSS Bawaan # Sebagian besar browser akan menampilkan elemen &lt;link&gt; dengan nilai bawaan berikut:
link { display: none; } Sumber : https://www.w3schools.com/tags/tag_link.asp
`}),e.add({id:89,href:"/html/tutorial/meta/",title:"Meta",description:"Mendefinisikan metadata tentang dokumen HTML",content:`HTML META # Apa itu HTML meta ? # Tag &lt;meta&gt; di dalam html mendefinisikan metadata tentang dokumen HTML. Metadata adalah informasi tentang data.
Tag &lt;meta&gt; selalu berada di dalam &lt;head&gt; elemen dan biasanya digunakan untuk menspesifikasikan karakter, mendeskripsikan halaman, author dari dokumen dan settingan viewport.
Metadata tidak akan terlihat di halaman website namun akan terlihat didalam source code.
Metadata digunakan oleh browser (cara menampilkan konten atau memuat ulang halaman web), mesin pencari/search engines (keyword), dan layanan web lainnya.
Ada metode untuk membiarkan web desainer untuk mengambil kendali atas viewport (area yang terlihat oleh pengguna dari halaman web), melalui tag &lt;meta&gt;.
Contoh kode # &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;deskripsi&quot; content=&quot;Cara PR&quot;&gt; &lt;meta name=&quot;keywords&quot; content=&quot;Github, PR, Pull request&quot;&gt; &lt;meta name=&quot;author&quot; content=&quot;Putri Aliya&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;/head&gt; Contoh lain # Keywords untuk search engines: &lt;meta name=&quot;keywords&quot; content=&quot;Github, PR, Pull request&quot;&gt;
Deskripsi untuk halaman page: &lt;meta name=&quot;description&quot; content=&quot;Cara PR&quot;&gt;
Author dari web &lt;meta name=&quot;author&quot; content=&quot;Putri Aliya&quot;&gt;
Refresh dokumen setiap 40 detik &lt;meta http-equiv=&quot;refresh&quot; content=&quot;40&quot;&gt;
Setting viewport untuk membuat website terlihat bagus di semua divice &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
Setting viewport # Area pandang (Viewport) adalah area halaman web yang terlihat oleh pengguna. Area ini bervariasi dengan perangkat viewport akan terlihat lebih kecil di layar ponsel daripada di layar komputer.
Elemen &lt;meta&gt; harus disertakan disemua halaman web &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; Ini memberi browser instruksi untuk mengontrol dimensi dan skala halaman web.
width=device-width mengatur lebar halaman untuk mengikuti lebar layar perangkat (yang akan bervariasi tergantung pada perangkat).
initial-scale=1.0 mengatur tingkatan zoom pertama saat halaman web pertama kali dimuat.
Referensi : https://www.w3schools.com/tags/tag_meta.asp
`}),e.add({id:90,href:"/python/tutorial/tanggal-waktu/",title:"Tanggal dan Waktu di dalam Python",description:"Tanggal dan Waktu di dalam Python.",content:`Program Python dapat menangani tanggal dan waktu dengan beberapa cara. Konversi antara format tanggal adalah tugas umum untuk komputer. Modul waktu dan kalender Python melacak tanggal dan waktu.
Apa itu Tick? Interval waktu adalah bilangan floating-point dalam satuan detik. Instansi tertentu dalam waktu dinyatakan dalam hitungan detik sejak pukul 12:00 1 Januari 1970.
Dibawah ini adalah contoh penggunanaya.
import time; # Digunakan untuk meng-import modul time
ticks = time.time() print &ldquo;Berjalan sejak 12:00am, January 1, 1970:&rdquo;, ticks #python 2 print (&ldquo;Berjalan sejak 12:00am, January 1, 1970:&rdquo;, ticks) #untuk python 3 gunakan tanda kurung, print() Apa itu TimeTuple Python? Banyak fungsi waktu Python menangani waktu sebagai tuple dari 9 nomor, seperti yang terdapat pada tabel di bawah ini.
Index	Field	Value 0	4-digit year	2008 1	Bulan	1 sampai 12 2	Hari	1 sampai 31 3	Jam	0 sampai 23 4	Menit	0 sampai 59 5	Detik	0 sampai 61 6	Hari dalam Minggu	0 sampai 6 (0 adalah Senin) 7	Hari dalam Bulan	1 sampai 366 8	Daylight savings	-1, 0, 1, -1 means library determines DST Tuple di atas setara dengan struktur struct_time. Struktur ini memiliki atribut berikut
Index	Atribut	Value 0	tm_year	2008 1	tm_mon	1 sampai 12 2	tm_mday	1 sampai 31 3	tm_hour	0 sampai 23 4	tm_min	0 sampai 59 5	tm_sec	0 sampai 61 6	tm_wday	0 sampai 6 (0 adalah Senin) 7	tm_yday	1 sampai 366 8	tm_isdst	-1, 0, 1, -1 means library determines DST Mendapatkan Waktu Saat Ini Untuk menerjemahkan waktu instan dari satu detik sejak nilai floating-point ke waktu menjadi tupel waktu, lewati nilai floating-point ke fungsi (mis., Localtime) yang mengembalikan waktu tupel dengan semua sembilan item valid.
import time;
localtime = time.localtime(time.time()) print &ldquo;Waktu lokal saat ini :&rdquo;, localtime #python 2 Mendapatkan Waktu yang berformat Anda dapat memformat kapan saja sesuai kebutuhan Anda, namun metode sederhana untuk mendapatkan waktu dalam format yang mudah dibaca adalah asctime ()
import time;
localtime = time.asctime( time.localtime(time.time()) ) print &ldquo;Waktu lokal saat ini :&rdquo;, localtime #python 2 Mendapatkan kalender dalam sebulan Modul kalender memberikan berbagai macam metode untuk dimainkan dengan kalender tahunan dan bulanan. Di sini, kami mencetak kalender untuk bulan tertentu (Jan 2008)
import calendar
cal = calendar.month(2008, 1) print &ldquo;Dibawah ini adalah kalender:&rdquo; #python 2 print cal Modul time pada Python Ada modul waktu populer yang tersedia dengan Python yang menyediakan fungsi untuk bekerja dengan waktu dan untuk mengkonversi antara representasi. Dibawah ini adalah tabel dari modul time pada python yang ada.
Fungsi Python	Penjelasan time.altzone	Diimbangi zona waktu DST lokal, dalam detik di sebelah barat UTC, jika seseorang didefinisikan. Ini negatif jika zona waktu DST lokal berada di sebelah timur UTC (seperti di Eropa Barat, termasuk Inggris). Gunakan saja ini jika siang hari tidak nol. time.asctime([tupletime])	Menerima time-tupel dan mengembalikan string 24-karakter yang dapat dibaca seperti ‘Tue Dec 11 18:07:14 2008’. time.clock()	Mengembalikan waktu CPU saat ini sebagai jumlah floating-point detik. Untuk mengukur biaya komputasi dari berbagai pendekatan, nilai time.clock lebih bermanfaat daripada time.time (). time.ctime([secs])	Seperti asctime (localtime (detik)) dan tanpa argumen seperti asctime () time.gmtime([secs])	Menerima instan yang diungkapkan dalam hitungan detik sejak zaman dan mengembalikan waktu tuple t dengan waktu UTC. Catatan: t.tm_isdst selalu 0 time.localtime([secs])	Menerima instan yang dinyatakan dalam hitungan detik sejak zaman dan mengembalikan waktu tuple t dengan waktu setempat (t.tm_isdst adalah 0 atau 1, tergantung pada apakah DST berlaku seketika oleh peraturan lokal). time.mktime(tupletime)	Menerima instan dinyatakan sebagai time-tuple di waktu setempat dan mengembalikan nilai floating-point dengan instan yang dinyatakan dalam hitungan detik sejak zaman. time.sleep(secs)	Menangguhkan panggilan untuk beberapa detik. time.strftime(fmt[,tupletime])	Menerima instan dinyatakan sebagai tupel waktu di waktu lokal dan mengembalikan sebuah string yang mewakili instan seperti yang ditentukan oleh string fmt. time.strptime(str,fmt=’%a %b %d %H:%M:%S %Y’)	Parses str sesuai dengan format string fmt dan mengembalikan format instant-tuple. time.time()	Mengembalikan waktu saat ini secara instan, jumlah detik mengambang beberapa detik sejak zaman itu. time.tzset()	Mengatur ulang aturan konversi waktu yang digunakan oleh rutinitas perpustakaan. Variabel lingkungan TZ menentukan bagaimana hal ini dilakukan. Ada dua atribut penting yang tersedia dengan modul waktu:
Method Python	Penjelasan time.timezone	Atribut time.timezone adalah offset dalam detik zona waktu lokal (tanpa DST) dari UTC (&gt; 0 di Amerika; &lt;= 0 di sebagian besar Eropa, Asia, Afrika). time.tzname	Atribut time.tzname adalah sepasang string yang bergantung pada lokal, yang merupakan nama zona waktu lokal tanpa dan dengan DST. Modul calendar pada Python Modul kalender menyimpan fungsi yang berhubungan dengan kalender, termasuk fungsi untuk mencetak kalender teks untuk bulan atau tahun tertentu.
Secara default, kalender mengambil hari Senin sebagai hari pertama dalam minggu dan minggu sebagai yang terakhir. Untuk mengubah ini, fungsi call calendar.setfirstweekday ().
Berikut adalah daftar fungsi yang tersedia dengan modul kalender:
Fungsi Python	Penjelasan calendar.calendar(year,w=2,l=1,c=6)	Mengembalikan string multiline dengan kalender untuk tahun tahun yang diformat menjadi tiga kolom yang dipisahkan oleh ruang c. W adalah lebar karakter setiap tanggal; Setiap baris memiliki panjang 21 * w + 18 + 2 * c. L adalah jumlah baris untuk setiap minggu. calendar.firstweekday( )	Mengembalikan pengaturan saat ini untuk hari kerja yang dimulai setiap minggu. Secara default, saat kalender pertama kali diimpor, ini adalah 0, yang berarti Senin. calendar.isleap(year)	Pengembalian True jika tahun adalah tahun kabisat; Jika tidak, False calendar.leapdays(y1,y2)	Mengembalikan jumlah lompatan hari dalam tahun-tahun dalam rentang (y1, y2). calendar.month(year,month,w=2,l=1)	Mengembalikan string multiline dengan kalender untuk bulan bulan tahun, satu baris per minggu ditambah dua baris header. W adalah lebar karakter setiap tanggal; Setiap baris memiliki panjang 7 * w + 6. L adalah jumlah baris untuk setiap minggu. calendar.monthcalendar(year,month)	Mengembalikan daftar daftar int. Setiap sublist menunjukkan seminggu. Hari di luar bulan bulan tahun diatur ke 0; Hari dalam bulan ditetapkan ke hari ke bulan, 1 dan ke atas. calendar.monthrange(year,month)	Mengembalikan dua bilangan bulat. Yang pertama adalah kode hari kerja untuk hari pertama bulan bulan di tahun; Yang kedua adalah jumlah hari dalam sebulan. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu); Angka bulan adalah 1 sampai 12. calendar.prcal(year,w=2,l=1,c=6)	Seperti kalender cetak.calendar (tahun, w, l, c). calendar.prmonth(year,month,w=2,l=1)	Seperti kalender cetak. Bulan (tahun, bulan, w, l). calendar.setfirstweekday(weekday)	Mengatur hari pertama setiap minggu sampai hari kerja kode hari kerja. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu). calendar.timegm(tupletime)	Kebalikan dari time.gmtime: menerima waktu instan dalam bentuk tupel waktu dan mengembalikan detik yang sama seperti jumlah floating-point dalam hitungan detik sejak zaman. calendar.weekday(year,month,day)	Mengembalikan kode hari kerja untuk tanggal yang ditentukan. Kode hari kerja adalah 0 (Senin) sampai 6 (Minggu); Bulan adalah 1 (Januari) sampai 12 (Desember).
`}),e.add({id:91,href:"/blockchains-penggebrak-desentralisasi-privasi/",title:"Blockchains Penggebrak Desentralisasi Privasi?",description:"bitcoin yang memungkinkan penggunanya melakukan transfer mata uang (currency) dengan aman tanpa pengatur yang terpusat (centralized), dengan menggunakan open ledger (blockchains) yang terbukti tangguh.",content:`Pengantar # Pernahkah Anda ketika melakukan sign up pada sebuah website diminta untuk memberikan sejumlah informasi yang Anda tidak bisa menarik kembali apa pun keterangan yang telah Anda berikan? Ingat bahwa update informasi yang Anda lakukan sekalipun tidak menghapus data yang telah terlanjur Anda berikan. Ketidakberdayaan kita sebagai pengguna teknologi IT telah membuat para peneliti mengembangkan banyak teknik yang memfokuskan pada perlindungan terhadap data personal. Gembar-gembor pemanfaatan blockchains mulai berdengung sejak lima tahunan yang lalu. Berawal dari bitcoin yang mendemonstrasikan transaksi dan penyimpanan dana finansial secara private dengan menggunakan legder publik, semakin booming-lah blockchains mengikuti bitcoin. Mereka toh adalah dua hal yang tidak dapat dipisahkan.
Kesuksesan Bitcoin # Kesuksesan bitcoin membuat orang—lintas keilmuan dan kepentingan—memberikan perhatian penuh pada perkembangan blockchains. Begitu banyak keunggulan yang dijamin oleh blockchains,di antaranya—merupakan fokus semua praktisi—privasi.
Sekadar flashback, peneliti dan pembaca mungkin mengenal beberapa teknik keamanan data; (1) Data anonymization methods yang melindungi data pribadi yang bisa diidentifikasi. (2) k-anonymity, sebuah properti umum dari set data yang tak memiliki nama dan tak dapat dibedakan kecuali dengan formula k-1 record lainnya, (3) l-diversity yang merupakan pengembangan dari k-anonymity, (4) t-closeness, (5) differential privacy sebuah teknik memberikan noise dalam penyimpanan data pribadi, juga(5) encryption schemes yang memungkinkan penghitungan (komputasi) dan queries terhadap data yang sudah dienkrispsi, tetapi kurang praktis untuk diaplikasikan secara luas.
Hingga kemudian muncul sistem yang dapat dipertanggungjawabkan yaitu bitcoin yang memungkinkan penggunanya melakukan transfer mata uang (currency) dengan aman tanpa pengatur yang terpusat (centralized), dengan menggunakan open ledger (blockchains) yang terbukti tangguh.
Para peneliti melakukan begitu banyak inovasi dengan blockchains, salah satunya adalah dengan mengombinasikan blockchains dengan off-blockchains storage untuk membangun dan mengelola platform yang fokus pada privasi—kepemilikan data, transparansi dan dapat diaudit, kontrol akses yang baik—yang dapat dijelaskan sebagai berikut.
Kepemilikan data # Sistem mengenal pengguna sebagai pemilik data dan pelayanan (services) sebagai guest (tamu) yang diberikan izin untuk mengakses data.
Data yang transparan dan dapat di-audit. Setiap pengguna sistem sepatutnya mengetahui data apa saja yang telah digali dari mereka dan bagaimana data itu diakses oleh pelayanan dan sistem.
Kontrol terhadap akses # Sepatutnya setiap pengguna dapat mengubah serangkaian izin (set of permissions) dan mencabut akses terhadap data yang telah dikoleksi sebelumnya kapan saja sesuai keinginan dari pengguna sistem.
Penelitian yang dilakukan oleh Guy Zyskind, et al., menerapkan mekanisme yang mampu membenahi sekaligus memperbaiki dialog perizinan yang ada di aplikasi mobile. Sementara interface usernya dibiarkan sama, kebijakan akses kontrolnya disimpan dengan aman di blockchain dan hanya penggunanya yang dapat mengubah apa pun di dalamnya.
Tipe Transaksi Bitcoin # Blockchain menerima dua tipe transaksi: T-akses—untuk mengontol pengelolaan—dan T-data untuk penyimpanan dan retrieval data. Operasi jaringan ini dapat dengan mudah diintegrasikan ke sebuah alat pengembang software yang berbasis mobile (SDK) yang layanan-layanannya dapat digunakan dalam proses pengembangannya. Bayangkan kejadiannya seperti ini. Seorang pengguna menginstal sebuah aplikasi yang menggunakan platform rancangan peneliti ini untuk menjaga privasi sang pengguna. Ketika user melakukan sign up untuk pertama kalinya, identitas yang baru diberikan antara user dan service (pihak pemberi layanan) sekaligus dengan izin-izin tertentu yang dikaitkan dengan penyelenggaran proses tersebut kepada blockchain di dalam transaksi T-akses. Data yang yang dikumpulkan dari ponsel, misalnya data lokasi dienkripsikan menggunakan kunci enkripsi yang dibagi dan dikirim ke blockchain dalam transaksi T-data, yang merutekannya ke penyimpanan off-blockchain dengan key-value, dengan mengontrol pointer terhadap data di public ledger (pointernya dalah SHD-256 hash dari data).
Baik user maupun service dapat meng-query data dengan menggunakan transaksi T-data dengan pointer (key) yang terhubung kepada keduanya. Sementara itu, blockchain nantinya akan melakukan verifikasi digital signature baik milik si user maupun si service. Berbeda daripada kebanyakan sistem sebelumnya, akhirnya si user dapat menggonta-ganti permission set-nya dengan sekehendak hati dan kapan saja diperlukan dengan memanfaatkan T-access transaction, termasuk mencabut data yang sebelumnya telah direkam sistem.
Penutup # Demikianlah bagaimana desentralisasi data private dilakukan dengan menggunakan kombinasi blockchain dan off-blockchain. Karena, sepatutnya user—siapa pun mereka—tidak melibatkan pihak ketiga dalam pengelolaan data yang memberikan kesempatan untuk diserang atau disalahgunakan.
Cuplikan tentang blockchain dan off-blockchain ini merupakan bagian dari jurnal Decentralizing Privacy: Using Blockchain to Protect Personal Data (Guy Zyskin, Oz Nathan, Alex ‘Sandy’ Pentland).
oleh: Roy Sari Milda Siregar, M.Kom
`}),e.add({id:92,href:"/python/tutorial/fungsi/",title:"Fungsi di dalam Python",description:"Fungsi dalam Python.",content:`Fungsi adalah blok kode terorganisir dan dapat digunakan kembali yang digunakan untuk melakukan sebuah tindakan/action. Fungsi memberikan modularitas yang lebih baik untuk aplikasi Anda dan tingkat penggunaan kode yang tinggi.
Mendefinisikan Fungsi Python # Anda dapat menentukan fungsi untuk menyediakan fungsionalitas yang dibutuhkan. Berikut adalah aturan sederhana untuk mendefinisikan fungsi dengan Python.
Fungsi blok dimulai dengan def kata_kunci diikuti oleh nama fungsi dan tanda kurung (()). Setiap parameter masukan atau argumen harus ditempatkan di dalam tanda kurung ini. Anda juga dapat menentukan parameter di dalam tanda kurung ini. Pernyataan pertama dari sebuah fungsi dapat berupa pernyataan opsional - string dokumentasi fungsi atau docstring. Blok kode dalam setiap fungsi dimulai dengan titik dua (:) dan indentasi. Pernyataan kembali [ekspresi] keluar dari sebuah fungsi, secara opsional menyampaikan kembali ekspresi ke pemanggil. Pernyataan pengembalian tanpa argumen sama dengan return None. Contoh fungsi # def printme( str ): &quot;This prints a passed string into this function&quot; print (str) return `}),e.add({id:93,href:"/python/tutorial/modul/",title:"Modul di dalam Python",description:"Modul di dalam Python.",content:`Modul memungkinkan Kita mengatur kode Python secara logis. Mengelompokkan kode terkait ke dalam modul membuat kode lebih mudah dipahami dan digunakan. Modul adalah objek Python dengan atribut yang diberi nama yang bisa Kita bind dan dijadikan referensi.
Secara sederhana modul adalah file yang terdiri dari kode Python. Modul dapat mendefinisikan fungsi, kelas dan variabel. Modul juga bisa menyertakan kode yang bisa dijalankan “runable”.
Berikut adalah contoh modul sederhana pada Python :
def print_func( par ): print &quot;Halo : &quot;, par return Import Statement # Kita dapat menggunakan file sumber Python apapun sebagai modul dengan mengeksekusi pernyataan impor di file sumber Python lainnya. Impornya memiliki sintaks berikut.
Ketika interpreter menemukan sebuah pernyataan import, ia mengimpor modul jika modul tersebut ada di jalur pencarian. Jalur pencarian adalah daftar direktori yang ditafsirkan juru bahasa sebelum mengimpor modul. Misalnya, untuk mengimpor modul hello.py, Kita perlu meletakkan perintah berikut di bagian atas script.
Import module support # import support
Anda bisa memanggil fungsi defined sebagai berikut # support.print_func(&ldquo;Andy&rdquo;)
`}),e.add({id:94,href:"/html/tutorial/responsive/",title:"Responsive",description:"HTML Responsive berfungsi agar *website* kamu bisa terlihat bagus di semua perangkat diantaranya PC/Laptop, tablet, dan handphone.",content:`HTML Responsive # Apa itu HTML Responsive? # HTML Responsive berfungsi agar website kamu bisa terlihat bagus di semua perangkat diantaranya PC/Laptop, tablet, dan handphone.
Viewport # Agar website kamu bisa terlihat bagus di semua perangkat, kamu harus menambahkan viewport terlebih dahulu
Caranya kamu hanya perlu membuat tag bernama &lt;meta&gt; di antara &lt;head&gt; dan &lt;/head&gt; (header)
&lt;meta&gt; Setelah menambahkan tag &lt;meta&gt;, sekarang kamu perlu menambahkan beberapa attribut di dalam tag &lt;meta&gt;. yaitu name, content.
name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; Setelah menambahkan tag &lt;meta&gt; beserta attributnya, seharusnya di dalam tag &lt;head&gt; website kamu sudah memiliki ini:
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; `}),e.add({id:95,href:"/html/tutorial/computer-code/",title:"Computer Code",description:"elemen yang digunakan untuk menentukan input keyboard. Konten di dalamnya ditampilkan dalam font monospace default browser.",content:`HTML Computer Code # HTML &lt;kbd&gt; Untuk Input Keyboard # HTML &lt;kbd&gt; adalah elemen yang digunakan untuk menentukan input keyboard. Konten di dalamnya ditampilkan dalam font monospace default browser.
Contoh :
&lt;p&gt;Simpan dokumen dengan menekan &lt;kbd&gt;Ctrl + S&lt;/kbd&gt;&lt;/p&gt; HTML&lt;samp&gt; Untuk Keluaran Program # HTML &lt;samp&gt; adalah elemen yang digunakan untuk menentukan keluaran sampel dari program komputer. Konten di dalamnya ditampilkan dalam font monospace default browser.
Contoh :
&lt;p&gt;Pesan dari komputer saya :&lt;/p&gt; &lt;p&gt; &lt;samp&gt;File not found.&lt;br /&gt;Tekan F1 untuk melanjutkan&lt;/samp&gt; &lt;/p&gt; HTML &lt;code&gt; Untuk Kode Komputer # HTML &lt;code&gt; elemen digunakan untuk mendefinisikan sepotong kode komputer. Konten di dalamnya ditampilkan dalam font monospace default browser.
Contoh :
&lt;code&gt; x = 5; y = 6; z = x + y; &lt;/code&gt; Perhatikan bahwa elemen &lt;code&gt; tidak memberikan spasi ekstra dan jeda baris. Untuk memperbaikinya, kamu dapat meletakkan elemen &lt;code&gt; di dalam elemen &lt;pre&gt;
Contoh :
&lt;pre&gt; &lt;code&gt; x = 5; y = 6; z = x + y; &lt;/code&gt; &lt;/pre&gt; HTML &lt;var&gt; Untuk Variabel # HTML &lt;var&gt; digunakan untuk mendefinisikan variabel dalam pemrograman atau dalam logika matematika. Konten di dalamnya biasanya ditampilkan dalam huruf miring.
Contoh :
&lt;p&gt;Area dari segitiga adalah: 1/2 x &lt;var&gt;b&lt;/var&gt; x &lt;var&gt;h&lt;/var&gt;, dimana &lt;var&gt;b&lt;/var&gt; adalah dasar dari &lt;var&gt;h&lt;/var&gt; tinggi vertikal dari segitiga.&lt;/p&gt; Sumber : W3School
`}),e.add({id:96,href:"/python/tutorial/input-output/",title:"Input Output di dalam Python",description:"Input Output di dalam Python.",content:`Disini kita akan belajar semua fungsi dasar I/O yang tersedia pada Python 3.
Print # Cara termudah untuk menghasilkan output adalah dengan menggunakan pernyataan cetak di mana Kita bisa melewati nol atau lebih banyak ekspresi yang dipisahkan dengan koma. Fungsi ini mengubah ekspresi yang Kita berikan ke string dan menulis hasilnya ke output standar sebagai berikut :
print (&quot;Python adalah bahasa pemrograman yang hebat&quot;)
Membaca Input Keyboard # Python 2 memiliki dua fungsi built-in untuk membaca data dari input standar, yang secara default berasal dari keyboard. Fungsi ini adalah input() dan raw_input()
Dengan Python 3, fungsi raw_input() tidak digunakan lagi. Selain itu, input() berfungsi membaca data dari keyboard sebagai string, terlepas dari apakah itu tertutup dengan tanda kutip (‘’ atau ‘”) atau tidak.
Fungsi Input Python # Fungsi input([prompt]) sama dengan raw_input, kecuali mengasumsikan bahwa input adalah ekspresi Python yang valid dan mengembalikan hasil yang smemungkinkan kita evaluasi.
&gt;&gt;&gt; x = input(&quot;something:&quot;) something:10 &gt;&gt;&gt; x '10' &gt;&gt;&gt; x = input(&quot;something:&quot;) something:'10' #entered data treated as string with or without '' &gt;&gt;&gt; x &quot;'10'&quot; `}),e.add({id:97,href:"/python/tutorial/exception/",title:"Exception",description:"Exception dalam Python.",content:`Python menyediakan dua fitur yang sangat penting untuk menangani kesalahan tak terduga dalam program Python Anda dan menambahkan kemampuan debugging di dalamnya.
Exception Handling # Assertions Exception adalah sebuah peristiwa, yang terjadi selama pelaksanaan program yang mengganggu aliran normal instruksi program. Secara umum, ketika skrip Python menemukan situasi yang tidak dapat diatasi, hal itu menimbulkan pengecualian. Exception adalah objek Python yang mewakili kesalahan. Ketika skrip Python menimbulkan Exception, maka harus menangani Exception begitu saja sehingga berhenti dan berhenti.
Standard Exceptions # Nama Penjelasan Exception Kelas dasar untuk semua pengecualian / exception StopIteration Ditampilkan ketika metode (iterator) berikutnya dari iterator tidak mengarah ke objek apa pun. SystemExit Ditampilkan oleh fungsi sys.exit (). StandardError Kelas dasar untuk semua pengecualian built-in kecuali StopIteration dan SystemExit. ArithmeticError Kelas dasar untuk semua kesalahan yang terjadi untuk perhitungan numerik. OverflowError Ditampilkan saat perhitungan melebihi batas maksimum untuk tipe numerik. FloatingPointError Ditampilkan saat perhitungan floating point gagal. ZeroDivisonError Ditampilkan saat pembagian atau modulo nol dilakukan untuk semua tipe numerik. AssertionError Ditampilkan jika terjadi kegagalan pernyataan Assert. AttributeError Ditampilkan jika terjadi kegagalan referensi atribut atau penugasan. EOFError Ditampilkan bila tidak ada input dari fungsi raw_input () atau input () dan akhir file tercapai. ImportError Ditampilkan saat sebuah pernyataan impor gagal. KeyboardInterrupt Ditampilkan saat pengguna menyela eksekusi program, biasanya dengan menekan Ctrl + c. LookupError Kelas dasar untuk semua kesalahan pencarian. IndexError Ditampilkan saat sebuah indeks tidak ditemukan secara berurutan. KeyError Ditampilkan saat kunci yang ditentukan tidak ditemukan dalam kamus. NameError Ditampilkan saat pengenal tidak ditemukan di namespace lokal atau global. UnboundLocalError Ditampilkan saat mencoba mengakses variabel lokal dalam suatu fungsi atau metode namun tidak ada nilai yang ditugaskan padanya. EnvironmentError Kelas dasar untuk semua pengecualian yang terjadi di luar lingkungan Python. IOError Ditampilkan saat operasi input / output gagal, seperti pernyataan cetak atau fungsi open () saat mencoba membuka file yang tidak ada. OSError Dibangkitkan untuk kesalahan terkait sistem operasi. SyntaxError Ditampilkan saat ada kesalahan dengan sintaks Python. IndentationError Ditampilkan saat indentasi tidak ditentukan dengan benar. SystemError Ditampilkan saat penafsir menemukan masalah internal, namun bila kesalahan ini ditemui juru bahasa Python tidak keluar. SystemExit Ditampilkan saat juru bahasa Python berhenti dengan menggunakan fungsi sys.exit (). Jika tidak ditangani dalam kode, menyebabkan penafsir untuk keluar. TypeError Ditampilkan saat operasi atau fungsi dicoba yang tidak valid untuk tipe data yang ditentukan. ValueError Ditampilkan ketika fungsi bawaan untuk tipe data memiliki jenis argumen yang valid, namun argumen tersebut memiliki nilai yang tidak valid yang ditentukan. RuntimeError Ditampilkan saat kesalahan yang dihasilkan tidak termasuk dalam kategori apa pun. NotImplementedError Ditampilkan ketika metode abstrak yang perlu diimplementasikan di kelas warisan sebenarnya tidak dilaksanakan. `}),e.add({id:98,href:"/html/tutorial/semantic/",title:"Semantic",description:"Semantic HTML adalah dokumen HTML yang terstruktur berdasarkan elemen semantik. Elemen semantik sendiri diperkenalkan pada HTML 5 yang bertujuan untuk memberikan makna, maksud atau arti kepada halaman web.",content:`Semantic HTML # Apa itu semantic HTML? # Semantic HTML adalah dokumen HTML yang terstruktur berdasarkan elemen semantik. Elemen semantik sendiri diperkenalkan pada HTML 5 yang bertujuan untuk memberikan makna, maksud atau arti kepada halaman web.
HTML memiliki beberapa elemen semantik seperti &lt;header&gt;, &lt;footer&gt;, &lt;article&gt;, dan lain-lain.
Contohnya tag &lt;header&gt;, tag ini digunakan untuk membuat elemen header atau bagian atas dari web. Kita bisa saja menggunakan tag &lt;div&gt; dan tidak menggunakan tag &lt;header&gt;, tetapi hal itu membuat website yang kita buat nantinya menjadi tidak semantik.
Kenapa HTML harus semantik? # Tentunya, HTML yang benar secara semantis akan membantu perangkat seperti screen reader untuk menguraikan isi dari website tersebut. Perangkat seperti screen reader membantu teman-teman kita yang disabilitas untuk bisa mendapatkan informasi dari website yang kita buat nantinya.
Selain itu juga, jika kita menggunakan elemen semantik, dokumen HTML kita akan mudah dibaca, baik itu oleh mesin maupun oleh kita sebagai manusia.
Ini adalah contoh kode HTML yang tidak menggunakan elemen semantik:
&lt;div id=&quot;header&quot;&gt;&lt;/div&gt; &lt;div class=&quot;bagian-awal&quot;&gt; &lt;div class=&quot;artikel&quot;&gt;&lt;/div&gt; &lt;/div&gt; Dan ini adalah kode HTML yang menggunakan elemen semantik:
&lt;header&gt;&lt;/header&gt; &lt;section&gt; &lt;article&gt;&lt;/article&gt; &lt;/section&gt; Jika dibandingkan, kode HTML yang menggunakan elemen semantik lebih mudah untuk dibaca dan lebih ringkas dibandingkan dengan kode yang tidak menggunakan elemen semantik.
SEO # Karena sifat HTMl semantik yang mudah dibaca oleh manusia ataupun mesin, maka tidak dipungkiri bahwa HTML yang semantik lebih disukai oleh search engine karena sifat HTML yang semantic yang bisa menginterpretasikan konten dengan baik. Hal ini tentunya akan berdampak baik pada website kita karena kemungkinan untuk mendapatkan ranking teratas di hasil pancarian seperti Google.
Daftar elemen-elemen semantik # &lt;header&gt; untuk membuat elemen bagian atas dari web &lt;article&gt; untuk membuat elemen artikel &lt;nav&gt; untuk membuat navigasi &lt;main&gt; untuk membuat elemen utama &lt;details&gt; untuk membuat elemen detail atau spoiler &lt;aside&gt; untuk membuat elemen pada bagian samping &lt;summary&gt; untuk membuat ringkasan artikel atau isi spoiler &lt;figcaption&gt; untuk membuat teks caption pada figure &lt;mark&gt; untuk menandai teks &lt;section&gt; untuk membuat bagian artikel &lt;time&gt; untuk membuat elemen yang menyatakan waktu dan masih banyak lagi. HTML Header # Apa itu HTML header ? # Tag &lt;header&gt; dalam html berfungsi untuk menandakan suatu elemen sebagai konten pengantar, judul, atau tautan navigasi.
Tag &lt;header&gt; tidak bisa dipakai bersamaan dengan tag &lt;footer&gt;, &lt;address&gt; atau elemen dengan tag &lt;header&gt; yang lain.
Contoh kode # HTML
&lt;header&gt; &lt;!-- disini header berfungsi sebagai judul --&gt; &lt;h1&gt;Lorem ipsum dolor sit amet&lt;/h1&gt; &lt;header&gt; &lt;p&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit. Natus fugit soluta, necessitatibus reiciendis quibusdam temporibus molestias repellendus corrupti quisquam eaque, corporis, minima earum rem distinctio incidunt nesciunt consequatur illum. Hic. &lt;/p&gt; &lt;/header&gt; &lt;/header&gt; Contoh lain # Daftar Menu Nasi Goreng Mie Goreng Sate Ubi Goreng Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
Developer Mozilla W3Schools `}),e.add({id:99,href:"/html/tutorial/entity/",title:"Entity",description:"dapat direpresentasikan sebagai potongan `string`. Dalam penggunaannya, entity menggunakan `&` atau ampersan untuk awalan sebuah entity, yang tidak jarang kita temukan dalam proses pembuatan sebuah website ataupun ketika sedang mengunjungi sebuah website entah itu simbol karakter seperti copyright (©), lebih besar (>), lebih kecil (<), dan sebagainya.",content:`HTML Entity # Apa itu HTML Entity? # HTML Entity dapat direpresentasikan sebagai potongan string. Dalam penggunaannya, entity menggunakan &amp; atau ampersan untuk awalan sebuah entity, yang tidak jarang kita temukan dalam proses pembuatan sebuah website ataupun ketika sedang mengunjungi sebuah website entah itu simbol karakter seperti copyright (©), lebih besar (&gt;), lebih kecil (&lt;), dan sebagainya.
Dalam penggunaan HTML Entity terdapat 2 macam entity yaitu Entity Name dan juga Entity Number.
Entity Number # Penggunaan dibuat dengan desimal ASCII atau heksadesimal ASCII, contoh penggunaan :
&lt;p&gt;&amp;#169; Bellshade LEARN WITH OUR COMMUNITY&lt;/p&gt; Output : © Bellshade LEARN WITH OUR COMMUNITY
Entity Name # Penggunaan lebih mudah karena menggunakan alfabet sehingga lebih mudah diingat oleh user, contoh penggunaan :
&lt;p&gt;&amp;copy; Bellshade LEARN WITH OUR COMMUNITY&lt;/p&gt; Output : © Bellshade LEARN WITH OUR COMMUNITY
Terlihat perbedaan keduanya, Entity Name lebih mudah diingat karena menggunakan huruf alfabet namun dibalik kemudahan tersebut ternyata Entity Name masih belum mendukung semua browser sehingga penggunaan Entity Number lebih diunggulkan dari segi dukungan browser.
Beberapa karakter entity lain yang dapat digunakan :
Char Number Entity © &amp;#169; &amp;copy; ® &amp;#174; &amp;reg; ™ &amp;#8482; &amp;trade; @ &amp;#64; &amp;commat; ¶ &amp;#182; &amp;para; § &amp;#167; &amp;sect; &amp; &amp;#38; &amp;amp; &gt; &amp;#62; &amp;gt; &lt; &amp;#60; &amp;lt; Selengkapnya mengenai simbol-simbol yang ada di HTML Entity bisa mengunjungi:
Free Formatter `}),e.add({id:100,href:"/python/tutorial/objek-class/",title:"Objek dan class di dalam Python",description:"Objek dan class di dalam Python.",content:`Python telah menjadi bahasa berorientasi objek sejak bahasa Python sendiri dibuat. Untuk membuat dan menggunakan kelas dan objek pada Python benar-benar mudah. Jika Anda tidak memiliki pengalaman sebelumnya dengan pemrograman berorientasi objek (OOP), Anda mempelajarinya terlebih dahulu agar Anda dapat memahami konsep dasarnya.
Istilah Dalam OOP # Istilah Penjelasan Class Prototipe yang ditentukan pengguna untuk objek yang mendefinisikan seperangkat atribut yang menjadi ciri objek kelas apa pun. Atribut adalah data anggota (variabel kelas dan variabel contoh) dan metode, diakses melalui notasi titik. Class variable Sebuah variabel yang dibagi oleh semua contoh kelas. Variabel kelas didefinisikan dalam kelas tapi di luar metode kelas manapun. Variabel kelas tidak digunakan sesering variabel contoh. Data member Variabel kelas atau variabel contoh yang menyimpan data yang terkait dengan kelas dan objeknya. Function overloading Penugasan lebih dari satu perilaku ke fungsi tertentu. Operasi yang dilakukan bervariasi menurut jenis objek atau argumen yang terlibat. Instance variable Variabel yang didefinisikan di dalam sebuah metode dan hanya dimiliki oleh instance kelas saat ini. Inheritance Pengalihan karakteristik kelas ke kelas lain yang berasal darinya. Instance Objek individu dari kelas tertentu. Obyek obj yang termasuk dalam Lingkaran kelas, misalnya, adalah turunan dari Lingkaran kelas. Instantiation Penciptaan sebuah instance dari sebuah kelas. Method Jenis fungsi khusus yang didefinisikan dalam definisi kelas. Object Contoh unik dari struktur data yang didefinisikan oleh kelasnya. Objek terdiri dari kedua anggota data (variabel kelas dan variabel contoh) dan metode. Operator overloading Penugasan lebih dari satu fungsi ke operator tertentu. Membuat Class Python # Statement class digunakan untuk membuat definisi kelas baru. Nama kelas segera mengikuti kelas kata kunci diikuti oleh titik dua sebagai berikut.
class ClassName: &lsquo;Optional class documentation string&rsquo; class_suite
Dibawah ini adalah contoh cara membuat class dan penggunaanya :
class Employee: 'Common base class for all employees' empCount = 0 def __init__(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1 def displayCount(self): print &quot;Total Employee %d&quot; % Employee.empCount def displayEmployee(self): print &quot;Name : &quot;, self.name, &quot;, Salary: &quot;, self.salary Membuat Instance Objects # Untuk membuat instances kelas, Anda memanggil class menggunakan nama class dan meneruskan argumen apa pun yang metode init terima.
## This would create first object of Employee class emp1 = Employee(&quot;Zara&quot;, 2000) This would create second object of Employee class emp2 = Employee(&quot;Manni&quot;, 5000) Mengakses Atribut # Kita mengakses atribut objek menggunakan dot operator dengan objek. Variabel kelas akan diakses dengan menggunakan nama kelas sebagai berikut :
emp1.displayEmployee() emp2.displayEmployee() print (&quot;Total Employee %d&quot; % Employee.empCount) Contoh lengkapnya, silahkan lihat kode dibawah ini.
class Employee: 'Common base class for all employees' empCount = 0 def __init__(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1 def displayCount(self): print (&quot;Total Employee %d&quot; % Employee.empCount) def displayEmployee(self): print (&quot;Name : &quot;, self.name, &quot;, Salary: &quot;, self.salary) #This would create first object of Employee class&quot; emp1 = Employee(&quot;Zara&quot;, 2000) #This would create second object of Employee class&quot; emp2 = Employee(&quot;Manni&quot;, 5000) emp1.displayEmployee() emp2.displayEmployee() print (&quot;Total Employee %d&quot; % Employee.empCount) `}),e.add({id:101,href:"/php/tutorial/pengenalan/",title:"Pengenalan PHP",description:"Pengenalan PHP.",content:`PHP # PHP (Hypertext Preprocessor) adalah bahasa pemrograman server-side yang digunakan untuk mengembangkan aplikasi web dinamis. PHP memungkinkan kita untuk membuat halaman web yang dapat menampilkan konten dinamis yang dihasilkan dari pengolahan data di server. PHP banyak digunakan dalam pengembangan aplikasi web karena mudah dipelajari, mudah dipahami, dan mendukung berbagai macam basis data.
Sebuah skrip PHP dieksekusi pada server web, dan hasilnya dikirimkan ke browser pengguna dalam bentuk halaman web statis. Dalam skrip PHP, kita dapat mengakses berbagai macam sumber daya dan layanan di server, seperti basis data, sistem file, jaringan, dan lain sebagainya. PHP dapat dipadukan dengan HTML dan CSS untuk membuat tampilan halaman web yang menarik.
Beberapa fitur utama dari PHP antara lain:
Open source: PHP tersedia secara gratis dan sumber terbuka, sehingga dapat dimodifikasi dan digunakan oleh siapa saja.
Pemrosesan form: PHP dapat digunakan untuk memproses data yang dikirimkan dari formulir HTML, seperti data pengguna atau data yang dimasukkan pengguna.
Koneksi basis data: PHP memiliki kemampuan untuk terhubung ke berbagai macam basis data, seperti MySQL, PostgreSQL, dan Oracle, sehingga memudahkan pengolahan data di dalam aplikasi web.
Modular: PHP memiliki banyak pustaka dan modul yang dapat digunakan untuk memperluas fungsionalitasnya dan mempercepat pengembangan aplikasi web.
Cross-platform: PHP dapat dijalankan pada berbagai macam sistem operasi, seperti Windows, Linux, dan macOS.
Dalam pengembangan aplikasi web, PHP seringkali dipadukan dengan framework, seperti Laravel, CodeIgniter, atau CakePHP, untuk mempercepat dan memudahkan proses pengembangan. Dengan mempelajari PHP, kita dapat membuat aplikasi web yang dinamis dan interaktif dengan mudah.
Sejarah PHP # PHP (Hypertext Preprocessor) pertama kali diperkenalkan pada tahun 1995 oleh Rasmus Lerdorf. Awalnya, PHP diciptakan sebagai sekumpulan skrip C yang digunakan untuk melacak kunjungan pada situs webnya. Nama asli PHP adalah Personal Home Page Tools (disingkat menjadi PHP Tools), dan versi pertamanya hanya memiliki kemampuan dasar untuk memproses form dan mengakses file.
Setelah dirilis ke publik, PHP menjadi sangat populer karena kemampuannya untuk memproses form dan mengakses basis data. Pada tahun 1997, Andi Gutmans dan Zeev Suraski mengembangkan versi PHP yang baru, yaitu PHP 3. Versi ini memiliki kemampuan baru, seperti dukungan untuk modul ekstensi, objek, dan fungsi pengolahan gambar.
Pada tahun 2000, dirilislah PHP 4 yang memiliki perbaikan performa, penambahan fitur, dan peningkatan keamanan. Versi ini menjadi sangat populer dan digunakan secara luas di seluruh dunia. Pada tahun 2004, PHP 5 dirilis dengan dukungan penuh untuk objek dan penggunaan pemrograman berorientasi objek.
Pada tahun 2015, dirilislah PHP 7, yang memiliki performa lebih cepat dan lebih aman daripada versi sebelumnya. PHP 7 memperkenalkan peningkatan pada mesin virtual, peningkatan pada sintaks, dan peningkatan pada manajemen kesalahan.
Saat ini, PHP merupakan bahasa pemrograman server-side yang sangat populer dan digunakan oleh banyak pengembang aplikasi web di seluruh dunia. PHP digunakan oleh banyak situs web terkenal, seperti Facebook, Yahoo, Wikipedia, dan WordPress. Perkembangan PHP terus berlanjut dengan banyaknya penambahan fitur dan dukungan untuk teknologi terbaru.
Mengapa menggunakan PHP? # Berikut ini beberapa alasan mengapa PHP menjadi pilihan populer untuk pengembangan aplikasi web:
Mudah dipelajari dan digunakan: PHP memiliki sintaks yang mudah dipahami dan dipelajari, sehingga memudahkan pengembang yang baru memulai belajar pemrograman web.
Dukungan luas: PHP memiliki dukungan yang luas dari komunitas pengembang dan banyak pihak ketiga yang menyediakan pustaka dan plugin untuk memperluas fungsionalitas PHP.
Ketersediaan sumber daya: Karena PHP populer, banyak developer dan ahli tersedia untuk membantu dalam mengembangkan aplikasi web dengan PHP.
Integrasi dengan basis data: PHP memiliki kemampuan untuk terintegrasi dengan berbagai macam basis data, seperti MySQL, PostgreSQL, dan Oracle.
Kinerja yang baik: PHP dikembangkan untuk menghasilkan kode yang cepat dan efisien, sehingga dapat memproses permintaan dari pengguna dengan cepat dan responsif.
Berbagai macam framework: Ada banyak framework PHP yang tersedia, seperti Laravel, Symfony, dan CodeIgniter, yang mempercepat pengembangan aplikasi web dan menyediakan banyak fitur canggih.
Berjalan di banyak platform: PHP dapat dijalankan di berbagai platform, seperti Windows, Linux, dan macOS, sehingga memudahkan pengembang untuk membangun aplikasi web pada platform yang berbeda.
Karena alasan-alasan di atas, PHP menjadi salah satu pilihan populer untuk pengembangan aplikasi web, terutama untuk aplikasi web yang kompleks dan besar dengan banyak fitur dan fungsionalitas.
Framework PHP # Berikut ini beberapa framework PHP terkenal yang banyak digunakan oleh pengembang aplikasi web:
Laravel: Laravel adalah salah satu framework PHP yang paling populer saat ini. Framework ini menawarkan banyak fitur canggih dan mudah digunakan, seperti routing, migrasi basis data, dan integrasi dengan pustaka pihak ketiga. Laravel juga memiliki sistem templating yang kuat dan dukungan untuk pengembangan aplikasi berbasis RESTful API.
Symfony: Symfony adalah framework PHP yang kuat dan fleksibel. Framework ini menyediakan berbagai komponen dan pustaka yang dapat digunakan secara independen atau bersama-sama. Symfony juga memiliki sistem templating yang kuat dan dukungan untuk pengembangan aplikasi berbasis RESTful API.
CodeIgniter: CodeIgniter adalah framework PHP yang ringan dan mudah digunakan. Framework ini menawarkan banyak fitur dasar untuk pengembangan aplikasi web, seperti routing, koneksi basis data, dan validasi form. CodeIgniter juga memiliki sistem templating yang sederhana dan mudah dipelajari.
CakePHP: CakePHP adalah framework PHP yang fleksibel dan kuat. Framework ini menawarkan banyak fitur canggih, seperti ORM (Object-Relational Mapping), validasi data, dan caching. CakePHP juga memiliki sistem templating yang kuat dan mudah dipelajari.
Yii: Yii adalah framework PHP yang efisien dan kuat. Framework ini menawarkan banyak fitur canggih, seperti ORM (Object-Relational Mapping), validasi data, dan caching. Yii juga memiliki sistem templating yang kuat dan dukungan untuk pengembangan aplikasi berbasis RESTful API.
Setiap framework memiliki kelebihan dan kekurangan masing-masing, dan pemilihan framework yang tepat akan tergantung pada kebutuhan aplikasi dan preferensi pengembang.
`}),e.add({id:102,href:"/html/tutorial/form/",title:"Form",description:"Form pada html berfungsi untuk mengirimkan data melalui elemen-elemen form di dalamnya seperti, text field, radio button, dropdown, dll",content:`HTML Forms # Form pada html berfungsi untuk mengirimkan data melalui elemen-elemen form di dalamnya seperti, text field, radio button, dropdown, dll
Form Element # Sebelum membuat elemen-elemen pada form, seluruh elemen yang akan digunakan harus berada diantara tag &lt;form&gt; dan &lt;/form&gt; contoh penggunaannya adalah sebagai berikut :
&lt;form&gt; &lt;!-- baris ini bisa dihapus --&gt; elemen form ditulis disini &lt;!-- baris ini bisa dihapus --&gt; &lt;/form&gt; Membuat Elemen Input # Elemen &lt;input&gt; pada HTML forms menjadi elemen yang sering digunakan. adapun tag &lt;input&gt; memiliki beberapa type atribute seperti text, radio, checkbox.
Input Type Text # elemen &lt;input type=&quot;text&quot;&gt; akan berupa textfields yang nantinya kita dapat memberikan input berupa text.
&lt;form&gt; &lt;h5&gt;Nama Depan :&lt;/h5&gt; &lt;input type=&quot;text&quot; /&gt; &lt;h5&gt;Nama Belakang :&lt;/h5&gt; &lt;input type=&quot;text&quot; /&gt; &lt;/form&gt; Output :
Nama Depan : Nama Belakang : Input Type Radio Button # elemen &lt;input type=&quot;radio&quot;&gt; akan berupa pilihan yang berbentuk bulat yang nantinya kita dapat memberikan input dengan memilih salah satu pilihan yang tersedia.
&lt;form&gt; &lt;h5&gt;Jenis Kelamin&lt;/h5&gt; &lt;input type=&quot;radio&quot; value=&quot;laki-laki&quot; /&gt; &lt;label&gt;Laki-Laki&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;radio&quot; value=&quot;perempuan&quot; /&gt; &lt;label&gt;Perempuan&lt;/label&gt;&lt;br /&gt; &lt;/form&gt; Output :
Jenis Kelamin Laki-Laki
Perempuan
Input Type Checkbox # Elemen &lt;input type=&quot;checkbox&quot;&gt; akan berupa pilihan yang berbentuk kotak yang nantinya kita dapat memberikan input dengan memilih lebih dari satu pilihan yang tersedia.
&lt;form&gt; &lt;h5&gt;Hobi&lt;/h5&gt; &lt;input type=&quot;checkbox&quot; value=&quot;membaca&quot; /&gt; &lt;label&gt;Membaca&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;checkbox&quot; value=&quot;menyanyi&quot; /&gt; &lt;label&gt;Menyanyi&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;checkbox&quot; value=&quot;menulis&quot; /&gt; &lt;label&gt;Menulis&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;checkbox&quot; value=&quot;olahraga&quot; /&gt; &lt;label&gt;Olahraga&lt;/label&gt;&lt;br /&gt; &lt;/form&gt; Output :
Hobi Membaca
Menyanyi
Menulis
Olahraga
`}),e.add({id:103,href:"/javascript/tutorial/pengenalan/",title:"Pengenalan Javascript",description:"JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.",content:`Javascript # JavaScript adalah bahasa pemrograman yang digunakan untuk mengembangkan aplikasi web yang interaktif dan dinamis. Bahasa ini dapat dijalankan di sisi klien atau sisi server, namun biasanya digunakan untuk membuat interaksi antarmuka pengguna pada sisi klien.
JavaScript pertama kali diperkenalkan pada tahun 1995 oleh Brendan Eich di Netscape, dan sejak saat itu telah menjadi bahasa pemrograman yang sangat populer dan umum digunakan di seluruh dunia.
JavaScript dapat digunakan untuk membuat efek animasi, validasi form, dan validasi input data pada sisi klien, serta untuk mengambil dan memanipulasi data pada sisi server dengan menggunakan teknologi seperti Node.js. Bahasa ini juga sering digunakan bersama dengan HTML dan CSS untuk membangun tampilan antarmuka pengguna yang interaktif dan dinamis pada aplikasi web.
Sejarah Javascript # JavaScript pertama kali dikembangkan oleh Brendan Eich pada tahun 1995 di Netscape Communications Corporation. Awalnya, bahasa ini disebut Mocha, kemudian berganti nama menjadi LiveScript, dan akhirnya menjadi JavaScript.
JavaScript mulai menjadi populer pada awal tahun 2000-an ketika Ajax (Asynchronous JavaScript and XML) diperkenalkan. Teknologi ini memungkinkan aplikasi web untuk melakukan update konten tanpa perlu me-refresh halaman secara keseluruhan, sehingga menghasilkan pengalaman yang lebih responsif dan interaktif bagi pengguna.
Pada tahun 2009, Ryan Dahl memperkenalkan Node.js, sebuah platform server yang menggunakan JavaScript sebagai bahasa pemrogramannya. Dengan Node.js, pengembang dapat menggunakan JavaScript untuk membangun aplikasi pada sisi server, tidak hanya di sisi klien.
Selama beberapa tahun terakhir, JavaScript terus berkembang dan menjadi bahasa pemrograman yang sangat populer di seluruh dunia. Banyak pustaka dan kerangka kerja JavaScript yang dikembangkan, seperti React, Angular, dan Vue.js, yang memungkinkan pengembang untuk membangun aplikasi web yang kompleks dan dinamis dengan lebih cepat dan mudah.
Kelebihan Javascript # Berikut adalah beberapa kelebihan JavaScript sebagai bahasa pemrograman:
Interaktif dan responsif: JavaScript memungkinkan pengembang untuk membuat aplikasi web yang interaktif dan responsif. Hal ini memungkinkan aplikasi web untuk merespons input pengguna dengan cepat dan memberikan pengalaman pengguna yang lebih baik.
Ketersediaan sumber daya: JavaScript adalah bahasa pemrograman yang sangat populer dan memiliki dukungan luas dari komunitas pengembang. Ada banyak pustaka dan kerangka kerja JavaScript yang tersedia yang mempercepat pengembangan aplikasi web dan menyediakan banyak fitur canggih.
Mempercepat waktu pengembangan: Karena JavaScript dapat dijalankan pada sisi klien, aplikasi web yang dibuat dengan JavaScript dapat mengurangi beban pada server dan mempercepat waktu pengembangan.
Memperbaiki kinerja web: Dengan JavaScript, pengembang dapat mengoptimalkan kinerja aplikasi web dengan menggunakan teknologi seperti Ajax untuk mengambil dan memperbarui konten tanpa memuat ulang halaman.
Cross-platform: JavaScript dapat dijalankan pada berbagai platform, seperti Windows, Linux, dan macOS, serta berbagai browser web seperti Chrome, Firefox, dan Safari.
Kemudahan pembelajaran: JavaScript memiliki sintaks yang mudah dipahami dan dipelajari, sehingga memudahkan pengembang yang baru memulai belajar pemrograman web.
Potensi pengembangan: Dalam beberapa tahun terakhir, JavaScript telah berkembang menjadi salah satu bahasa pemrograman paling populer dan banyak digunakan di seluruh dunia. Hal ini memberikan potensi pengembangan yang besar untuk karir pengembang web di masa depan.
Framework Javascript # Berikut adalah beberapa kerangka kerja JavaScript yang populer:
React: React adalah kerangka kerja JavaScript yang dikembangkan oleh Facebook. React digunakan untuk membangun antarmuka pengguna pada aplikasi web, dan memungkinkan pengembang untuk memisahkan logika bisnis dari tampilan.
Angular: Angular adalah kerangka kerja JavaScript yang dikembangkan oleh Google. Angular memungkinkan pengembang untuk membangun aplikasi web dengan menggunakan TypeScript, sebuah bahasa pemrograman yang memperluas JavaScript dengan fitur seperti tipe statis.
Vue.js: Vue.js adalah kerangka kerja JavaScript yang ringan dan mudah dipelajari. Vue.js digunakan untuk membangun aplikasi web dengan antarmuka pengguna yang dinamis dan interaktif.
Ember.js: Ember.js adalah kerangka kerja JavaScript yang fokus pada pengembangan aplikasi web yang kompleks dan besar. Ember.js mempercepat pengembangan dengan menyediakan banyak fitur out-of-the-box seperti routing, manajemen status, dan pengujian otomatis.
Backbone.js: Backbone.js adalah kerangka kerja JavaScript yang sangat ringan dan fleksibel. Backbone.js membantu pengembang membangun aplikasi web dengan memisahkan logika dari antarmuka pengguna.
Meteor: Meteor adalah kerangka kerja JavaScript yang digunakan untuk membangun aplikasi web real-time dan responsif. Meteor digunakan untuk mengembangkan aplikasi web yang membutuhkan interaksi real-time antara pengguna dan server.
Node.js: Node.js adalah platform JavaScript yang digunakan untuk mengembangkan aplikasi web di sisi server. Dengan Node.js, pengembang dapat menggunakan JavaScript di sisi server dan membuat aplikasi web yang sangat responsif.
`}),e.add({id:104,href:"/python/tutorial/akses-database/",title:"Mengakses database di dalam Python",description:"Akses database di dalam Python.",content:`Python mendukung konektivitas dengan berbagai jenis database, kita dapat memilih database yang tepat untuk aplikasi yang akan dibangun. Standar Interface Python untuk database adalah Python DB-API. Kebanyakan Interface database Python mematuhi standar ini. API (Application Programming Interface) Database Python mendukung berbagai macam server database, antara lain sebagai berikut:
GadFly mSQL MySQL PostgreSQL Microsoft SQL Server 2000 Informix Interbase Oracle Sybase SQLite API DB menyediakan standar minimal yang memungkinkan kita untuk terkoneksi dengan database menggunakan struktur dan sintaks Python. API ini meliputi:
Mengimpor modul API. Mendapatkan koneksi dengan database. Menampilkan hasil dari query SQL dan prosedur tersimpan. Menutup koneksi Python memiliki dukungan built-in untuk SQLite. Namun disini, kita akan membahas tentang konsep konektifitas Python menggunakan MySQL. Disini kita akan menggunakan modul PyMySQL.
Apa itu PyMySQL ? # PyMySQL adalah sebuah antarmuka untuk menghubungkan ke server database MySQL dari Python. PyMySQL mengimplementasikan API Database Python v2.0 dan berisi perpustakaan klien MySQL murni-Python. Tujuan PyMySQL adalah penggantian drop-in untuk MySQLdb. Silakan akses dokumentasi lengkap penggunaan PyMySQL di https://pymysql.readthedocs.io/en/latest/.
Cara Instal PyMySQL # Sebelum melanjutkan, pastikan Anda telah menginstal PyMySQL di komputer Anda. Cukup ketik berikut ini di skrip Python Anda dan jalankan.
import pymysql.cursors
Jika menghasilkan hasil berikut, berarti modul MySQLdb tidak terpasang:
Traceback (most recent call last): File &quot;test.py&quot;, line 3, in Import PyMySQL ImportError: No module named PyMySQL
Untuk menginstal modul PyMySQL silahkan gunakan command/perintah berikut di command prompt:
python -m pip install PyMySQL
Database Connection # Sebelum terhubung ke database MySQL, pastikan beberapa hal dibawah ini :
Anda telah membuat database TESTDB. Anda telah membuat tabel EMPLOYEE di TESTDB. Tabel ini memiliki field FIRST_NAME, LAST_NAME, AGE, SEX, dan INCOME. User ID “testuser” dan password “test123” diatur untuk mengakses TESTDB. Python modul PyMySQL terinstal dengan benar pada komputer Anda. Anda telah melalui tutorial MySQL untuk memahami Dasar-Dasar MySQL Berikut ini adalah contoh koneksi dengan database MySQL “TESTDB”
import pymysql.cursors ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method cursor = db.cursor() ## execute SQL query using execute() method. cursor.execute(&quot;SELECT VERSION()&quot;) ## Fetch a single row using fetchone() method. data = cursor.fetchone() print (&quot;Database version : %s &quot; % data) ## disconnect from server db.close() ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method cursor = db.cursor() ## Drop table if it already exist using execute() method. cursor.execute(&quot;DROP TABLE IF EXISTS EMPLOYEE&quot;) ## Create table as per requirement sql = &quot;&quot;&quot;CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )&quot;&quot;&quot; cursor.execute(sql) ## disconnect from server db.close() Operasi Insert # Contoh berikut, mengeksekusi pernyataan SQL INSERT untuk membuat record di tabel EMPLOYEE
import pymysql.cursors ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method cursor = db.cursor() ## Prepare SQL query to INSERT a record into the database. sql = &quot;&quot;&quot;INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES ('Mac', 'Mohan', 20, 'M', 2000)&quot;&quot;&quot; try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() ## disconnect from server db.close() Contoh di atas bisa dituliskan sebagai berikut untuk membuat query SQL secara dinamis
import pymysql.cursors ## Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) ## prepare a cursor object using cursor() method \`cursor = db.cursor()\` ## Prepare SQL query to INSERT a record into the database. sql = &quot;INSERT INTO EMPLOYEE(FIRST_NAME, \\ LAST_NAME, AGE, SEX, INCOME) \\ VALUES ('%s', '%s', '%d', '%c', '%d' )&quot; % \\ ('Mac', 'Mohan', 20, 'M', 2000) try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() ## disconnect from server db.close() Read Operation # READ Operation pada database apapun berarti mengambil beberapa informasi berguna dari database. Setelah koneksi database terbentuk, kita dapat untuk membuat query ke dalam database. Kita dapat menggunakan metode fetchone() untuk mengambil satu record atau fetchall() metode untuk mengambil beberapa nilai dari tabel database.
Fetchone () - Ini mengambil baris berikut dari kumpulan hasil query. Set hasil adalah objek yang dikembalikan saat objek kursor digunakan untuk query tabel.
Fetchall () - Ini menjemput semua baris dalam kumpulan hasil. Jika beberapa baris telah diekstraksi dari himpunan hasil, maka akan diambil baris yang tersisa dari kumpulan hasil.
Rowcount - Ini adalah atribut read-only dan mengembalikan jumlah baris yang dipengaruhi oleh metode execute ().
Berikut ini contoh untuk menampilkan record dari tabel EMPLOYEE yang memiliki gaji lebih dari 1000
import pymysql.cursors # Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) # prepare a cursor object using cursor() method cursor = db.cursor() # Prepare SQL query to INSERT a record into the database. sql = &quot;SELECT * FROM EMPLOYEE \\ WHERE INCOME &gt; '%d'&quot; % (1000) try: # Execute the SQL command cursor.execute(sql) # Fetch all the rows in a list of lists. results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # Now print fetched result print (&quot;fname = %s,lname = %s,age = %d,sex = %s,income = %d&quot; % \\ (fname, lname, age, sex, income )) except: print (&quot;Error: unable to fetch data&quot;) # menutup koneksi ke server db.close() Setelah perintah diatas dieksekusi, akan muncul hasil seperti dibawah ini : fname = Mac, lname = Mohan, age = 20, sex = M, income = 2000
Update Operation # Operasi UPDATE pada database berarti mengupdate satu atau lebih record, yang sudah tersedia di database. Contoh berikut memperbarui semua record yang memiliki SEX sebagai ‘M’. Di sini, kita meningkatkan UMUR semua laki-laki satu tahun.
import pymysql.cursors # Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) # prepare a cursor object using cursor() method cursor = db.cursor() # Prepare SQL query to UPDATE required records sql = &quot;UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'&quot; % ('M') try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() # disconnect from server db.close() Delete Operation # Operasi DELETE diperlukan bila kita ingin menghapus beberapa record dari database. Berikut ini adalah contoh untuk menghapus semua record dari EMPLOYEE dimana AGE lebih dari 20
import pymysql.cursors # Open database connection db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot; ) # prepare a cursor object using cursor() method cursor = db.cursor() # Prepare SQL query to DELETE required records sql = &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; '%d'&quot; % (20) try: # Execute the SQL command cursor.execute(sql) # Commit your changes in the database db.commit() except: # Rollback in case there is any error db.rollback() # disconnect from server db.close() Selain itu masih ada beberapa operasi sebagai berikut :
Commit Operation db.commit() Rollback Operation db.rollback() Disconnect Operation db.close() `}),e.add({id:105,href:"/html/tutorial/input/",title:"Input",description:"merupakan elemen penting dari form HTML. Atribut `type` dari elemen input dapat berupa berbagai jenis, yang mendefinisikan bidang informasinya masing-masing.",content:`HTML Form Input type # Dalam HTML &lt;input type=&quot;&quot;&gt; merupakan elemen penting dari form HTML. Atribut type dari elemen input dapat berupa berbagai jenis, yang mendefinisikan bidang informasinya masing-masing. Contohnya membuat kotak input teks.
&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; Berikut adalah daftar semua type &lt;input&gt; pada HTML.
Type Description text Mendefinisikan bidang input teks satu baris. password Mendefinisikan bidang input password satu baris. radio Mendefinisikan tombol radio yang memungkinkan untuk pilih satu opsi. checkbox Mendefinisikan kotak centang yang memungkinkan untuk pilih beberapa pilihan/opsi. button Mendefinisikan tombol tekan sederhana, yang dapat diprogram untuk melakukan tugas pada suatu event. file Mendefinisikan bidang input untuk memilih file dari penyimpanan perangkat. image Mendefinisikan tombol kirim grafis/tombol kirim dalam bentuk gambar. submit Mendefinisikan tombol kirim untuk mengirimkan formulir ke server. reset Mendefinisikan tombol reset untuk mengatur ulang semua nilai dalam formulir. HTML5 menambahkan beberapa type baru pada elemen &lt;input&gt;.
Berikut adalah semua daftar type &lt;input&gt; pada HTML5
Type Description color Mendefinisikan bidang input yang digunakan untuk pemilihan warna. date Mendefinisikan bidang input untuk pemilihan tanggal. datetime-local Mendefinisikan bidang input untuk memilih tanggal tanpa zona waktu. email Mendefinisikan bidang input untuk memasukkan alamat email. month Mendefinisikan bidang input untuk pemilihan bulan dan tahun, tanpa zona waktu. number Mendefinisikan bidang input untuk memasukkan nomor. url Mendefinisikan bidang input untuk memasukkan URL. week Mendefinisikan bidang untuk memilih tanggal dari minggu-tahun, tanpa zona waktu. search Mendefinisikan satu bidang teks baris untuk memasukkan string pencarian. tel Mendefinisikan bidang input untuk memasukkan nomor telepon. Penggunaan # &lt;input type=&quot;button&quot;&gt; &lt;input type=&quot;checkbox&quot;&gt; &lt;input type=&quot;color&quot;&gt; &lt;input type=&quot;date&quot;&gt; &lt;input type=&quot;datetime-local&quot;&gt; &lt;input type=&quot;email&quot;&gt; &lt;input type=&quot;file&quot;&gt; &lt;input type=&quot;hidden&quot;&gt; &lt;input type=&quot;image&quot;&gt; &lt;input type=&quot;month&quot;&gt; &lt;input type=&quot;number&quot;&gt; &lt;input type=&quot;password&quot;&gt; &lt;input type=&quot;radio&quot;&gt; &lt;input type=&quot;range&quot;&gt; &lt;input type=&quot;reset&quot;&gt; &lt;input type=&quot;search&quot;&gt; &lt;input type=&quot;submit&quot;&gt; &lt;input type=&quot;tel&quot;&gt; &lt;input type=&quot;text&quot;&gt; &lt;input type=&quot;time&quot;&gt; &lt;input type=&quot;url&quot;&gt; &lt;input type=&quot;week&quot;&gt; `}),e.add({id:106,href:"/python/tutorial/netwotking/",title:"Networking di dalam Python",description:"Networking di dalam Python.",content:`Python menyediakan dua tingkat akses ke layanan jaringan. Pada tingkat rendah, Kita dapat mengakses dukungan soket dasar dalam sistem operasi yang mendasarinya, yang memungkinkan kita untuk mengimplementasikan klien dan server untuk kedua protokol berorientasi koneksi dan tanpa sambungan.
Python juga memiliki library yang menyediakan akses tingkat lebih tinggi ke protokol jaringan tingkat aplikasi tertentu, seperti FTP, HTTP, dan seterusnya.
Apa itu Socket? # Soket adalah titik akhir dari saluran komunikasi dua arah. Soket dapat berkomunikasi dalam suatu proses, antara proses pada mesin yang sama, atau antara proses di berbagai benua.
Soket dapat diimplementasikan melalui sejumlah jenis saluran yang berbeda: soket domain Unix, TCP, UDP, dan sebagainya. Pustaka socket menyediakan kelas khusus untuk menangani transportasi umum serta antarmuka umum untuk menangani sisanya.
Modul Socket Untuk membuat soket, kita harus menggunakan fungsi socket.socket () yang tersedia dalam modul soket, yang memiliki sintaks umum
s = socket.socket (socket_family, socket_type, protocol=0)
Server Socket Method # Method Penjelasan s.bind() This method binds address (hostname, port number pair) to socket. s.listen() This method sets up and start TCP listener. s.accept() This passively accept TCP client connection, waiting until connection arrives (blocking). Client Socket Method # Method Penjelasan s.connect() This method actively initiates TCP server connection. General Method Socket # Method Penjelasan s.recv() This method receives TCP message s.send() This method transmits TCP message s.recvfrom() This method receives UDP message s.sendto() This method transmits UDP message s.close() This method closes socket socket.gethostname() Returns the hostname. #!/usr/bin/python # This is server.py file import socket # Import socket module s = socket.socket() # Create a socket object host = socket.gethostname() # Get local machine name port = 12345 # Reserve a port for your service. s.bind((host, port)) # Bind to the port s.listen(5) # Now wait for client connection. while True: c, addr = s.accept() # Establish connection with client. print 'Got connection from', addr c.send('Thank you for connecting') c.close() # Close the connection Server Sederhana # Untuk menulis server Internet, kami menggunakan fungsi soket yang tersedia di modul soket untuk membuat objek soket. Objek soket kemudian digunakan untuk memanggil fungsi lain untuk menyiapkan server soket.
Sekarang sebut bind(hostname,port) berfungsi untuk menentukan port untuk layanan pada host yang diberikan.
Selanjutnya, panggil metode penerimaan objek yang dikembalikan. Metode ini menunggu sampai klien terhubung ke port yang di tentukan, dan kemudian mengembalikan objek koneksi yang mewakili koneksi ke klien itu.
Client Sederhana # Mari kita menulis program klien yang sangat sederhana yang membuka koneksi ke port yang diberikan 12345 dan host yang diberikan. Ini sangat sederhana untuk membuat klien soket menggunakan fungsi modul soket Python.
Socket.connect (hosname, port) membuka koneksi TCP ke hostname pada port. Setelah Kita memiliki soket terbuka, maka dapat membaca darinya seperti objek IO apa pun. Setelah selesai, jangan lupa untuk menutupnya, karena akan menutup file.
Kode berikut adalah klien yang sangat sederhana yang terhubung ke host dan port yang diberikan, membaca data yang tersedia dari soket, dan kemudian keluar
#!/usr/bin/python # This is client.py file import socket # Import socket module s = socket.socket() # Create a socket object host = socket.gethostname() # Get local machine name port = 12345 # Reserve a port for your service. s.connect((host, port)) print s.recv(1024) s.close # Close the socket when done Sekarang jalankan server.py ini di latar belakang dan kemudian jalankan di atas client.py untuk melihat hasilnya.
Jalankan server.
python server.py
Setelah server berjalan lanjutkan
Jalankan client: python client.py
Hasilnya akan seperti ini : Got connection from ('127.0.0.1', 48437) Thank you for connecting
Modul Internet pada Python # Berikut tabel daftar beberapa modul penting dalam pemrograman Jaringan / Internet Python.
Protocol Common function Port No Python module HTTP Web pages 80 httplib, urllib, xmlrpclib NNTP Usenet news 119 nntplib FTP Transfer file 20 ftplib, urllib SMTP Mengirim email 25 smtplib POP3 Fetching email 110 poplib IMAP4 Fetching email 143 imaplib Telnet Command lines 23 telnetlib Gopher Document transfers 70 gopherlib, urllib `}),e.add({id:107,href:"/html/tutorial/button/",title:"Button",description:"elemen yang digunakan untuk membuat tombol yang bisa diklik",content:`HTML Button # Apa Itu HTML Button # &lt;button&gt; dalam HTML adalah elemen yang digunakan untuk membuat tombol yang bisa diklik. Kita bisa mengisi elemen &lt;button&gt; dengan text atau dengan elemen lainnya seperti &lt;p&gt;, &lt;i&gt;, &lt;b&gt;, &lt;strong&gt;, &lt;img&gt;, dan lain-lain. Namun elemen &lt;button&gt; tidak bisa dengan elemen &lt;input&gt;
Atribut # Berikut adalah atribut-atribut yang ada dalam elemen &lt;button&gt;.
Atribut Nilai Deskripsi autofocus autofocus Membuat tombol secara otomatis mendapatkan fokus saat halaman pertama kali dimuat disabled disabled Membuat tombol tidak bisa diklik form form_id Menentukan form mana yang terkait dengan tombolnya type button, reset, submit Menentukan tipe dari tombol. - type=&quot;button&quot; = Menandakan bahwa tombol tersebut adalah tombol yang dapat diklik - type=&quot;submit&quot; = Menandakan bahwa tombol tersebut berfungsi untuk melakukan submit form - type=&quot;reset&quot; = Menandakan bahwa tombol tersebut berfungsi untuk mereset data pada form formaction URL Menentukan ke mana data dari form akan dikirim ketika form di submit. Atribut ini hanya digunakan jika type=&quot;submit&quot; formenctype application/x-www-form-urlencoded, multipart/form-data, text/plain Menentukan bagaimana data form dikodekan/diencode sebelum dikirim ke server. Atribut ini hanya digunakan jika type=&quot;submit&quot; formmethod get, post Menentukan metode HTTP apa yang digunakan ketika mengirim data form. Atribut ini hanya digunakan jika type=&quot;submit&quot; formnovalidate formnovalidate Menentukan data form tidak boleh divalidasi pada saat pengiriman. Atribut ini hanya digunakan jika type=&quot;submit&quot; formtarget _blank, _self, _parent, _top, framename Menentukan dimana letak untuk menampilkan respon setelah submit form. Atribut ini hanya digunakan jika type=&quot;submit&quot; name nama Menentukan nama untuk tombol value teks Menentukan nilai untuk tombol Contoh # Berikut adalah contoh penggunaan elemen &lt;button&gt;.
&lt;button type=&quot;submit&quot; name=&quot;test&quot; value=&quot;Test Submit&quot;&gt;Submit&lt;/button&gt; Referensi # HTML Tag HTML type Attribute `}),e.add({id:108,href:"/html/tutorial/textarea/",title:"Text Area",description:"Elemen HTML `<textarea>` mewakili kontrol pengeditan teks multi-baris, berguna saat Anda ingin mengizinkan pengguna memasukkan teks bentuk bebas dalam jumlah yang cukup besar, misalnya komentar pada ulasan atau formulir umpan balik.",content:`HTML Textarea # Apa itu tag &lt;textarea&gt;? # Elemen HTML &lt;textarea&gt; mewakili kontrol pengeditan teks multi-baris, berguna saat Anda ingin mengizinkan pengguna memasukkan teks bentuk bebas dalam jumlah yang cukup besar, misalnya komentar pada ulasan atau formulir umpan balik.
Fitur &lt;textarea&gt; antara lain:
Atribut id untuk memungkinkan &lt;textarea&gt; dikaitkan dengan elemen &lt;label&gt; untuk tujuan aksesibilitas. Atribut name untuk mengatur name titik data terkait yang dikirimkan ke server saat formulir dikirimkan. Atribut rows dan cols untuk memungkinkan Anda menentukan ukuran yang tepat untuk &lt;textarea&gt; yang akan diambil. Mengatur ini adalah ide yang bagus untuk konsistensi, karena default browser dapat berbeda. Konten default dimasukkan di antara tag pembuka dan penutup. &lt;textarea&gt; tidak mendukung atribut value. Elemen &lt;textarea&gt; juga menerima beberapa atribut yang umum digunakan untuk tag &lt;input&gt;, seperti autocomplete, autofocus, disabled, placeholder, readonly, dan required.
Contoh kode # HTML # &lt;label for=&quot;story&quot;&gt;Tell us your story:&lt;/label&gt; &lt;textarea id=&quot;story&quot; name=&quot;story&quot; rows=&quot;5&quot; cols=&quot;33&quot;&gt; It was a dark and stormy night... &lt;/textarea&gt; CSS # label, textarea { font-size: 0.8rem; letter-spacing: 1px; } textarea { padding: 10px; max-width: 100%; line-height: 1.5; border-radius: 5px; border: 1px solid #ccc; box-shadow: 1px 1px 1px #999; } Contoh Lain # Contoh Basic # Contoh berikut menunjukkan penggunaan &lt;textarea&gt; yang sangat sederhana, dengan sejumlah rows dan columns dan beberapa konten default.
&lt;textarea name=&quot;textarea&quot; rows=&quot;10&quot; cols=&quot;50&quot;&gt;Write something here&lt;/textarea&gt; Panjang minimal dan maksimal # Contoh berikut menunjukkan penggunaan &lt;textarea&gt; dengan jumlah karakter minimum dan maksimum menggunakan atribut minlength untuk panjang minimum dan maxlength untuk panjang maksimum karakter.
&lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; minlength=&quot;10&quot; maxlength=&quot;20&quot;&gt;Write something here&lt;/textarea&gt; Perhatikan bahwa minlength tidak menghentikan pengguna untuk menghapus karakter sehingga angka yang dimasukkan melewati batas minimum, tetapi itu membuat nilai yang dimasukkan ke dalam &lt;textarea&gt; tidak valid. Perhatikan juga bahwa meskipun Anda memiliki set nilai minlength (3, misalnya), &lt;textarea&gt; kosong masih dianggap valid kecuali Anda juga memiliki set atribut required.
Placeholder # Contoh berikut menunjukkan penggunaan &lt;textarea&gt; yang memiliki placeholder. Perhatikan placeholder itu menghilang ketika Anda mulai mengetik ke dalam &lt;textarea&gt;.
&lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; placeholder=&quot;Comment text.&quot;&gt;&lt;/textarea&gt; Catatan: Placeholder hanya boleh digunakan untuk memperlihatkan contoh tipe data yang harus dimasukkan ke dalam formulir, mereka bukan pengganti elemen &lt;label&gt; yang tepat yang terikat pada input.
Disabled dan readonly # Contoh ini menunjukkan dua &lt;textarea&gt; yang salah satunya menggunakan atribut disabled dan satunya lagi menggunakan atribut readonly. Mainkan keduanya dan Anda akan melihat perbedaan perilaku, elemen yang disabled tidak dapat dipilih dengan cara apa pun (dan valuenya tidak dikirimkan), sedangkan elemen readonly dapat dipilih dan isinya dapat disalin (dan valuenya dikirimkan), Anda hanya tidak dapat mengedit isinya.
Catatan: Di browser selain firefox, seperti chrome, konten textarea yang disabled dapat dipilih dan disalin.
&lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; disabled&gt;I am a disabled textarea&lt;/textarea&gt; &lt;textarea name=&quot;textarea&quot; rows=&quot;5&quot; cols=&quot;30&quot; readonly&gt;I am a readonly textarea&lt;/textarea&gt; Referensi # MDN `}),e.add({id:109,href:"/html/tutorial/data/",title:"Data",description:"digunakan untuk menambahkan terjemahan yang dapat dibaca mesin dari konten tertentu.",content:`HTML Data # Apa itu tag &lt;data&gt; ? # Tag &lt;data&gt; digunakan untuk menambahkan terjemahan yang dapat dibaca mesin dari konten tertentu.
Elemen ini memberikan nilai yang dapat dibaca mesin untuk memproses data, dan nilai yang dapat dibaca manusia untuk rendering di browser.
Tips: Jika konten berhubungan dengan waktu maka gunakan tag &lt;time&gt;
Contoh kode # HTML
&lt;ul&gt; &lt;li&gt;&lt;data value=&quot;1&quot;&gt;Ayam Bakar&lt;/data&gt;&lt;/li&gt; &lt;li&gt;&lt;data value=&quot;2&quot;&gt;Nasi Goreng&lt;/data&gt;&lt;/li&gt; &lt;li&gt;&lt;data value=&quot;3&quot;&gt;Sate&lt;/data&gt;&lt;/li&gt; &lt;/ul&gt; Contoh Lain # &lt;input type=&quot;radio&quot; id=&quot;K1&quot;&gt; &lt;label for=&quot;K1&quot;&gt;&lt;data value=&quot;27&quot;&gt;Kelas 1&lt;/data&gt;&lt;/label&gt; &lt;br&gt; &lt;input type=&quot;radio&quot; id=&quot;K2&quot;&gt; &lt;label for=&quot;K2&quot;&gt;&lt;data value=&quot;30&quot;&gt;Kelas 2&lt;/data&gt;&lt;/label&gt; &lt;br&gt; &lt;input type=&quot;radio&quot; id=&quot;K3&quot;&gt; &lt;label for=&quot;K3&quot;&gt;&lt;data value=&quot;30&quot;&gt;Kelas 3&lt;/data&gt;&lt;/label&gt; &lt;br&gt; &lt;input type=&quot;radio&quot; id=&quot;K4&quot;&gt; &lt;label for=&quot;K4&quot;&gt;&lt;data value=&quot;32&quot;&gt;Kelas 4&lt;/data&gt;&lt;/label&gt; Referensi: https://www.w3schools.com/tags/tag_data.asp
`}),e.add({id:110,href:"/html/tutorial/canvas/",title:"Canvas",description:"elemen ini cukup berguna untuk menggambar grafik-grafik atau objek pada halaman website",content:`HTML Canvas # Apa itu HTML Canvas? # Pada HTML5 terdapat elemen &lt;canvas&gt;, elemen ini cukup berguna untuk menggambar grafik-grafik atau objek pada halaman website dengan menggunakan bantuan JavaScript. Kalian wajib menguasai setidaknya hal-hal dasar mengenai JavaScript untuk memanipulasi objek pada elemen ini, sebab elemen ini hanya sebuah Badan bagi grafik yang akan digambar, dan sisanya di manipulasikan dengan JavaScript.
Secara umum elemen ini sering digunakan untuk membangun sebuah Game Web, contoh penulisan sebuah elemen &lt;canvas&gt; sebagai berikut:
&lt;canvas&gt;&lt;/canvas&gt; Apakah ada atribut di dalam tag &lt;canvas&gt;? # Pada tag ini tidak terdapat atribut khusus karena penyelesaiannya menggunakan JavaScript.
Apa saja yang bisa kita gambar? # Tulisan - HTML canvas bisa digunakan untuk menggambar tulisan. Grafik - HTML canvas seringkali digunakan untuk menggambar berbagai jenis grafik. Animasi - HTML canvas bisa digunakan untuk menganimasikan objek yang sudah digambar. Dan masih banyak lainnya yang bisa kita interaksikan dengan tag satu ini.
Bagaimana cara menggambarnya? # &lt;canvas id=&quot;canvas1&quot; width=&quot;500&quot; height=&quot;500&quot;&gt;&lt;/canvas&gt; &lt;script&gt; const canvas = document.getElementById(&quot;canvas1&quot;) const ctx = canvas.getContext(&quot;2d&quot;) console.log(ctx) // untuk melihat function built-in yang tersedia const letakHorizontal = 100 const letakVertikal = 100 const width = 200 const height = 200 ctx.fillRect(letakHorizontal, letakVertikal, width, height) ctx.fillStyle = &quot;black&quot; ctx.fill() &lt;/script&gt; Output:
Keunikannya, objek ini bisa di manipulasikan dengan banyak hal karena &lt;canvas&gt; memiliki function built-in yang cukup banyak. Canvas ini tidak hanya bisa menggambar satu objek saja melainkan tidak terbatas atau sebanyak yang dibutuhkan.
Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
`}),e.add({id:111,href:"/html/tutorial/video/",title:"Video",description:"digunakan untuk menampilkan video di dalam browser maupun website, namun tidak semua browser mendukung seluruh format video",content:`HTML Video # Apa itu HTML Video? # HTML memiliki sebuah elemen tag &lt;video&gt; yang digunakan untuk menampilkan video di dalam browser maupun website, namun tidak semua browser mendukung seluruh format video, jadi kita harus menyajikan banyak format video untuk memastikan browser menjalankan video tersebut, yaitu dengan cara lokasi file video di tempatkan di dalam elemen tag &lt;source&gt; atau di dalam attribute src.
Bagaimana cara penggunaan attribute &lt;video&gt; ? # Cara penggunaan tag &lt;video&gt; lebih jelasnya adalah seperti berikut:
penggunaan sederhana:
&lt;video controls src=&quot;https://archive.org/download/BigBuckBunny_124/Content/big_buck_bunny_720p_surround.mp4&quot; poster=&quot;https://peach.blender.org/wp-content/uploads/title_anouncement.jpg?x11217&quot; width=&quot;620&quot; &gt; Maaf, browser yang anda gunakan tidak support video embedded, jangan khawatir, kamu tetap bisa melihatnya dengan mendownload video tersebut &lt;a href=&quot;https://archive.org/details/BigBuckBunny_124&quot;&gt;disini&lt;/a&gt; &lt;/video&gt; penggunaan dengan lebih dari 1 format video:
jika ingin memastikan video tampil di browser manapun gunakan tag &lt;source&gt; di dalam tag &lt;video&gt; dengan format video yang berbeda-beda. seperti ini:
&lt;video controls&gt; &lt;!-- memasukan lebih dari 1 format video menggunakan tag &lt;source&gt; untuk mengantisipasi browser yang tidak mendukung video format tertentu --&gt; &lt;source src=&quot;video/myVideo.mp4&quot; type=&quot;video/mp4&quot; /&gt; &lt;source src=&quot;video/myVideo.webm&quot; type=&quot;video/webm&quot; /&gt; &lt;!-- fallback jika browser tidak mendukung tag &lt;video&gt; --&gt; &lt;p&gt; Browser yang kamu pakai tidak mendukung HTML5 video. berikut &lt;a href=&quot;video/myVideo.mp4&quot;&gt;link video&lt;/a&gt; untuk melihatnya. &lt;/p&gt; &lt;/video&gt; memasang subtitle/captions ke dalam video:
di tag &lt;video&gt; kita juga dapat menambahkan captions / subtitle dengan memasukkan tag &lt;track&gt; ke dalam tag &lt;video&gt;. seperti ini:
&lt;video id=&quot;video&quot; controls preload=&quot;metadata&quot;&gt; &lt;source src=&quot;video/myVideo.mp4&quot; type=&quot;video/mp4&quot; /&gt; &lt;source src=&quot;video/myVideo.webm&quot; type=&quot;video/webm&quot; /&gt; &lt;track label=&quot;English&quot; kind=&quot;subtitles&quot; srclang=&quot;en&quot; src=&quot;captions/vtt/myVideo-en.vtt&quot; default /&gt; &lt;track label=&quot;Indonesia&quot; kind=&quot;subtitles&quot; srclang=&quot;id&quot; src=&quot;captions/vtt/myVideo-id.vtt&quot; /&gt; &lt;/video&gt; untuk tag &lt;track&gt; lebih jelasnya bisa di akses di sini [HTML Track] dan untuk tag &lt;source&gt; bisa diakses di sini [HTML Source]
Atribut di dalam tag &lt;video&gt; # Terdapat setidaknya dua atribut yang biasa digunakan.
autoplay - attribute bertipe boolean yang digunakan untuk menjalankan video secara otomatis. (di sebagian browser attribute ini tidak akan aktif jika tidak ada attribute muted ) controls - browser akan menampilkan control video berupa volume, seeking, pause/resume. muted - jika terdapat attribute ini, maka video tidak akan mengeluarkan audio. poster - link / URL untuk menampilkan gambar video ketika video sedang di download, jika attribute ini tidak di pasang, tidak ada yang di tampilkan sampai video tersebut terdownload &amp; frame pertama dari video tersebut menjadi poster frame. Namun sebagai catatan jika ingin menampilkan video dari suatu link di internet, pastikan tidak melanggar hak cipta dari kepemilikan video tersebut.
Referensi # Untuk referensi lengkapnya, kalian bisa mengunjungi website berikut.
`}),e.add({id:112,href:"/html/tutorial/audio/",title:"Audio",description:"HTML audio adalah sebuah tag HTML yang berfungsi untuk menunjukan suara, terdapat 3 type atau format audio",content:`HTML AUDIO # Apa itu HTML audio # HTML audio adalah sebuah tag HTML yang berfungsi untuk menunjukan suara, terdapat 3 type atau format audio yaitu :
ogg mp3 wav Ada 2 tag yang digunakan untuk mengeluarkan suara yaitu :
&lt;audio&gt; : fungsinya sebagai tag html &lt;source&gt;: fungsinya menentukan file audio dan type/formatnya Ada juga untuk atribut tag audio
autoplay : memulai langsung mute : tidak ada suara ketika di putar controls : menampilkan kontrol di audio Langsung saja ke contohnya # &lt;audio&gt; &lt;source src=&quot;&quot; type=&quot;&quot; /&gt; &lt;/audio&gt; Penjelasan # src: menentukan file audio type: menentukan type/formatnya Penerapan # &lt;audio controls autoplay&gt; &lt;source src=&quot;&quot; type=&quot;audio/(typenya)&quot; /&gt; &lt;/audio&gt; Penggunaan demo # &lt;!-- Penjelasan --&gt; &lt;!-- Atribut control = menampilkan control di audio --&gt; &lt;!-- Atribut autoplay = memulai langsung --&gt; &lt;!-- src = sumber audio (horse.ogg) --&gt; &lt;!-- type = tipe/format dari audio tersebut (audio/ogg) --&gt; &lt;audio controls autoplay&gt; &lt;source src=&quot;horse.ogg&quot; type=&quot;audio/ogg&quot; /&gt; &lt;/audio&gt; Referensi untuk audio dan materi W3SCHOOLS # `}),e.add({id:113,href:"/html/tutorial/langcode/",title:"Language",description:"HTML lang code terdiri atas HTML language code (code bahasa) dan HTML country code (kode negara)",content:`HTML Lang Code # HTML lang code terdiri atas HTML language code (code bahasa) dan HTML country code (kode negara)
Apa itu HTML Language Code ? # HTML language code atau bahasa Indonesianya kode bahasa HTML memiliki kode lang merupakan suatu atribut yang harus selalu digunakan di dalam tag &lt;html&gt; untuk mendeklarasikan bahasa dari suatu halaman website. Penggunaan kode bahasa ini dimaksudkan untuk membantu mesin pencari dan browser. Kode bahasa HTML menggunakan kode ISO negara.
Beberapa contoh kode ISO bahasa -Indonesia (id) -Inggris (en) -German (de) -Jepang (ja)
Apa Itu HTML Country Code # HTML Country Code atau bahasa Indonesianya kode negara HTML digunakan sebagai tambahan kode bahasa di dalam atribut lang. Dua huruf pertama didalam kode ISO negara mendefinisikan atau menunjukkan negara yang digunakan oleh suatu halaman web.
Beberapa contoh kode ISO negara
Indonesia (ID) Korea Selatan (KR) Inggris (GB) Amerika Serikat (US) Contoh penggunaan kode bahasa # Dalam bahasa Indonesia
&lt;html lang=&quot;id-ID&quot;&gt; &lt;/html&gt; Dalam bahasa Jepang
&lt;html lang=&quot;ja-JP&quot;&gt; &lt;/html&gt; Dalam bahasa Inggris Amerika serikat
&lt;html lang=&quot;en-US&quot;&gt; &lt;/html&gt; Dalam bahasa Cina Taiwan
&lt;html lang=&quot;zh-TW&quot;&gt; &lt;/html&gt; Referensi: Language code: https://www.w3schools.com/tags/ref_language_codes.asp Country code: https://www.w3schools.com/tags/ref_country_codes.asp
`}),e.add({id:114,href:"/html/tutorial/taglist/",title:"Tag List",description:"Dalam file ini berisi semua tag HTML dengan deskripsi (mencakup tag HTML5 terbaru). ",content:`All HTML Tags List # Dalam file ini berisi semua tag HTML dengan deskripsi (mencakup tag HTML5 terbaru). Tag versi HTML sebelumnya selalu berguna, tetapi beberapa tag dihapus di HTML5 dan beberapa tag diperkenalkan di HTML5. Semua daftar tag HTML diurutkan sesuai abjad.
Catatan:
Baru - Tag baru diperkenalkan di HTML5 Hapus - Tidak suport di HTML5 Baru/Hapus - Tag baru diperkenalkan di HTML5, tapi sekarang tidak suport di HTML5 Tag Deskripsi Dalam HTML5? &lt;!--...--&gt; Menjelaskan teks komentar dalam kode sumber &lt;!doctype&gt; Mendefinisikan jenis dokumen &lt;a&gt; Jangkar tertentu (Hyperlink), digunakan untuk tautan dalam dokumen web internal/eksternal &lt;abbr&gt; Menjelaskan singkatan (akronim) &lt;acronym&gt; Menjelaskan akronim Hapus &lt;address&gt; Menjelaskan informasi alamat &lt;applet&gt; Menanamkan applet dalam dokumen HTML Hapus &lt;area&gt; Mendefinisikan area dalam peta gambar &lt;article&gt; Mendefinisikan sebuah artikel Baru &lt;aside&gt; Deskripsi berisi set (atau tulis) di samping tempat di halaman berisi Baru &lt;audio&gt; Audio konten spesifik Baru &lt;b&gt; Menebalkan teks tertentu &lt;base&gt; Menentukan URL dasar untuk semua tautan di halaman web &lt;basefont&gt; Menjelaskan warna font default, ukuran, tampilan dalam dokumen Hapus &lt;bb&gt; Menententukan perintah browser, perintah itu dipanggil sesuai tindakan klien Baru/Hapus &lt;bdo&gt; Arah tampilan teks tertentu &lt;big&gt; Mendefinisikan teks besar Hapus &lt;blockquote&gt; Menentukan kutipan panjang &lt;body&gt; Mendefinisikan bagian utama (tubuh) bagian dalam dokumen HTML &lt;br /&gt; Satu baris break spesifik &lt;button&gt; Menentukan tombol tekan &lt;canvas&gt; Menentukan tampilan grafik pada dokumen web HTML Baru &lt;caption&gt; Menentukan judul tabel &lt;center&gt; Menentukan teks yang ditampilkan rata tengah Hapus &lt;cite&gt; Menentukan kutipan teks &lt;code&gt; Menentukan teks kode komputer &lt;col&gt; Menentukan setiap kolom dalam elemen &lt;colgroup&gt; di tabel &lt;colgroup&gt; Mendefinisikan grup dari satu atau lebih kolom di dalam tabel &lt;command&gt; Menentukan tombol perintah, panggil sesuai tindakan pengguna Baru &lt;datagrid&gt; Mendefinisikan data yang mewakili dalam datagrid Baru/Hapus &lt;datalist&gt; Menentukan daftar opsi yang telah ditentukan sebelumnya di sekitar tag &lt;input&gt; Baru &lt;dd&gt; Mendefinisikan deskripsi definisi dalam daftar definisi &lt;del&gt; Teks tertentu dihapus dalam dokumen web &lt;details&gt; Menentukan detail tambahan yang disembunyikan atau ditampilkan sesuai tindakan pengguna Baru &lt;dfn&gt; Menentukan tim definisi &lt;dialog&gt; Menentukan percakapan obrolan antara satu orang atau lebih Baru/Hapus &lt;dir&gt; Menentukan daftar direktori Hapus &lt;div&gt; Menentukan bagian divisi &lt;dl&gt; Menentukan daftar definisi &lt;dt&gt; Menentukan tim definisi &lt;em&gt; Mendefinisikan teks format penekanan &lt;embed&gt; Mendefinisikan aplikasi eksternal embedding menggunakan plug-in relatif Baru &lt;eventsource&gt; Mendefinisikan sumber event yang dihasilkan ke server jauh Baru/Hapus &lt;fieldset&gt; Mendefinisikan pengelompokan elemen formulir terkait &lt;figcaption&gt; Mewakili teks keterangan yang sesuai dengan elemen gambar Baru &lt;figure&gt; Mewakili konten mandiri yang sesuai dengan elemen &lt;figcaption&gt; Baru &lt;font&gt; Mendefinisikan ukuran font, tampilan font dan warna font untuk teksnya Hapus &lt;footer&gt; Mendefinisikan bagian footer yang berisi detail tentang penulis, hak cipta, hubungi kami, peta situs, atau tautan ke dokumen terkait Baru &lt;form&gt; Mendefinisikan bagian formulir yang memiliki kontrol input interaktif untuk mengirimkan informasi formulir ke server &lt;frame&gt; Mendefinisikan frame window Hapus &lt;frameset&gt; Digunakan untuk menampung satu atau lebih elemen &lt;frame&gt; Hapus &lt;h1&gt; hingga &lt;h6&gt; Mendefinisikan level Judul dari 1 hingga 6 ukuran berbeda &lt;head&gt; Mendefinisikan bagian header dari dokumen HTML &lt;header&gt; Didefinisikan sebagai wadah yang menampung konten pengantar atau tautan navigasi Baru &lt;hgroup&gt; Mendefinisikan judul bagian yang menyimpan tag h1 hingga h6 Baru/Hapus &lt;hr /&gt; Mewakili jeda tematik antara tag tingkat paragraf. Hal ini biasanya menarik garis horizontal &lt;html&gt; Mendefinisikan dokumen bahasa markup HTML &lt;i&gt; Mendefinisikan teks format miring &lt;iframe&gt; Mendefinisikan bingkai sebaris yang menyematkan konten eksternal ke dalam dokumen web saat ini &lt;img&gt; Digunakan untuk menyisipkan gambar ke dalam dokumen web &lt;input&gt; Mendefinisikan informasi di input yang dipilih &lt;ins&gt; Digunakan untuk menunjukkan teks yang disisipkan ke dalam halaman dan menunjukkan perubahan pada dokumen &lt;isindex&gt; Digunakan untuk membuat permintaan pencarian baris tunggal untuk menanyakan isi dokumen Hapus &lt;kbd&gt; Digunakan untuk mengidentifikasi teks yang mewakili input keyboard &lt;keygen&gt; Digunakan untuk menghasilkan sertifikat yang ditandatangani, yang digunakan untuk mengautentikasi ke layanan Baru/Hapus &lt;label&gt; Digunakan untuk memberi keterangan pada label teks dengan elemen form &lt;input&gt; &lt;legend&gt; Digunakan untuk menambahkan keterangan (title) ke sekelompok elemen formulir terkait yang dikelompokkan bersama ke dalam tag &lt;fieldset&gt; &lt;li&gt; Menentukan item daftar baik daftar terurut maupun daftar tidak berurut &lt;link&gt; Digunakan untuk memuat stylesheet eksternal ke dalam dokumen HTML &lt;map&gt; Mendefinisikan peta gambar yang dapat diklik &lt;mark&gt; Digunakan untuk menyorot (ditandai) teks tertentu Baru &lt;menu&gt; Digunakan untuk menampilkan daftar item/menu perintah yang tidak diurutkan &lt;meta&gt; Digunakan untuk menyediakan metadata terstruktur tentang halaman web &lt;meter&gt; Digunakan untuk mengukur data dalam rentang tertentu Baru &lt;nav&gt; Digunakan untuk mendefinisikan grup tautan navigasi Baru &lt;noframes&gt; Digunakan untuk menyediakan konten fallback ke browser yang tidak mendukung elemen &lt;frame&gt; Hapus &lt;noscript&gt; Digunakan untuk menyediakan konten cadangan ke browser yang tidak mendukung JavaScript &lt;object&gt; Digunakan untuk menyematkan objek seperti gambar, audio, video, applet Java, dan animasi Flash &lt;ol&gt; Mendefinisikan daftar item yang diurutkan &lt;optgroup&gt; Digunakan untuk membuat pengelompokan opsi, opsi terkait dikelompokkan di bawah judul tertentu &lt;option&gt; Mewakili item opsi dalam elemen &lt;select&gt;, &lt;optgroup&gt; atau &lt;datalist&gt; &lt;output&gt; Digunakan untuk merepresentasikan hasil perhitungan Baru &lt;p&gt; Digunakan untuk merepresentasikan teks paragraf &lt;param&gt; Menyediakan parameter untuk elemen objek yang disematkan &lt;pre&gt; Digunakan untuk merepresentasikan teks yang telah diformat sebelumnya &lt;progress&gt; Mewakili kemajuan tugas Baru &lt;q&gt; Merupakan kutipan singkat &lt;rp&gt; Digunakan untuk memberikan tanda kurung di sekitar konten fall-back ke browser yang tidak mendukung anotasi ruby Baru &lt;rt&gt; Menentukan teks ruby dari anotasi ruby Baru &lt;s&gt; Menampilan teks dalam gaya coret &lt;samp&gt; Mewakili teks yang harus ditafsirkan sebagai contoh keluaran dari program komputer &lt;script&gt; Mendefinisikan JavaScript sisi klien &lt;section&gt; Digunakan untuk membagi dokumen menjadi beberapa bagian generik yang berbeda Baru &lt;select&gt; Digunakan untuk membuat daftar drop-down &lt;small&gt; Digunakan untuk memperkecil ukuran teks &lt;source&gt; Digunakan untuk menentukan beberapa sumber media Baru &lt;span&gt; Digunakan untuk mengelompokkan dan menerapkan gaya ke elemen sebaris &lt;strike&gt; Mewakili teks yang dicoret Hapus &lt;strong&gt; Mewakili penekanan kuat pada teks penting yang lebih besar &lt;sub&gt; Mewakili teks subskrip sebaris &lt;sup&gt; Mewakili teks superskrip sebaris &lt;table&gt; Digunakan untuk mendefinisikan tabel dalam dokumen HTML &lt;tbody&gt; Digunakan untuk mengelompokkan baris tabel &lt;td&gt; Digunakan untuk membuat sel data standar dalam tabel HTML &lt;textarea&gt; Membuat input teks multi-baris &lt;tfoot&gt; Digunakan untuk menambahkan footer pada tabel yang berisi ringkasan data tabel &lt;th&gt; igunakan untuk membuat header sekelompok sel dalam tabel HTML &lt;thead&gt; Digunakan untuk menambahkan header pada tabel yang berisi informasi header tabel &lt;time&gt; Mewakili tanggal dan/atau waktu dalam dokumen HTML Baru &lt;title&gt; Mewakili judul dokumen HTML &lt;tr&gt; Mendefinisikan baris sel dalam tabel &lt;track&gt; Mewakili trek teks untuk tag &lt;audio&gt; dan &lt;video&gt; Baru &lt;tt&gt; Mewakili teks teletype Hapus &lt;u&gt; Mewakili teks yang digarisbawahi &lt;ul&gt; Mendefinisikan daftar item yang tidak diurutkan &lt;var&gt; Merupakan variabel dalam program komputer atau persamaan matematika &lt;video&gt; Digunakan untuk menyematkan konten video Baru &lt;wbr&gt; Mendefinisikan peluang pemutusan kata dalam string teks yang panjang Baru Referensi # Refensi lengkap dan penjelasan lebih lanjut dapat dilihat pada website berikut.
`}),e.add({id:115,href:"/mysql/tutorial/",title:"Tutorial MySQL",description:"Blog Roberto Kaban",content:""}),e.add({id:116,href:"/vbnet/tutorial/",title:"Tutorial MySQL",description:"Blog Roberto Kaban",content:""}),e.add({id:117,href:"/python/tutorial/",title:"Dasar",description:"Blog Roberto Kaban",content:""}),e.add({id:118,href:"/html/tutorial/",title:"Tutorial HTML",description:"Blog Roberto Kaban",content:`HTML (Hypertext Markup Language) merupakan bahasa markup yang digunakan untuk menentukan konten dan struktur halaman web.
`}),e.add({id:119,href:"/javascript/tutorial/",title:"Tutorial Javascript",description:"Blog Roberto Kaban",content:""}),e.add({id:120,href:"/artikel/",title:"Artikel",description:"Berisi artikel yang berhubungan dengan Teknologi, Pemrograman, tips dan trik komputer, Perancangan sistem, Jaringan komputer.",content:`Berisi artikel yang berhubungan dengan Teknologi, Pemrograman, tips dan trik komputer, Perancangan sistem, Jaringan komputer.
`}),e.add({id:121,href:"/coretanku/",title:"Coretanku",description:"Sebatas coretan, cerita, perjalanan hidup dan pengalaman pribadi yang saya tuliskan di blog ini.",content:`Sebatas coretan, cerita, perjalanan hidup dan pengalaman pribadi yang saya tuliskan di blog ini.
`}),e.add({id:122,href:"/html/",title:"Tutorial HTML",description:"HTML (HyperText Markup Language) merupakan bahasa markup standar untuk membuat struktur halaman website.",content:`HTML (HyperText Markup Language) merupakan bahasa markup standar untuk membuat struktur halaman website.
`}),e.add({id:123,href:"/javascript/",title:"Tutorial Javascript",description:"JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.",content:`JavaScript adalah bahasa pemrograman yg paling populer untuk membuat website yang dinamis dan interaktif.
`}),e.add({id:124,href:"/mysql/",title:"Tutorial MySQL",description:"MySQL merupakan sistem manajemen database relasional yang berbasis SQL (Structured Query Language).",content:`MySQL merupakan sistem manajemen database relasional yang berbasis SQL (Structured Query Language).
`}),e.add({id:125,href:"/php/",title:"Tutorial PHP",description:"PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.",content:`PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.
`}),e.add({id:126,href:"/php/tutorial/",title:"Tutorial PHP",description:"PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.",content:`PHP (PHP: Hypertext Prepocessor) merupakan bahasa pemrograman yang umum dipakai dalam pembuatan dan pengembangan sistem berbasis web.
`}),e.add({id:127,href:"/python/",title:"Tutorial Python",description:"Python merupakan bahasa pemrograman interpretatif yang multiplatform dan berfokus pada keterbacaan kode.",content:`Python merupakan bahasa pemrograman interpretatif yang multiplatform dan berfokus pada keterbacaan kode.
`}),e.add({id:128,href:"/vbnet/",title:"Tutorial Vb.Net",description:"Vb.Net merupakan bahasa pemrograman untuk membuat aplikasi yang berbasis sistem operasi Windows Microsoft.",content:`Vb.Net merupakan bahasa pemrograman untuk membuat aplikasi yang berbasis sistem operasi Windows Microsoft.
`}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()